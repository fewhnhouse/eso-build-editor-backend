/**
 * This file was automatically generated by nexus-prisma@0.3.7
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      Post: PostObject
      User: UserObject
      Build: BuildObject
      SetSelection: SetSelectionObject
      Set: SetObject
      Modification: ModificationObject
      SkillSelection: SkillSelectionObject
      Skill: SkillObject
      MundusStone: MundusStoneObject
      Buff: BuffObject
      PostConnection: PostConnectionObject
      PageInfo: PageInfoObject
      PostEdge: PostEdgeObject
      AggregatePost: AggregatePostObject
      Verification: VerificationObject
      VerificationConnection: VerificationConnectionObject
      VerificationEdge: VerificationEdgeObject
      AggregateVerification: AggregateVerificationObject
      UserConnection: UserConnectionObject
      UserEdge: UserEdgeObject
      AggregateUser: AggregateUserObject
      MundusStoneConnection: MundusStoneConnectionObject
      MundusStoneEdge: MundusStoneEdgeObject
      AggregateMundusStone: AggregateMundusStoneObject
      BuffConnection: BuffConnectionObject
      BuffEdge: BuffEdgeObject
      AggregateBuff: AggregateBuffObject
      SetSelectionConnection: SetSelectionConnectionObject
      SetSelectionEdge: SetSelectionEdgeObject
      AggregateSetSelection: AggregateSetSelectionObject
      SetConnection: SetConnectionObject
      SetEdge: SetEdgeObject
      AggregateSet: AggregateSetObject
      ModificationConnection: ModificationConnectionObject
      ModificationEdge: ModificationEdgeObject
      AggregateModification: AggregateModificationObject
      SkillSelectionConnection: SkillSelectionConnectionObject
      SkillSelectionEdge: SkillSelectionEdgeObject
      AggregateSkillSelection: AggregateSkillSelectionObject
      SkillConnection: SkillConnectionObject
      SkillEdge: SkillEdgeObject
      AggregateSkill: AggregateSkillObject
      BuildConnection: BuildConnectionObject
      BuildEdge: BuildEdgeObject
      AggregateBuild: AggregateBuildObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      PostSubscriptionPayload: PostSubscriptionPayloadObject
      PostPreviousValues: PostPreviousValuesObject
      VerificationSubscriptionPayload: VerificationSubscriptionPayloadObject
      VerificationPreviousValues: VerificationPreviousValuesObject
      UserSubscriptionPayload: UserSubscriptionPayloadObject
      UserPreviousValues: UserPreviousValuesObject
      MundusStoneSubscriptionPayload: MundusStoneSubscriptionPayloadObject
      MundusStonePreviousValues: MundusStonePreviousValuesObject
      BuffSubscriptionPayload: BuffSubscriptionPayloadObject
      BuffPreviousValues: BuffPreviousValuesObject
      SetSelectionSubscriptionPayload: SetSelectionSubscriptionPayloadObject
      SetSelectionPreviousValues: SetSelectionPreviousValuesObject
      SetSubscriptionPayload: SetSubscriptionPayloadObject
      SetPreviousValues: SetPreviousValuesObject
      ModificationSubscriptionPayload: ModificationSubscriptionPayloadObject
      ModificationPreviousValues: ModificationPreviousValuesObject
      SkillSelectionSubscriptionPayload: SkillSelectionSubscriptionPayloadObject
      SkillSelectionPreviousValues: SkillSelectionPreviousValuesObject
      SkillSubscriptionPayload: SkillSubscriptionPayloadObject
      SkillPreviousValues: SkillPreviousValuesObject
      BuildSubscriptionPayload: BuildSubscriptionPayloadObject
      BuildPreviousValues: BuildPreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      Post: PostFieldDetails
      User: UserFieldDetails
      Build: BuildFieldDetails
      SetSelection: SetSelectionFieldDetails
      Set: SetFieldDetails
      Modification: ModificationFieldDetails
      SkillSelection: SkillSelectionFieldDetails
      Skill: SkillFieldDetails
      MundusStone: MundusStoneFieldDetails
      Buff: BuffFieldDetails
      PostConnection: PostConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      PostEdge: PostEdgeFieldDetails
      AggregatePost: AggregatePostFieldDetails
      Verification: VerificationFieldDetails
      VerificationConnection: VerificationConnectionFieldDetails
      VerificationEdge: VerificationEdgeFieldDetails
      AggregateVerification: AggregateVerificationFieldDetails
      UserConnection: UserConnectionFieldDetails
      UserEdge: UserEdgeFieldDetails
      AggregateUser: AggregateUserFieldDetails
      MundusStoneConnection: MundusStoneConnectionFieldDetails
      MundusStoneEdge: MundusStoneEdgeFieldDetails
      AggregateMundusStone: AggregateMundusStoneFieldDetails
      BuffConnection: BuffConnectionFieldDetails
      BuffEdge: BuffEdgeFieldDetails
      AggregateBuff: AggregateBuffFieldDetails
      SetSelectionConnection: SetSelectionConnectionFieldDetails
      SetSelectionEdge: SetSelectionEdgeFieldDetails
      AggregateSetSelection: AggregateSetSelectionFieldDetails
      SetConnection: SetConnectionFieldDetails
      SetEdge: SetEdgeFieldDetails
      AggregateSet: AggregateSetFieldDetails
      ModificationConnection: ModificationConnectionFieldDetails
      ModificationEdge: ModificationEdgeFieldDetails
      AggregateModification: AggregateModificationFieldDetails
      SkillSelectionConnection: SkillSelectionConnectionFieldDetails
      SkillSelectionEdge: SkillSelectionEdgeFieldDetails
      AggregateSkillSelection: AggregateSkillSelectionFieldDetails
      SkillConnection: SkillConnectionFieldDetails
      SkillEdge: SkillEdgeFieldDetails
      AggregateSkill: AggregateSkillFieldDetails
      BuildConnection: BuildConnectionFieldDetails
      BuildEdge: BuildEdgeFieldDetails
      AggregateBuild: AggregateBuildFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      PostSubscriptionPayload: PostSubscriptionPayloadFieldDetails
      PostPreviousValues: PostPreviousValuesFieldDetails
      VerificationSubscriptionPayload: VerificationSubscriptionPayloadFieldDetails
      VerificationPreviousValues: VerificationPreviousValuesFieldDetails
      UserSubscriptionPayload: UserSubscriptionPayloadFieldDetails
      UserPreviousValues: UserPreviousValuesFieldDetails
      MundusStoneSubscriptionPayload: MundusStoneSubscriptionPayloadFieldDetails
      MundusStonePreviousValues: MundusStonePreviousValuesFieldDetails
      BuffSubscriptionPayload: BuffSubscriptionPayloadFieldDetails
      BuffPreviousValues: BuffPreviousValuesFieldDetails
      SetSelectionSubscriptionPayload: SetSelectionSubscriptionPayloadFieldDetails
      SetSelectionPreviousValues: SetSelectionPreviousValuesFieldDetails
      SetSubscriptionPayload: SetSubscriptionPayloadFieldDetails
      SetPreviousValues: SetPreviousValuesFieldDetails
      ModificationSubscriptionPayload: ModificationSubscriptionPayloadFieldDetails
      ModificationPreviousValues: ModificationPreviousValuesFieldDetails
      SkillSelectionSubscriptionPayload: SkillSelectionSubscriptionPayloadFieldDetails
      SkillSelectionPreviousValues: SkillSelectionPreviousValuesFieldDetails
      SkillSubscriptionPayload: SkillSubscriptionPayloadFieldDetails
      SkillPreviousValues: SkillPreviousValuesFieldDetails
      BuildSubscriptionPayload: BuildSubscriptionPayloadFieldDetails
      BuildPreviousValues: BuildPreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      PostWhereUniqueInput: PostWhereUniqueInputInputObject
      BuildWhereInput: BuildWhereInputInputObject
      UserWhereInput: UserWhereInputInputObject
      SetSelectionWhereInput: SetSelectionWhereInputInputObject
      SetWhereInput: SetWhereInputInputObject
      ModificationWhereInput: ModificationWhereInputInputObject
      SkillSelectionWhereInput: SkillSelectionWhereInputInputObject
      SkillWhereInput: SkillWhereInputInputObject
      MundusStoneWhereInput: MundusStoneWhereInputInputObject
      BuffWhereInput: BuffWhereInputInputObject
      PostWhereInput: PostWhereInputInputObject
      VerificationWhereUniqueInput: VerificationWhereUniqueInputInputObject
      VerificationWhereInput: VerificationWhereInputInputObject
      UserWhereUniqueInput: UserWhereUniqueInputInputObject
      MundusStoneWhereUniqueInput: MundusStoneWhereUniqueInputInputObject
      BuffWhereUniqueInput: BuffWhereUniqueInputInputObject
      SetSelectionWhereUniqueInput: SetSelectionWhereUniqueInputInputObject
      SetWhereUniqueInput: SetWhereUniqueInputInputObject
      ModificationWhereUniqueInput: ModificationWhereUniqueInputInputObject
      SkillSelectionWhereUniqueInput: SkillSelectionWhereUniqueInputInputObject
      SkillWhereUniqueInput: SkillWhereUniqueInputInputObject
      BuildWhereUniqueInput: BuildWhereUniqueInputInputObject
      PostCreateInput: PostCreateInputInputObject
      UserCreateOneInput: UserCreateOneInputInputObject
      UserCreateInput: UserCreateInputInputObject
      BuildCreateManyWithoutOwnerInput: BuildCreateManyWithoutOwnerInputInputObject
      BuildCreateWithoutOwnerInput: BuildCreateWithoutOwnerInputInputObject
      SetSelectionCreateManyInput: SetSelectionCreateManyInputInputObject
      SetSelectionCreateInput: SetSelectionCreateInputInputObject
      SetCreateOneInput: SetCreateOneInputInputObject
      SetCreateInput: SetCreateInputInputObject
      ModificationCreateOneInput: ModificationCreateOneInputInputObject
      ModificationCreateInput: ModificationCreateInputInputObject
      SkillSelectionCreateManyInput: SkillSelectionCreateManyInputInputObject
      SkillSelectionCreateInput: SkillSelectionCreateInputInputObject
      SkillCreateOneInput: SkillCreateOneInputInputObject
      SkillCreateInput: SkillCreateInputInputObject
      MundusStoneCreateOneInput: MundusStoneCreateOneInputInputObject
      MundusStoneCreateInput: MundusStoneCreateInputInputObject
      BuffCreateOneInput: BuffCreateOneInputInputObject
      BuffCreateInput: BuffCreateInputInputObject
      PostUpdateInput: PostUpdateInputInputObject
      UserUpdateOneRequiredInput: UserUpdateOneRequiredInputInputObject
      UserUpdateDataInput: UserUpdateDataInputInputObject
      BuildUpdateManyWithoutOwnerInput: BuildUpdateManyWithoutOwnerInputInputObject
      BuildUpdateWithWhereUniqueWithoutOwnerInput: BuildUpdateWithWhereUniqueWithoutOwnerInputInputObject
      BuildUpdateWithoutOwnerDataInput: BuildUpdateWithoutOwnerDataInputInputObject
      SetSelectionUpdateManyInput: SetSelectionUpdateManyInputInputObject
      SetSelectionUpdateWithWhereUniqueNestedInput: SetSelectionUpdateWithWhereUniqueNestedInputInputObject
      SetSelectionUpdateDataInput: SetSelectionUpdateDataInputInputObject
      SetUpdateOneInput: SetUpdateOneInputInputObject
      SetUpdateDataInput: SetUpdateDataInputInputObject
      SetUpsertNestedInput: SetUpsertNestedInputInputObject
      ModificationUpdateOneInput: ModificationUpdateOneInputInputObject
      ModificationUpdateDataInput: ModificationUpdateDataInputInputObject
      ModificationUpsertNestedInput: ModificationUpsertNestedInputInputObject
      SetSelectionUpsertWithWhereUniqueNestedInput: SetSelectionUpsertWithWhereUniqueNestedInputInputObject
      SetSelectionScalarWhereInput: SetSelectionScalarWhereInputInputObject
      SetSelectionUpdateManyWithWhereNestedInput: SetSelectionUpdateManyWithWhereNestedInputInputObject
      SetSelectionUpdateManyDataInput: SetSelectionUpdateManyDataInputInputObject
      SkillSelectionUpdateManyInput: SkillSelectionUpdateManyInputInputObject
      SkillSelectionUpdateWithWhereUniqueNestedInput: SkillSelectionUpdateWithWhereUniqueNestedInputInputObject
      SkillSelectionUpdateDataInput: SkillSelectionUpdateDataInputInputObject
      SkillUpdateOneInput: SkillUpdateOneInputInputObject
      SkillUpdateDataInput: SkillUpdateDataInputInputObject
      SkillUpsertNestedInput: SkillUpsertNestedInputInputObject
      SkillSelectionUpsertWithWhereUniqueNestedInput: SkillSelectionUpsertWithWhereUniqueNestedInputInputObject
      SkillSelectionScalarWhereInput: SkillSelectionScalarWhereInputInputObject
      SkillSelectionUpdateManyWithWhereNestedInput: SkillSelectionUpdateManyWithWhereNestedInputInputObject
      SkillSelectionUpdateManyDataInput: SkillSelectionUpdateManyDataInputInputObject
      MundusStoneUpdateOneInput: MundusStoneUpdateOneInputInputObject
      MundusStoneUpdateDataInput: MundusStoneUpdateDataInputInputObject
      MundusStoneUpsertNestedInput: MundusStoneUpsertNestedInputInputObject
      BuffUpdateOneInput: BuffUpdateOneInputInputObject
      BuffUpdateDataInput: BuffUpdateDataInputInputObject
      BuffUpsertNestedInput: BuffUpsertNestedInputInputObject
      BuildUpsertWithWhereUniqueWithoutOwnerInput: BuildUpsertWithWhereUniqueWithoutOwnerInputInputObject
      BuildScalarWhereInput: BuildScalarWhereInputInputObject
      BuildUpdateManyWithWhereNestedInput: BuildUpdateManyWithWhereNestedInputInputObject
      BuildUpdateManyDataInput: BuildUpdateManyDataInputInputObject
      UserUpsertNestedInput: UserUpsertNestedInputInputObject
      PostUpdateManyMutationInput: PostUpdateManyMutationInputInputObject
      VerificationCreateInput: VerificationCreateInputInputObject
      VerificationUpdateInput: VerificationUpdateInputInputObject
      VerificationUpdateManyMutationInput: VerificationUpdateManyMutationInputInputObject
      UserUpdateInput: UserUpdateInputInputObject
      UserUpdateManyMutationInput: UserUpdateManyMutationInputInputObject
      MundusStoneUpdateInput: MundusStoneUpdateInputInputObject
      MundusStoneUpdateManyMutationInput: MundusStoneUpdateManyMutationInputInputObject
      BuffUpdateInput: BuffUpdateInputInputObject
      BuffUpdateManyMutationInput: BuffUpdateManyMutationInputInputObject
      SetSelectionUpdateInput: SetSelectionUpdateInputInputObject
      SetSelectionUpdateManyMutationInput: SetSelectionUpdateManyMutationInputInputObject
      SetUpdateInput: SetUpdateInputInputObject
      SetUpdateManyMutationInput: SetUpdateManyMutationInputInputObject
      ModificationUpdateInput: ModificationUpdateInputInputObject
      ModificationUpdateManyMutationInput: ModificationUpdateManyMutationInputInputObject
      SkillSelectionUpdateInput: SkillSelectionUpdateInputInputObject
      SkillSelectionUpdateManyMutationInput: SkillSelectionUpdateManyMutationInputInputObject
      SkillUpdateInput: SkillUpdateInputInputObject
      SkillUpdateManyMutationInput: SkillUpdateManyMutationInputInputObject
      BuildCreateInput: BuildCreateInputInputObject
      UserCreateOneWithoutBuildsInput: UserCreateOneWithoutBuildsInputInputObject
      UserCreateWithoutBuildsInput: UserCreateWithoutBuildsInputInputObject
      BuildUpdateInput: BuildUpdateInputInputObject
      UserUpdateOneWithoutBuildsInput: UserUpdateOneWithoutBuildsInputInputObject
      UserUpdateWithoutBuildsDataInput: UserUpdateWithoutBuildsDataInputInputObject
      UserUpsertWithoutBuildsInput: UserUpsertWithoutBuildsInputInputObject
      BuildUpdateManyMutationInput: BuildUpdateManyMutationInputInputObject
      PostSubscriptionWhereInput: PostSubscriptionWhereInputInputObject
      VerificationSubscriptionWhereInput: VerificationSubscriptionWhereInputInputObject
      UserSubscriptionWhereInput: UserSubscriptionWhereInputInputObject
      MundusStoneSubscriptionWhereInput: MundusStoneSubscriptionWhereInputInputObject
      BuffSubscriptionWhereInput: BuffSubscriptionWhereInputInputObject
      SetSelectionSubscriptionWhereInput: SetSelectionSubscriptionWhereInputInputObject
      SetSubscriptionWhereInput: SetSubscriptionWhereInputInputObject
      ModificationSubscriptionWhereInput: ModificationSubscriptionWhereInputInputObject
      SkillSelectionSubscriptionWhereInput: SkillSelectionSubscriptionWhereInputInputObject
      SkillSubscriptionWhereInput: SkillSubscriptionWhereInputInputObject
      BuildSubscriptionWhereInput: BuildSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    BuildOrderByInput: BuildOrderByInputValues,
    SetSelectionOrderByInput: SetSelectionOrderByInputValues,
    SkillSelectionOrderByInput: SkillSelectionOrderByInputValues,
    PostOrderByInput: PostOrderByInputValues,
    VerificationOrderByInput: VerificationOrderByInputValues,
    UserOrderByInput: UserOrderByInputValues,
    MundusStoneOrderByInput: MundusStoneOrderByInputValues,
    BuffOrderByInput: BuffOrderByInputValues,
    SetOrderByInput: SetOrderByInputValues,
    ModificationOrderByInput: ModificationOrderByInputValues,
    SkillOrderByInput: SkillOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'post', args?: QueryPostArgs[] | false, alias?: string  } 
  | { name: 'posts', args?: QueryPostsArgs[] | false, alias?: string  } 
  | { name: 'postsConnection', args?: QueryPostsConnectionArgs[] | false, alias?: string  } 
  | { name: 'verification', args?: QueryVerificationArgs[] | false, alias?: string  } 
  | { name: 'verifications', args?: QueryVerificationsArgs[] | false, alias?: string  } 
  | { name: 'verificationsConnection', args?: QueryVerificationsConnectionArgs[] | false, alias?: string  } 
  | { name: 'user', args?: QueryUserArgs[] | false, alias?: string  } 
  | { name: 'users', args?: QueryUsersArgs[] | false, alias?: string  } 
  | { name: 'usersConnection', args?: QueryUsersConnectionArgs[] | false, alias?: string  } 
  | { name: 'mundusStone', args?: QueryMundusStoneArgs[] | false, alias?: string  } 
  | { name: 'mundusStones', args?: QueryMundusStonesArgs[] | false, alias?: string  } 
  | { name: 'mundusStonesConnection', args?: QueryMundusStonesConnectionArgs[] | false, alias?: string  } 
  | { name: 'buff', args?: QueryBuffArgs[] | false, alias?: string  } 
  | { name: 'buffs', args?: QueryBuffsArgs[] | false, alias?: string  } 
  | { name: 'buffsConnection', args?: QueryBuffsConnectionArgs[] | false, alias?: string  } 
  | { name: 'setSelection', args?: QuerySetSelectionArgs[] | false, alias?: string  } 
  | { name: 'setSelections', args?: QuerySetSelectionsArgs[] | false, alias?: string  } 
  | { name: 'setSelectionsConnection', args?: QuerySetSelectionsConnectionArgs[] | false, alias?: string  } 
  | { name: 'set', args?: QuerySetArgs[] | false, alias?: string  } 
  | { name: 'sets', args?: QuerySetsArgs[] | false, alias?: string  } 
  | { name: 'setsConnection', args?: QuerySetsConnectionArgs[] | false, alias?: string  } 
  | { name: 'modification', args?: QueryModificationArgs[] | false, alias?: string  } 
  | { name: 'modifications', args?: QueryModificationsArgs[] | false, alias?: string  } 
  | { name: 'modificationsConnection', args?: QueryModificationsConnectionArgs[] | false, alias?: string  } 
  | { name: 'skillSelection', args?: QuerySkillSelectionArgs[] | false, alias?: string  } 
  | { name: 'skillSelections', args?: QuerySkillSelectionsArgs[] | false, alias?: string  } 
  | { name: 'skillSelectionsConnection', args?: QuerySkillSelectionsConnectionArgs[] | false, alias?: string  } 
  | { name: 'skill', args?: QuerySkillArgs[] | false, alias?: string  } 
  | { name: 'skills', args?: QuerySkillsArgs[] | false, alias?: string  } 
  | { name: 'skillsConnection', args?: QuerySkillsConnectionArgs[] | false, alias?: string  } 
  | { name: 'build', args?: QueryBuildArgs[] | false, alias?: string  } 
  | { name: 'builds', args?: QueryBuildsArgs[] | false, alias?: string  } 
  | { name: 'buildsConnection', args?: QueryBuildsConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'post'
  | 'posts'
  | 'postsConnection'
  | 'verification'
  | 'verifications'
  | 'verificationsConnection'
  | 'user'
  | 'users'
  | 'usersConnection'
  | 'mundusStone'
  | 'mundusStones'
  | 'mundusStonesConnection'
  | 'buff'
  | 'buffs'
  | 'buffsConnection'
  | 'setSelection'
  | 'setSelections'
  | 'setSelectionsConnection'
  | 'set'
  | 'sets'
  | 'setsConnection'
  | 'modification'
  | 'modifications'
  | 'modificationsConnection'
  | 'skillSelection'
  | 'skillSelections'
  | 'skillSelectionsConnection'
  | 'skill'
  | 'skills'
  | 'skillsConnection'
  | 'build'
  | 'builds'
  | 'buildsConnection'


type QueryPostArgs =
  | 'where'
type QueryPostsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPostsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryVerificationArgs =
  | 'where'
type QueryVerificationsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryVerificationsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUserArgs =
  | 'where'
type QueryUsersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUsersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMundusStoneArgs =
  | 'where'
type QueryMundusStonesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMundusStonesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryBuffArgs =
  | 'where'
type QueryBuffsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryBuffsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySetSelectionArgs =
  | 'where'
type QuerySetSelectionsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySetSelectionsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySetArgs =
  | 'where'
type QuerySetsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySetsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryModificationArgs =
  | 'where'
type QueryModificationsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryModificationsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySkillSelectionArgs =
  | 'where'
type QuerySkillSelectionsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySkillSelectionsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySkillArgs =
  | 'where'
type QuerySkillsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySkillsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryBuildArgs =
  | 'where'
type QueryBuildsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryBuildsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  post: {
    type: 'Post'
    args: Record<QueryPostArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: PostWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Post | null> | prisma.Post | null
  }
  posts: {
    type: 'Post'
    args: Record<QueryPostsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PostWhereInput | null, orderBy?: prisma.PostOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Post[]> | prisma.Post[]
  }
  postsConnection: {
    type: 'PostConnection'
    args: Record<QueryPostsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PostWhereInput | null, orderBy?: prisma.PostOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostConnection> | prisma.PostConnection
  }
  verification: {
    type: 'Verification'
    args: Record<QueryVerificationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: VerificationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Verification | null> | prisma.Verification | null
  }
  verifications: {
    type: 'Verification'
    args: Record<QueryVerificationsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: VerificationWhereInput | null, orderBy?: prisma.VerificationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Verification[]> | prisma.Verification[]
  }
  verificationsConnection: {
    type: 'VerificationConnection'
    args: Record<QueryVerificationsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: VerificationWhereInput | null, orderBy?: prisma.VerificationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VerificationConnection> | prisma.VerificationConnection
  }
  user: {
    type: 'User'
    args: Record<QueryUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  users: {
    type: 'User'
    args: Record<QueryUsersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  usersConnection: {
    type: 'UserConnection'
    args: Record<QueryUsersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserConnection> | prisma.UserConnection
  }
  mundusStone: {
    type: 'MundusStone'
    args: Record<QueryMundusStoneArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: MundusStoneWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MundusStone | null> | prisma.MundusStone | null
  }
  mundusStones: {
    type: 'MundusStone'
    args: Record<QueryMundusStonesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MundusStoneWhereInput | null, orderBy?: prisma.MundusStoneOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MundusStone[]> | prisma.MundusStone[]
  }
  mundusStonesConnection: {
    type: 'MundusStoneConnection'
    args: Record<QueryMundusStonesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MundusStoneWhereInput | null, orderBy?: prisma.MundusStoneOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MundusStoneConnection> | prisma.MundusStoneConnection
  }
  buff: {
    type: 'Buff'
    args: Record<QueryBuffArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: BuffWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Buff | null> | prisma.Buff | null
  }
  buffs: {
    type: 'Buff'
    args: Record<QueryBuffsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: BuffWhereInput | null, orderBy?: prisma.BuffOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Buff[]> | prisma.Buff[]
  }
  buffsConnection: {
    type: 'BuffConnection'
    args: Record<QueryBuffsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: BuffWhereInput | null, orderBy?: prisma.BuffOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BuffConnection> | prisma.BuffConnection
  }
  setSelection: {
    type: 'SetSelection'
    args: Record<QuerySetSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: SetSelectionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetSelection | null> | prisma.SetSelection | null
  }
  setSelections: {
    type: 'SetSelection'
    args: Record<QuerySetSelectionsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SetSelectionWhereInput | null, orderBy?: prisma.SetSelectionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetSelection[]> | prisma.SetSelection[]
  }
  setSelectionsConnection: {
    type: 'SetSelectionConnection'
    args: Record<QuerySetSelectionsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SetSelectionWhereInput | null, orderBy?: prisma.SetSelectionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetSelectionConnection> | prisma.SetSelectionConnection
  }
  set: {
    type: 'Set'
    args: Record<QuerySetArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: SetWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Set | null> | prisma.Set | null
  }
  sets: {
    type: 'Set'
    args: Record<QuerySetsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SetWhereInput | null, orderBy?: prisma.SetOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Set[]> | prisma.Set[]
  }
  setsConnection: {
    type: 'SetConnection'
    args: Record<QuerySetsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SetWhereInput | null, orderBy?: prisma.SetOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetConnection> | prisma.SetConnection
  }
  modification: {
    type: 'Modification'
    args: Record<QueryModificationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ModificationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Modification | null> | prisma.Modification | null
  }
  modifications: {
    type: 'Modification'
    args: Record<QueryModificationsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ModificationWhereInput | null, orderBy?: prisma.ModificationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Modification[]> | prisma.Modification[]
  }
  modificationsConnection: {
    type: 'ModificationConnection'
    args: Record<QueryModificationsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ModificationWhereInput | null, orderBy?: prisma.ModificationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ModificationConnection> | prisma.ModificationConnection
  }
  skillSelection: {
    type: 'SkillSelection'
    args: Record<QuerySkillSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: SkillSelectionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillSelection | null> | prisma.SkillSelection | null
  }
  skillSelections: {
    type: 'SkillSelection'
    args: Record<QuerySkillSelectionsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SkillSelectionWhereInput | null, orderBy?: prisma.SkillSelectionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillSelection[]> | prisma.SkillSelection[]
  }
  skillSelectionsConnection: {
    type: 'SkillSelectionConnection'
    args: Record<QuerySkillSelectionsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SkillSelectionWhereInput | null, orderBy?: prisma.SkillSelectionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillSelectionConnection> | prisma.SkillSelectionConnection
  }
  skill: {
    type: 'Skill'
    args: Record<QuerySkillArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: SkillWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill | null> | prisma.Skill | null
  }
  skills: {
    type: 'Skill'
    args: Record<QuerySkillsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SkillWhereInput | null, orderBy?: prisma.SkillOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill[]> | prisma.Skill[]
  }
  skillsConnection: {
    type: 'SkillConnection'
    args: Record<QuerySkillsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SkillWhereInput | null, orderBy?: prisma.SkillOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillConnection> | prisma.SkillConnection
  }
  build: {
    type: 'Build'
    args: Record<QueryBuildArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: BuildWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Build | null> | prisma.Build | null
  }
  builds: {
    type: 'Build'
    args: Record<QueryBuildsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: BuildWhereInput | null, orderBy?: prisma.BuildOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Build[]> | prisma.Build[]
  }
  buildsConnection: {
    type: 'BuildConnection'
    args: Record<QueryBuildsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: BuildWhereInput | null, orderBy?: prisma.BuildOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BuildConnection> | prisma.BuildConnection
  }
}
  

// Types for Post

type PostObject =
  | PostFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'published', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'content', args?: [] | false, alias?: string  } 
  | { name: 'author', args?: [] | false, alias?: string  } 

type PostFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'published'
  | 'title'
  | 'content'
  | 'author'



  

export interface PostFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  published: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  content: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  author: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Post">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
}
  

// Types for User

type UserObject =
  | UserFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'verified', args?: [] | false, alias?: string  } 
  | { name: 'builds', args?: UserBuildsArgs[] | false, alias?: string  } 

type UserFields =
  | 'id'
  | 'email'
  | 'password'
  | 'name'
  | 'verified'
  | 'builds'


type UserBuildsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface UserFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  verified: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  builds: {
    type: 'Build'
    args: Record<UserBuildsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: BuildWhereInput | null, orderBy?: prisma.BuildOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Build[]> | prisma.Build[]
  }
}
  

// Types for Build

type BuildObject =
  | BuildFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'owner', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'race', args?: [] | false, alias?: string  } 
  | { name: 'esoClass', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'published', args?: [] | false, alias?: string  } 
  | { name: 'bigPieceSelection', args?: BuildBigPieceSelectionArgs[] | false, alias?: string  } 
  | { name: 'smallPieceSelection', args?: BuildSmallPieceSelectionArgs[] | false, alias?: string  } 
  | { name: 'jewelrySelection', args?: BuildJewelrySelectionArgs[] | false, alias?: string  } 
  | { name: 'frontbarSelection', args?: BuildFrontbarSelectionArgs[] | false, alias?: string  } 
  | { name: 'backbarSelection', args?: BuildBackbarSelectionArgs[] | false, alias?: string  } 
  | { name: 'newBarOne', args?: BuildNewBarOneArgs[] | false, alias?: string  } 
  | { name: 'newBarTwo', args?: BuildNewBarTwoArgs[] | false, alias?: string  } 
  | { name: 'ultimateOne', args?: [] | false, alias?: string  } 
  | { name: 'ultimateTwo', args?: [] | false, alias?: string  } 
  | { name: 'mundusStone', args?: [] | false, alias?: string  } 
  | { name: 'buff', args?: [] | false, alias?: string  } 

type BuildFields =
  | 'id'
  | 'owner'
  | 'name'
  | 'race'
  | 'esoClass'
  | 'createdAt'
  | 'updatedAt'
  | 'published'
  | 'bigPieceSelection'
  | 'smallPieceSelection'
  | 'jewelrySelection'
  | 'frontbarSelection'
  | 'backbarSelection'
  | 'newBarOne'
  | 'newBarTwo'
  | 'ultimateOne'
  | 'ultimateTwo'
  | 'mundusStone'
  | 'buff'


type BuildBigPieceSelectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type BuildSmallPieceSelectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type BuildJewelrySelectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type BuildFrontbarSelectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type BuildBackbarSelectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type BuildNewBarOneArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type BuildNewBarTwoArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface BuildFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  owner: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Build">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  race: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  esoClass: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  published: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  bigPieceSelection: {
    type: 'SetSelection'
    args: Record<BuildBigPieceSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Build">,
      args: { where?: SetSelectionWhereInput | null, orderBy?: prisma.SetSelectionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetSelection[]> | prisma.SetSelection[]
  }
  smallPieceSelection: {
    type: 'SetSelection'
    args: Record<BuildSmallPieceSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Build">,
      args: { where?: SetSelectionWhereInput | null, orderBy?: prisma.SetSelectionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetSelection[]> | prisma.SetSelection[]
  }
  jewelrySelection: {
    type: 'SetSelection'
    args: Record<BuildJewelrySelectionArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Build">,
      args: { where?: SetSelectionWhereInput | null, orderBy?: prisma.SetSelectionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetSelection[]> | prisma.SetSelection[]
  }
  frontbarSelection: {
    type: 'SetSelection'
    args: Record<BuildFrontbarSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Build">,
      args: { where?: SetSelectionWhereInput | null, orderBy?: prisma.SetSelectionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetSelection[]> | prisma.SetSelection[]
  }
  backbarSelection: {
    type: 'SetSelection'
    args: Record<BuildBackbarSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Build">,
      args: { where?: SetSelectionWhereInput | null, orderBy?: prisma.SetSelectionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetSelection[]> | prisma.SetSelection[]
  }
  newBarOne: {
    type: 'SkillSelection'
    args: Record<BuildNewBarOneArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Build">,
      args: { where?: SkillSelectionWhereInput | null, orderBy?: prisma.SkillSelectionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillSelection[]> | prisma.SkillSelection[]
  }
  newBarTwo: {
    type: 'SkillSelection'
    args: Record<BuildNewBarTwoArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Build">,
      args: { where?: SkillSelectionWhereInput | null, orderBy?: prisma.SkillSelectionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillSelection[]> | prisma.SkillSelection[]
  }
  ultimateOne: {
    type: 'Skill'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Build">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill | null> | prisma.Skill | null
  }
  ultimateTwo: {
    type: 'Skill'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Build">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill | null> | prisma.Skill | null
  }
  mundusStone: {
    type: 'MundusStone'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Build">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MundusStone | null> | prisma.MundusStone | null
  }
  buff: {
    type: 'Buff'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Build">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Buff | null> | prisma.Buff | null
  }
}
  

// Types for SetSelection

type SetSelectionObject =
  | SetSelectionFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'icon', args?: [] | false, alias?: string  } 
  | { name: 'slot', args?: [] | false, alias?: string  } 
  | { name: 'selectedSet', args?: [] | false, alias?: string  } 
  | { name: 'trait', args?: [] | false, alias?: string  } 
  | { name: 'glyph', args?: [] | false, alias?: string  } 

type SetSelectionFields =
  | 'id'
  | 'icon'
  | 'slot'
  | 'selectedSet'
  | 'trait'
  | 'glyph'



  

export interface SetSelectionFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  icon: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  slot: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  selectedSet: {
    type: 'Set'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SetSelection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Set | null> | prisma.Set | null
  }
  trait: {
    type: 'Modification'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SetSelection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Modification | null> | prisma.Modification | null
  }
  glyph: {
    type: 'Modification'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SetSelection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Modification | null> | prisma.Modification | null
  }
}
  

// Types for Set

type SetObject =
  | SetFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'setId', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'location', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'slug', args?: [] | false, alias?: string  } 
  | { name: 'bonus_item_1', args?: [] | false, alias?: string  } 
  | { name: 'bonus_item_2', args?: [] | false, alias?: string  } 
  | { name: 'bonus_item_3', args?: [] | false, alias?: string  } 
  | { name: 'bonus_item_4', args?: [] | false, alias?: string  } 
  | { name: 'bonus_item_5', args?: [] | false, alias?: string  } 
  | { name: 'has_jewels', args?: [] | false, alias?: string  } 
  | { name: 'has_weapons', args?: [] | false, alias?: string  } 
  | { name: 'has_heavy_armor', args?: [] | false, alias?: string  } 
  | { name: 'has_light_armor', args?: [] | false, alias?: string  } 
  | { name: 'has_medium_armor', args?: [] | false, alias?: string  } 
  | { name: 'traits_needed', args?: [] | false, alias?: string  } 
  | { name: 'pts', args?: [] | false, alias?: string  } 
  | { name: 'eso_id', args?: [] | false, alias?: string  } 

type SetFields =
  | 'id'
  | 'setId'
  | 'name'
  | 'location'
  | 'type'
  | 'slug'
  | 'bonus_item_1'
  | 'bonus_item_2'
  | 'bonus_item_3'
  | 'bonus_item_4'
  | 'bonus_item_5'
  | 'has_jewels'
  | 'has_weapons'
  | 'has_heavy_armor'
  | 'has_light_armor'
  | 'has_medium_armor'
  | 'traits_needed'
  | 'pts'
  | 'eso_id'



  

export interface SetFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  setId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  location: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  type: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  slug: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  bonus_item_1: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  bonus_item_2: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  bonus_item_3: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  bonus_item_4: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  bonus_item_5: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  has_jewels: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  has_weapons: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  has_heavy_armor: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  has_light_armor: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  has_medium_armor: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  traits_needed: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  pts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  eso_id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Modification

type ModificationObject =
  | ModificationFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'itemType', args?: [] | false, alias?: string  } 
  | { name: 'modificationType', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'icon', args?: [] | false, alias?: string  } 

type ModificationFields =
  | 'id'
  | 'type'
  | 'itemType'
  | 'modificationType'
  | 'description'
  | 'icon'



  

export interface ModificationFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  type: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  itemType: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  modificationType: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  icon: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for SkillSelection

type SkillSelectionObject =
  | SkillSelectionFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'index', args?: [] | false, alias?: string  } 
  | { name: 'skill', args?: [] | false, alias?: string  } 

type SkillSelectionFields =
  | 'id'
  | 'index'
  | 'skill'



  

export interface SkillSelectionFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  index: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  skill: {
    type: 'Skill'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SkillSelection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill | null> | prisma.Skill | null
  }
}
  

// Types for Skill

type SkillObject =
  | SkillFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'skillId', args?: [] | false, alias?: string  } 
  | { name: 'cast_time', args?: [] | false, alias?: string  } 
  | { name: 'cost', args?: [] | false, alias?: string  } 
  | { name: 'effect_1', args?: [] | false, alias?: string  } 
  | { name: 'effect_2', args?: [] | false, alias?: string  } 
  | { name: 'icon', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'parent', args?: [] | false, alias?: string  } 
  | { name: 'pts', args?: [] | false, alias?: string  } 
  | { name: 'range', args?: [] | false, alias?: string  } 
  | { name: 'skillline', args?: [] | false, alias?: string  } 
  | { name: 'slug', args?: [] | false, alias?: string  } 
  | { name: 'target', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'unlocks_at', args?: [] | false, alias?: string  } 

type SkillFields =
  | 'id'
  | 'skillId'
  | 'cast_time'
  | 'cost'
  | 'effect_1'
  | 'effect_2'
  | 'icon'
  | 'name'
  | 'parent'
  | 'pts'
  | 'range'
  | 'skillline'
  | 'slug'
  | 'target'
  | 'type'
  | 'unlocks_at'



  

export interface SkillFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  skillId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  cast_time: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  cost: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  effect_1: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  effect_2: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  icon: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  parent: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  pts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  range: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  skillline: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  slug: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  target: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  type: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  unlocks_at: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for MundusStone

type MundusStoneObject =
  | MundusStoneFields
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'aldmeri', args?: [] | false, alias?: string  } 
  | { name: 'daggerfall', args?: [] | false, alias?: string  } 
  | { name: 'ebonheart', args?: [] | false, alias?: string  } 
  | { name: 'effect', args?: [] | false, alias?: string  } 
  | { name: 'value', args?: [] | false, alias?: string  } 
  | { name: 'icon', args?: [] | false, alias?: string  } 
  | { name: 'id', args?: [] | false, alias?: string  } 

type MundusStoneFields =
  | 'name'
  | 'aldmeri'
  | 'daggerfall'
  | 'ebonheart'
  | 'effect'
  | 'value'
  | 'icon'
  | 'id'



  

export interface MundusStoneFieldDetails {
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  aldmeri: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  daggerfall: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  ebonheart: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  effect: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  value: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  icon: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Buff

type BuffObject =
  | BuffFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'buffDescription', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'duration', args?: [] | false, alias?: string  } 
  | { name: 'notes', args?: [] | false, alias?: string  } 
  | { name: 'icon', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'buffType', args?: [] | false, alias?: string  } 
  | { name: 'quality', args?: [] | false, alias?: string  } 

type BuffFields =
  | 'id'
  | 'name'
  | 'buffDescription'
  | 'description'
  | 'duration'
  | 'notes'
  | 'icon'
  | 'type'
  | 'buffType'
  | 'quality'



  

export interface BuffFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  buffDescription: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  duration: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  notes: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  icon: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  type: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  buffType: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  quality: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PostConnection

type PostConnectionObject =
  | PostConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type PostConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface PostConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PostConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'PostEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"PostConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostEdge[]> | prisma.PostEdge[]
  }
  aggregate: {
    type: 'AggregatePost'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PostConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregatePost> | prisma.AggregatePost
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for PostEdge

type PostEdgeObject =
  | PostEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type PostEdgeFields =
  | 'node'
  | 'cursor'



  

export interface PostEdgeFieldDetails {
  node: {
    type: 'Post'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PostEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Post> | prisma.Post
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregatePost

type AggregatePostObject =
  | AggregatePostFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregatePostFields =
  | 'count'



  

export interface AggregatePostFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Verification

type VerificationObject =
  | VerificationFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'token', args?: [] | false, alias?: string  } 
  | { name: 'user', args?: [] | false, alias?: string  } 

type VerificationFields =
  | 'id'
  | 'token'
  | 'user'



  

export interface VerificationFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  token: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  user: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Verification">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
}
  

// Types for VerificationConnection

type VerificationConnectionObject =
  | VerificationConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type VerificationConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface VerificationConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"VerificationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'VerificationEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"VerificationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VerificationEdge[]> | prisma.VerificationEdge[]
  }
  aggregate: {
    type: 'AggregateVerification'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"VerificationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateVerification> | prisma.AggregateVerification
  }
}
  

// Types for VerificationEdge

type VerificationEdgeObject =
  | VerificationEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type VerificationEdgeFields =
  | 'node'
  | 'cursor'



  

export interface VerificationEdgeFieldDetails {
  node: {
    type: 'Verification'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"VerificationEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Verification> | prisma.Verification
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateVerification

type AggregateVerificationObject =
  | AggregateVerificationFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateVerificationFields =
  | 'count'



  

export interface AggregateVerificationFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for UserConnection

type UserConnectionObject =
  | UserConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type UserConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface UserConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'UserEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserEdge[]> | prisma.UserEdge[]
  }
  aggregate: {
    type: 'AggregateUser'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateUser> | prisma.AggregateUser
  }
}
  

// Types for UserEdge

type UserEdgeObject =
  | UserEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type UserEdgeFields =
  | 'node'
  | 'cursor'



  

export interface UserEdgeFieldDetails {
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateUser

type AggregateUserObject =
  | AggregateUserFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateUserFields =
  | 'count'



  

export interface AggregateUserFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MundusStoneConnection

type MundusStoneConnectionObject =
  | MundusStoneConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type MundusStoneConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface MundusStoneConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MundusStoneConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'MundusStoneEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"MundusStoneConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MundusStoneEdge[]> | prisma.MundusStoneEdge[]
  }
  aggregate: {
    type: 'AggregateMundusStone'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MundusStoneConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateMundusStone> | prisma.AggregateMundusStone
  }
}
  

// Types for MundusStoneEdge

type MundusStoneEdgeObject =
  | MundusStoneEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type MundusStoneEdgeFields =
  | 'node'
  | 'cursor'



  

export interface MundusStoneEdgeFieldDetails {
  node: {
    type: 'MundusStone'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MundusStoneEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MundusStone> | prisma.MundusStone
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateMundusStone

type AggregateMundusStoneObject =
  | AggregateMundusStoneFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateMundusStoneFields =
  | 'count'



  

export interface AggregateMundusStoneFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for BuffConnection

type BuffConnectionObject =
  | BuffConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type BuffConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface BuffConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BuffConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'BuffEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"BuffConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BuffEdge[]> | prisma.BuffEdge[]
  }
  aggregate: {
    type: 'AggregateBuff'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BuffConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateBuff> | prisma.AggregateBuff
  }
}
  

// Types for BuffEdge

type BuffEdgeObject =
  | BuffEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type BuffEdgeFields =
  | 'node'
  | 'cursor'



  

export interface BuffEdgeFieldDetails {
  node: {
    type: 'Buff'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BuffEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Buff> | prisma.Buff
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateBuff

type AggregateBuffObject =
  | AggregateBuffFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateBuffFields =
  | 'count'



  

export interface AggregateBuffFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SetSelectionConnection

type SetSelectionConnectionObject =
  | SetSelectionConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type SetSelectionConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface SetSelectionConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SetSelectionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'SetSelectionEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"SetSelectionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetSelectionEdge[]> | prisma.SetSelectionEdge[]
  }
  aggregate: {
    type: 'AggregateSetSelection'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SetSelectionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateSetSelection> | prisma.AggregateSetSelection
  }
}
  

// Types for SetSelectionEdge

type SetSelectionEdgeObject =
  | SetSelectionEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type SetSelectionEdgeFields =
  | 'node'
  | 'cursor'



  

export interface SetSelectionEdgeFieldDetails {
  node: {
    type: 'SetSelection'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SetSelectionEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetSelection> | prisma.SetSelection
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateSetSelection

type AggregateSetSelectionObject =
  | AggregateSetSelectionFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateSetSelectionFields =
  | 'count'



  

export interface AggregateSetSelectionFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SetConnection

type SetConnectionObject =
  | SetConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type SetConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface SetConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SetConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'SetEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"SetConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetEdge[]> | prisma.SetEdge[]
  }
  aggregate: {
    type: 'AggregateSet'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SetConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateSet> | prisma.AggregateSet
  }
}
  

// Types for SetEdge

type SetEdgeObject =
  | SetEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type SetEdgeFields =
  | 'node'
  | 'cursor'



  

export interface SetEdgeFieldDetails {
  node: {
    type: 'Set'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SetEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Set> | prisma.Set
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateSet

type AggregateSetObject =
  | AggregateSetFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateSetFields =
  | 'count'



  

export interface AggregateSetFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ModificationConnection

type ModificationConnectionObject =
  | ModificationConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ModificationConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ModificationConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ModificationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ModificationEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ModificationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ModificationEdge[]> | prisma.ModificationEdge[]
  }
  aggregate: {
    type: 'AggregateModification'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ModificationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateModification> | prisma.AggregateModification
  }
}
  

// Types for ModificationEdge

type ModificationEdgeObject =
  | ModificationEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ModificationEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ModificationEdgeFieldDetails {
  node: {
    type: 'Modification'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ModificationEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Modification> | prisma.Modification
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateModification

type AggregateModificationObject =
  | AggregateModificationFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateModificationFields =
  | 'count'



  

export interface AggregateModificationFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SkillSelectionConnection

type SkillSelectionConnectionObject =
  | SkillSelectionConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type SkillSelectionConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface SkillSelectionConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SkillSelectionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'SkillSelectionEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"SkillSelectionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillSelectionEdge[]> | prisma.SkillSelectionEdge[]
  }
  aggregate: {
    type: 'AggregateSkillSelection'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SkillSelectionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateSkillSelection> | prisma.AggregateSkillSelection
  }
}
  

// Types for SkillSelectionEdge

type SkillSelectionEdgeObject =
  | SkillSelectionEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type SkillSelectionEdgeFields =
  | 'node'
  | 'cursor'



  

export interface SkillSelectionEdgeFieldDetails {
  node: {
    type: 'SkillSelection'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SkillSelectionEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillSelection> | prisma.SkillSelection
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateSkillSelection

type AggregateSkillSelectionObject =
  | AggregateSkillSelectionFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateSkillSelectionFields =
  | 'count'



  

export interface AggregateSkillSelectionFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SkillConnection

type SkillConnectionObject =
  | SkillConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type SkillConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface SkillConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SkillConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'SkillEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"SkillConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillEdge[]> | prisma.SkillEdge[]
  }
  aggregate: {
    type: 'AggregateSkill'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SkillConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateSkill> | prisma.AggregateSkill
  }
}
  

// Types for SkillEdge

type SkillEdgeObject =
  | SkillEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type SkillEdgeFields =
  | 'node'
  | 'cursor'



  

export interface SkillEdgeFieldDetails {
  node: {
    type: 'Skill'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SkillEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill> | prisma.Skill
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateSkill

type AggregateSkillObject =
  | AggregateSkillFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateSkillFields =
  | 'count'



  

export interface AggregateSkillFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for BuildConnection

type BuildConnectionObject =
  | BuildConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type BuildConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface BuildConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BuildConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'BuildEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"BuildConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BuildEdge[]> | prisma.BuildEdge[]
  }
  aggregate: {
    type: 'AggregateBuild'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BuildConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateBuild> | prisma.AggregateBuild
  }
}
  

// Types for BuildEdge

type BuildEdgeObject =
  | BuildEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type BuildEdgeFields =
  | 'node'
  | 'cursor'



  

export interface BuildEdgeFieldDetails {
  node: {
    type: 'Build'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BuildEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Build> | prisma.Build
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateBuild

type AggregateBuildObject =
  | AggregateBuildFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateBuildFields =
  | 'count'



  

export interface AggregateBuildFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createPost', args?: MutationCreatePostArgs[] | false, alias?: string  } 
  | { name: 'updatePost', args?: MutationUpdatePostArgs[] | false, alias?: string  } 
  | { name: 'updateManyPosts', args?: MutationUpdateManyPostsArgs[] | false, alias?: string  } 
  | { name: 'upsertPost', args?: MutationUpsertPostArgs[] | false, alias?: string  } 
  | { name: 'deletePost', args?: MutationDeletePostArgs[] | false, alias?: string  } 
  | { name: 'deleteManyPosts', args?: MutationDeleteManyPostsArgs[] | false, alias?: string  } 
  | { name: 'createVerification', args?: MutationCreateVerificationArgs[] | false, alias?: string  } 
  | { name: 'updateVerification', args?: MutationUpdateVerificationArgs[] | false, alias?: string  } 
  | { name: 'updateManyVerifications', args?: MutationUpdateManyVerificationsArgs[] | false, alias?: string  } 
  | { name: 'upsertVerification', args?: MutationUpsertVerificationArgs[] | false, alias?: string  } 
  | { name: 'deleteVerification', args?: MutationDeleteVerificationArgs[] | false, alias?: string  } 
  | { name: 'deleteManyVerifications', args?: MutationDeleteManyVerificationsArgs[] | false, alias?: string  } 
  | { name: 'createUser', args?: MutationCreateUserArgs[] | false, alias?: string  } 
  | { name: 'updateUser', args?: MutationUpdateUserArgs[] | false, alias?: string  } 
  | { name: 'updateManyUsers', args?: MutationUpdateManyUsersArgs[] | false, alias?: string  } 
  | { name: 'upsertUser', args?: MutationUpsertUserArgs[] | false, alias?: string  } 
  | { name: 'deleteUser', args?: MutationDeleteUserArgs[] | false, alias?: string  } 
  | { name: 'deleteManyUsers', args?: MutationDeleteManyUsersArgs[] | false, alias?: string  } 
  | { name: 'createMundusStone', args?: MutationCreateMundusStoneArgs[] | false, alias?: string  } 
  | { name: 'updateMundusStone', args?: MutationUpdateMundusStoneArgs[] | false, alias?: string  } 
  | { name: 'updateManyMundusStones', args?: MutationUpdateManyMundusStonesArgs[] | false, alias?: string  } 
  | { name: 'upsertMundusStone', args?: MutationUpsertMundusStoneArgs[] | false, alias?: string  } 
  | { name: 'deleteMundusStone', args?: MutationDeleteMundusStoneArgs[] | false, alias?: string  } 
  | { name: 'deleteManyMundusStones', args?: MutationDeleteManyMundusStonesArgs[] | false, alias?: string  } 
  | { name: 'createBuff', args?: MutationCreateBuffArgs[] | false, alias?: string  } 
  | { name: 'updateBuff', args?: MutationUpdateBuffArgs[] | false, alias?: string  } 
  | { name: 'updateManyBuffs', args?: MutationUpdateManyBuffsArgs[] | false, alias?: string  } 
  | { name: 'upsertBuff', args?: MutationUpsertBuffArgs[] | false, alias?: string  } 
  | { name: 'deleteBuff', args?: MutationDeleteBuffArgs[] | false, alias?: string  } 
  | { name: 'deleteManyBuffs', args?: MutationDeleteManyBuffsArgs[] | false, alias?: string  } 
  | { name: 'createSetSelection', args?: MutationCreateSetSelectionArgs[] | false, alias?: string  } 
  | { name: 'updateSetSelection', args?: MutationUpdateSetSelectionArgs[] | false, alias?: string  } 
  | { name: 'updateManySetSelections', args?: MutationUpdateManySetSelectionsArgs[] | false, alias?: string  } 
  | { name: 'upsertSetSelection', args?: MutationUpsertSetSelectionArgs[] | false, alias?: string  } 
  | { name: 'deleteSetSelection', args?: MutationDeleteSetSelectionArgs[] | false, alias?: string  } 
  | { name: 'deleteManySetSelections', args?: MutationDeleteManySetSelectionsArgs[] | false, alias?: string  } 
  | { name: 'createSet', args?: MutationCreateSetArgs[] | false, alias?: string  } 
  | { name: 'updateSet', args?: MutationUpdateSetArgs[] | false, alias?: string  } 
  | { name: 'updateManySets', args?: MutationUpdateManySetsArgs[] | false, alias?: string  } 
  | { name: 'upsertSet', args?: MutationUpsertSetArgs[] | false, alias?: string  } 
  | { name: 'deleteSet', args?: MutationDeleteSetArgs[] | false, alias?: string  } 
  | { name: 'deleteManySets', args?: MutationDeleteManySetsArgs[] | false, alias?: string  } 
  | { name: 'createModification', args?: MutationCreateModificationArgs[] | false, alias?: string  } 
  | { name: 'updateModification', args?: MutationUpdateModificationArgs[] | false, alias?: string  } 
  | { name: 'updateManyModifications', args?: MutationUpdateManyModificationsArgs[] | false, alias?: string  } 
  | { name: 'upsertModification', args?: MutationUpsertModificationArgs[] | false, alias?: string  } 
  | { name: 'deleteModification', args?: MutationDeleteModificationArgs[] | false, alias?: string  } 
  | { name: 'deleteManyModifications', args?: MutationDeleteManyModificationsArgs[] | false, alias?: string  } 
  | { name: 'createSkillSelection', args?: MutationCreateSkillSelectionArgs[] | false, alias?: string  } 
  | { name: 'updateSkillSelection', args?: MutationUpdateSkillSelectionArgs[] | false, alias?: string  } 
  | { name: 'updateManySkillSelections', args?: MutationUpdateManySkillSelectionsArgs[] | false, alias?: string  } 
  | { name: 'upsertSkillSelection', args?: MutationUpsertSkillSelectionArgs[] | false, alias?: string  } 
  | { name: 'deleteSkillSelection', args?: MutationDeleteSkillSelectionArgs[] | false, alias?: string  } 
  | { name: 'deleteManySkillSelections', args?: MutationDeleteManySkillSelectionsArgs[] | false, alias?: string  } 
  | { name: 'createSkill', args?: MutationCreateSkillArgs[] | false, alias?: string  } 
  | { name: 'updateSkill', args?: MutationUpdateSkillArgs[] | false, alias?: string  } 
  | { name: 'updateManySkills', args?: MutationUpdateManySkillsArgs[] | false, alias?: string  } 
  | { name: 'upsertSkill', args?: MutationUpsertSkillArgs[] | false, alias?: string  } 
  | { name: 'deleteSkill', args?: MutationDeleteSkillArgs[] | false, alias?: string  } 
  | { name: 'deleteManySkills', args?: MutationDeleteManySkillsArgs[] | false, alias?: string  } 
  | { name: 'createBuild', args?: MutationCreateBuildArgs[] | false, alias?: string  } 
  | { name: 'updateBuild', args?: MutationUpdateBuildArgs[] | false, alias?: string  } 
  | { name: 'updateManyBuilds', args?: MutationUpdateManyBuildsArgs[] | false, alias?: string  } 
  | { name: 'upsertBuild', args?: MutationUpsertBuildArgs[] | false, alias?: string  } 
  | { name: 'deleteBuild', args?: MutationDeleteBuildArgs[] | false, alias?: string  } 
  | { name: 'deleteManyBuilds', args?: MutationDeleteManyBuildsArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createPost'
  | 'updatePost'
  | 'updateManyPosts'
  | 'upsertPost'
  | 'deletePost'
  | 'deleteManyPosts'
  | 'createVerification'
  | 'updateVerification'
  | 'updateManyVerifications'
  | 'upsertVerification'
  | 'deleteVerification'
  | 'deleteManyVerifications'
  | 'createUser'
  | 'updateUser'
  | 'updateManyUsers'
  | 'upsertUser'
  | 'deleteUser'
  | 'deleteManyUsers'
  | 'createMundusStone'
  | 'updateMundusStone'
  | 'updateManyMundusStones'
  | 'upsertMundusStone'
  | 'deleteMundusStone'
  | 'deleteManyMundusStones'
  | 'createBuff'
  | 'updateBuff'
  | 'updateManyBuffs'
  | 'upsertBuff'
  | 'deleteBuff'
  | 'deleteManyBuffs'
  | 'createSetSelection'
  | 'updateSetSelection'
  | 'updateManySetSelections'
  | 'upsertSetSelection'
  | 'deleteSetSelection'
  | 'deleteManySetSelections'
  | 'createSet'
  | 'updateSet'
  | 'updateManySets'
  | 'upsertSet'
  | 'deleteSet'
  | 'deleteManySets'
  | 'createModification'
  | 'updateModification'
  | 'updateManyModifications'
  | 'upsertModification'
  | 'deleteModification'
  | 'deleteManyModifications'
  | 'createSkillSelection'
  | 'updateSkillSelection'
  | 'updateManySkillSelections'
  | 'upsertSkillSelection'
  | 'deleteSkillSelection'
  | 'deleteManySkillSelections'
  | 'createSkill'
  | 'updateSkill'
  | 'updateManySkills'
  | 'upsertSkill'
  | 'deleteSkill'
  | 'deleteManySkills'
  | 'createBuild'
  | 'updateBuild'
  | 'updateManyBuilds'
  | 'upsertBuild'
  | 'deleteBuild'
  | 'deleteManyBuilds'


type MutationCreatePostArgs =
  | 'data'
type MutationUpdatePostArgs =
  | 'data'
  | 'where'
type MutationUpdateManyPostsArgs =
  | 'data'
  | 'where'
type MutationUpsertPostArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletePostArgs =
  | 'where'
type MutationDeleteManyPostsArgs =
  | 'where'
type MutationCreateVerificationArgs =
  | 'data'
type MutationUpdateVerificationArgs =
  | 'data'
  | 'where'
type MutationUpdateManyVerificationsArgs =
  | 'data'
  | 'where'
type MutationUpsertVerificationArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteVerificationArgs =
  | 'where'
type MutationDeleteManyVerificationsArgs =
  | 'where'
type MutationCreateUserArgs =
  | 'data'
type MutationUpdateUserArgs =
  | 'data'
  | 'where'
type MutationUpdateManyUsersArgs =
  | 'data'
  | 'where'
type MutationUpsertUserArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteUserArgs =
  | 'where'
type MutationDeleteManyUsersArgs =
  | 'where'
type MutationCreateMundusStoneArgs =
  | 'data'
type MutationUpdateMundusStoneArgs =
  | 'data'
  | 'where'
type MutationUpdateManyMundusStonesArgs =
  | 'data'
  | 'where'
type MutationUpsertMundusStoneArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteMundusStoneArgs =
  | 'where'
type MutationDeleteManyMundusStonesArgs =
  | 'where'
type MutationCreateBuffArgs =
  | 'data'
type MutationUpdateBuffArgs =
  | 'data'
  | 'where'
type MutationUpdateManyBuffsArgs =
  | 'data'
  | 'where'
type MutationUpsertBuffArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteBuffArgs =
  | 'where'
type MutationDeleteManyBuffsArgs =
  | 'where'
type MutationCreateSetSelectionArgs =
  | 'data'
type MutationUpdateSetSelectionArgs =
  | 'data'
  | 'where'
type MutationUpdateManySetSelectionsArgs =
  | 'data'
  | 'where'
type MutationUpsertSetSelectionArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteSetSelectionArgs =
  | 'where'
type MutationDeleteManySetSelectionsArgs =
  | 'where'
type MutationCreateSetArgs =
  | 'data'
type MutationUpdateSetArgs =
  | 'data'
  | 'where'
type MutationUpdateManySetsArgs =
  | 'data'
  | 'where'
type MutationUpsertSetArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteSetArgs =
  | 'where'
type MutationDeleteManySetsArgs =
  | 'where'
type MutationCreateModificationArgs =
  | 'data'
type MutationUpdateModificationArgs =
  | 'data'
  | 'where'
type MutationUpdateManyModificationsArgs =
  | 'data'
  | 'where'
type MutationUpsertModificationArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteModificationArgs =
  | 'where'
type MutationDeleteManyModificationsArgs =
  | 'where'
type MutationCreateSkillSelectionArgs =
  | 'data'
type MutationUpdateSkillSelectionArgs =
  | 'data'
  | 'where'
type MutationUpdateManySkillSelectionsArgs =
  | 'data'
  | 'where'
type MutationUpsertSkillSelectionArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteSkillSelectionArgs =
  | 'where'
type MutationDeleteManySkillSelectionsArgs =
  | 'where'
type MutationCreateSkillArgs =
  | 'data'
type MutationUpdateSkillArgs =
  | 'data'
  | 'where'
type MutationUpdateManySkillsArgs =
  | 'data'
  | 'where'
type MutationUpsertSkillArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteSkillArgs =
  | 'where'
type MutationDeleteManySkillsArgs =
  | 'where'
type MutationCreateBuildArgs =
  | 'data'
type MutationUpdateBuildArgs =
  | 'data'
  | 'where'
type MutationUpdateManyBuildsArgs =
  | 'data'
  | 'where'
type MutationUpsertBuildArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteBuildArgs =
  | 'where'
type MutationDeleteManyBuildsArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createPost: {
    type: 'Post'
    args: Record<MutationCreatePostArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PostCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Post> | prisma.Post
  }
  updatePost: {
    type: 'Post'
    args: Record<MutationUpdatePostArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PostUpdateInput, where: PostWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Post | null> | prisma.Post | null
  }
  updateManyPosts: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyPostsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PostUpdateManyMutationInput, where?: PostWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertPost: {
    type: 'Post'
    args: Record<MutationUpsertPostArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PostWhereUniqueInput, create: PostCreateInput, update: PostUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Post> | prisma.Post
  }
  deletePost: {
    type: 'Post'
    args: Record<MutationDeletePostArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PostWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Post | null> | prisma.Post | null
  }
  deleteManyPosts: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyPostsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: PostWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createVerification: {
    type: 'Verification'
    args: Record<MutationCreateVerificationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: VerificationCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Verification> | prisma.Verification
  }
  updateVerification: {
    type: 'Verification'
    args: Record<MutationUpdateVerificationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: VerificationUpdateInput, where: VerificationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Verification | null> | prisma.Verification | null
  }
  updateManyVerifications: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyVerificationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: VerificationUpdateManyMutationInput, where?: VerificationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertVerification: {
    type: 'Verification'
    args: Record<MutationUpsertVerificationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: VerificationWhereUniqueInput, create: VerificationCreateInput, update: VerificationUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Verification> | prisma.Verification
  }
  deleteVerification: {
    type: 'Verification'
    args: Record<MutationDeleteVerificationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: VerificationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Verification | null> | prisma.Verification | null
  }
  deleteManyVerifications: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyVerificationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: VerificationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createUser: {
    type: 'User'
    args: Record<MutationCreateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  updateUser: {
    type: 'User'
    args: Record<MutationUpdateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateInput, where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updateManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateManyMutationInput, where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertUser: {
    type: 'User'
    args: Record<MutationUpsertUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput, create: UserCreateInput, update: UserUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  deleteUser: {
    type: 'User'
    args: Record<MutationDeleteUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  deleteManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createMundusStone: {
    type: 'MundusStone'
    args: Record<MutationCreateMundusStoneArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MundusStoneCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MundusStone> | prisma.MundusStone
  }
  updateMundusStone: {
    type: 'MundusStone'
    args: Record<MutationUpdateMundusStoneArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MundusStoneUpdateInput, where: MundusStoneWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MundusStone | null> | prisma.MundusStone | null
  }
  updateManyMundusStones: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyMundusStonesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MundusStoneUpdateManyMutationInput, where?: MundusStoneWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertMundusStone: {
    type: 'MundusStone'
    args: Record<MutationUpsertMundusStoneArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MundusStoneWhereUniqueInput, create: MundusStoneCreateInput, update: MundusStoneUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MundusStone> | prisma.MundusStone
  }
  deleteMundusStone: {
    type: 'MundusStone'
    args: Record<MutationDeleteMundusStoneArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MundusStoneWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MundusStone | null> | prisma.MundusStone | null
  }
  deleteManyMundusStones: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyMundusStonesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: MundusStoneWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createBuff: {
    type: 'Buff'
    args: Record<MutationCreateBuffArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BuffCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Buff> | prisma.Buff
  }
  updateBuff: {
    type: 'Buff'
    args: Record<MutationUpdateBuffArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BuffUpdateInput, where: BuffWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Buff | null> | prisma.Buff | null
  }
  updateManyBuffs: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyBuffsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BuffUpdateManyMutationInput, where?: BuffWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertBuff: {
    type: 'Buff'
    args: Record<MutationUpsertBuffArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: BuffWhereUniqueInput, create: BuffCreateInput, update: BuffUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Buff> | prisma.Buff
  }
  deleteBuff: {
    type: 'Buff'
    args: Record<MutationDeleteBuffArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: BuffWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Buff | null> | prisma.Buff | null
  }
  deleteManyBuffs: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyBuffsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: BuffWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createSetSelection: {
    type: 'SetSelection'
    args: Record<MutationCreateSetSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SetSelectionCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetSelection> | prisma.SetSelection
  }
  updateSetSelection: {
    type: 'SetSelection'
    args: Record<MutationUpdateSetSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SetSelectionUpdateInput, where: SetSelectionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetSelection | null> | prisma.SetSelection | null
  }
  updateManySetSelections: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManySetSelectionsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SetSelectionUpdateManyMutationInput, where?: SetSelectionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertSetSelection: {
    type: 'SetSelection'
    args: Record<MutationUpsertSetSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SetSelectionWhereUniqueInput, create: SetSelectionCreateInput, update: SetSelectionUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetSelection> | prisma.SetSelection
  }
  deleteSetSelection: {
    type: 'SetSelection'
    args: Record<MutationDeleteSetSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SetSelectionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetSelection | null> | prisma.SetSelection | null
  }
  deleteManySetSelections: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManySetSelectionsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: SetSelectionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createSet: {
    type: 'Set'
    args: Record<MutationCreateSetArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SetCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Set> | prisma.Set
  }
  updateSet: {
    type: 'Set'
    args: Record<MutationUpdateSetArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SetUpdateInput, where: SetWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Set | null> | prisma.Set | null
  }
  updateManySets: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManySetsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SetUpdateManyMutationInput, where?: SetWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertSet: {
    type: 'Set'
    args: Record<MutationUpsertSetArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SetWhereUniqueInput, create: SetCreateInput, update: SetUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Set> | prisma.Set
  }
  deleteSet: {
    type: 'Set'
    args: Record<MutationDeleteSetArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SetWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Set | null> | prisma.Set | null
  }
  deleteManySets: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManySetsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: SetWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createModification: {
    type: 'Modification'
    args: Record<MutationCreateModificationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ModificationCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Modification> | prisma.Modification
  }
  updateModification: {
    type: 'Modification'
    args: Record<MutationUpdateModificationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ModificationUpdateInput, where: ModificationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Modification | null> | prisma.Modification | null
  }
  updateManyModifications: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyModificationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ModificationUpdateManyMutationInput, where?: ModificationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertModification: {
    type: 'Modification'
    args: Record<MutationUpsertModificationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ModificationWhereUniqueInput, create: ModificationCreateInput, update: ModificationUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Modification> | prisma.Modification
  }
  deleteModification: {
    type: 'Modification'
    args: Record<MutationDeleteModificationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ModificationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Modification | null> | prisma.Modification | null
  }
  deleteManyModifications: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyModificationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ModificationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createSkillSelection: {
    type: 'SkillSelection'
    args: Record<MutationCreateSkillSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SkillSelectionCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillSelection> | prisma.SkillSelection
  }
  updateSkillSelection: {
    type: 'SkillSelection'
    args: Record<MutationUpdateSkillSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SkillSelectionUpdateInput, where: SkillSelectionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillSelection | null> | prisma.SkillSelection | null
  }
  updateManySkillSelections: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManySkillSelectionsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SkillSelectionUpdateManyMutationInput, where?: SkillSelectionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertSkillSelection: {
    type: 'SkillSelection'
    args: Record<MutationUpsertSkillSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SkillSelectionWhereUniqueInput, create: SkillSelectionCreateInput, update: SkillSelectionUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillSelection> | prisma.SkillSelection
  }
  deleteSkillSelection: {
    type: 'SkillSelection'
    args: Record<MutationDeleteSkillSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SkillSelectionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillSelection | null> | prisma.SkillSelection | null
  }
  deleteManySkillSelections: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManySkillSelectionsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: SkillSelectionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createSkill: {
    type: 'Skill'
    args: Record<MutationCreateSkillArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SkillCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill> | prisma.Skill
  }
  updateSkill: {
    type: 'Skill'
    args: Record<MutationUpdateSkillArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SkillUpdateInput, where: SkillWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill | null> | prisma.Skill | null
  }
  updateManySkills: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManySkillsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SkillUpdateManyMutationInput, where?: SkillWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertSkill: {
    type: 'Skill'
    args: Record<MutationUpsertSkillArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SkillWhereUniqueInput, create: SkillCreateInput, update: SkillUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill> | prisma.Skill
  }
  deleteSkill: {
    type: 'Skill'
    args: Record<MutationDeleteSkillArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SkillWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill | null> | prisma.Skill | null
  }
  deleteManySkills: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManySkillsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: SkillWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createBuild: {
    type: 'Build'
    args: Record<MutationCreateBuildArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BuildCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Build> | prisma.Build
  }
  updateBuild: {
    type: 'Build'
    args: Record<MutationUpdateBuildArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BuildUpdateInput, where: BuildWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Build | null> | prisma.Build | null
  }
  updateManyBuilds: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyBuildsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BuildUpdateManyMutationInput, where?: BuildWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertBuild: {
    type: 'Build'
    args: Record<MutationUpsertBuildArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: BuildWhereUniqueInput, create: BuildCreateInput, update: BuildUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Build> | prisma.Build
  }
  deleteBuild: {
    type: 'Build'
    args: Record<MutationDeleteBuildArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: BuildWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Build | null> | prisma.Build | null
  }
  deleteManyBuilds: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyBuildsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: BuildWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'post', args?: SubscriptionPostArgs[] | false, alias?: string  } 
  | { name: 'verification', args?: SubscriptionVerificationArgs[] | false, alias?: string  } 
  | { name: 'user', args?: SubscriptionUserArgs[] | false, alias?: string  } 
  | { name: 'mundusStone', args?: SubscriptionMundusStoneArgs[] | false, alias?: string  } 
  | { name: 'buff', args?: SubscriptionBuffArgs[] | false, alias?: string  } 
  | { name: 'setSelection', args?: SubscriptionSetSelectionArgs[] | false, alias?: string  } 
  | { name: 'set', args?: SubscriptionSetArgs[] | false, alias?: string  } 
  | { name: 'modification', args?: SubscriptionModificationArgs[] | false, alias?: string  } 
  | { name: 'skillSelection', args?: SubscriptionSkillSelectionArgs[] | false, alias?: string  } 
  | { name: 'skill', args?: SubscriptionSkillArgs[] | false, alias?: string  } 
  | { name: 'build', args?: SubscriptionBuildArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'post'
  | 'verification'
  | 'user'
  | 'mundusStone'
  | 'buff'
  | 'setSelection'
  | 'set'
  | 'modification'
  | 'skillSelection'
  | 'skill'
  | 'build'


type SubscriptionPostArgs =
  | 'where'
type SubscriptionVerificationArgs =
  | 'where'
type SubscriptionUserArgs =
  | 'where'
type SubscriptionMundusStoneArgs =
  | 'where'
type SubscriptionBuffArgs =
  | 'where'
type SubscriptionSetSelectionArgs =
  | 'where'
type SubscriptionSetArgs =
  | 'where'
type SubscriptionModificationArgs =
  | 'where'
type SubscriptionSkillSelectionArgs =
  | 'where'
type SubscriptionSkillArgs =
  | 'where'
type SubscriptionBuildArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  post: {
    type: 'PostSubscriptionPayload'
    args: Record<SubscriptionPostArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: PostSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostSubscriptionPayload | null> | prisma.PostSubscriptionPayload | null
  }
  verification: {
    type: 'VerificationSubscriptionPayload'
    args: Record<SubscriptionVerificationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: VerificationSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VerificationSubscriptionPayload | null> | prisma.VerificationSubscriptionPayload | null
  }
  user: {
    type: 'UserSubscriptionPayload'
    args: Record<SubscriptionUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: UserSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserSubscriptionPayload | null> | prisma.UserSubscriptionPayload | null
  }
  mundusStone: {
    type: 'MundusStoneSubscriptionPayload'
    args: Record<SubscriptionMundusStoneArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: MundusStoneSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MundusStoneSubscriptionPayload | null> | prisma.MundusStoneSubscriptionPayload | null
  }
  buff: {
    type: 'BuffSubscriptionPayload'
    args: Record<SubscriptionBuffArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: BuffSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BuffSubscriptionPayload | null> | prisma.BuffSubscriptionPayload | null
  }
  setSelection: {
    type: 'SetSelectionSubscriptionPayload'
    args: Record<SubscriptionSetSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: SetSelectionSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetSelectionSubscriptionPayload | null> | prisma.SetSelectionSubscriptionPayload | null
  }
  set: {
    type: 'SetSubscriptionPayload'
    args: Record<SubscriptionSetArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: SetSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetSubscriptionPayload | null> | prisma.SetSubscriptionPayload | null
  }
  modification: {
    type: 'ModificationSubscriptionPayload'
    args: Record<SubscriptionModificationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ModificationSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ModificationSubscriptionPayload | null> | prisma.ModificationSubscriptionPayload | null
  }
  skillSelection: {
    type: 'SkillSelectionSubscriptionPayload'
    args: Record<SubscriptionSkillSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: SkillSelectionSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillSelectionSubscriptionPayload | null> | prisma.SkillSelectionSubscriptionPayload | null
  }
  skill: {
    type: 'SkillSubscriptionPayload'
    args: Record<SubscriptionSkillArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: SkillSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillSubscriptionPayload | null> | prisma.SkillSubscriptionPayload | null
  }
  build: {
    type: 'BuildSubscriptionPayload'
    args: Record<SubscriptionBuildArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: BuildSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BuildSubscriptionPayload | null> | prisma.BuildSubscriptionPayload | null
  }
}
  

// Types for PostSubscriptionPayload

type PostSubscriptionPayloadObject =
  | PostSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type PostSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface PostSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PostSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Post'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PostSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Post | null> | prisma.Post | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'PostPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PostSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostPreviousValues | null> | prisma.PostPreviousValues | null
  }
}
  

// Types for PostPreviousValues

type PostPreviousValuesObject =
  | PostPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'published', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'content', args?: [] | false, alias?: string  } 

type PostPreviousValuesFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'published'
  | 'title'
  | 'content'



  

export interface PostPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  published: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  content: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for VerificationSubscriptionPayload

type VerificationSubscriptionPayloadObject =
  | VerificationSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type VerificationSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface VerificationSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"VerificationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Verification'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"VerificationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Verification | null> | prisma.Verification | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'VerificationPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"VerificationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VerificationPreviousValues | null> | prisma.VerificationPreviousValues | null
  }
}
  

// Types for VerificationPreviousValues

type VerificationPreviousValuesObject =
  | VerificationPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'token', args?: [] | false, alias?: string  } 

type VerificationPreviousValuesFields =
  | 'id'
  | 'token'



  

export interface VerificationPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  token: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for UserSubscriptionPayload

type UserSubscriptionPayloadObject =
  | UserSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type UserSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface UserSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'UserPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPreviousValues | null> | prisma.UserPreviousValues | null
  }
}
  

// Types for UserPreviousValues

type UserPreviousValuesObject =
  | UserPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'verified', args?: [] | false, alias?: string  } 

type UserPreviousValuesFields =
  | 'id'
  | 'email'
  | 'password'
  | 'name'
  | 'verified'



  

export interface UserPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  verified: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MundusStoneSubscriptionPayload

type MundusStoneSubscriptionPayloadObject =
  | MundusStoneSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type MundusStoneSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface MundusStoneSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MundusStoneSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'MundusStone'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MundusStoneSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MundusStone | null> | prisma.MundusStone | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'MundusStonePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MundusStoneSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MundusStonePreviousValues | null> | prisma.MundusStonePreviousValues | null
  }
}
  

// Types for MundusStonePreviousValues

type MundusStonePreviousValuesObject =
  | MundusStonePreviousValuesFields
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'aldmeri', args?: [] | false, alias?: string  } 
  | { name: 'daggerfall', args?: [] | false, alias?: string  } 
  | { name: 'ebonheart', args?: [] | false, alias?: string  } 
  | { name: 'effect', args?: [] | false, alias?: string  } 
  | { name: 'value', args?: [] | false, alias?: string  } 
  | { name: 'icon', args?: [] | false, alias?: string  } 
  | { name: 'id', args?: [] | false, alias?: string  } 

type MundusStonePreviousValuesFields =
  | 'name'
  | 'aldmeri'
  | 'daggerfall'
  | 'ebonheart'
  | 'effect'
  | 'value'
  | 'icon'
  | 'id'



  

export interface MundusStonePreviousValuesFieldDetails {
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  aldmeri: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  daggerfall: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  ebonheart: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  effect: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  value: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  icon: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for BuffSubscriptionPayload

type BuffSubscriptionPayloadObject =
  | BuffSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type BuffSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface BuffSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BuffSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Buff'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BuffSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Buff | null> | prisma.Buff | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'BuffPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BuffSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BuffPreviousValues | null> | prisma.BuffPreviousValues | null
  }
}
  

// Types for BuffPreviousValues

type BuffPreviousValuesObject =
  | BuffPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'buffDescription', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'duration', args?: [] | false, alias?: string  } 
  | { name: 'notes', args?: [] | false, alias?: string  } 
  | { name: 'icon', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'buffType', args?: [] | false, alias?: string  } 
  | { name: 'quality', args?: [] | false, alias?: string  } 

type BuffPreviousValuesFields =
  | 'id'
  | 'name'
  | 'buffDescription'
  | 'description'
  | 'duration'
  | 'notes'
  | 'icon'
  | 'type'
  | 'buffType'
  | 'quality'



  

export interface BuffPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  buffDescription: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  duration: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  notes: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  icon: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  type: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  buffType: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  quality: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SetSelectionSubscriptionPayload

type SetSelectionSubscriptionPayloadObject =
  | SetSelectionSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type SetSelectionSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface SetSelectionSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SetSelectionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'SetSelection'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SetSelectionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetSelection | null> | prisma.SetSelection | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'SetSelectionPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SetSelectionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetSelectionPreviousValues | null> | prisma.SetSelectionPreviousValues | null
  }
}
  

// Types for SetSelectionPreviousValues

type SetSelectionPreviousValuesObject =
  | SetSelectionPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'icon', args?: [] | false, alias?: string  } 
  | { name: 'slot', args?: [] | false, alias?: string  } 

type SetSelectionPreviousValuesFields =
  | 'id'
  | 'icon'
  | 'slot'



  

export interface SetSelectionPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  icon: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  slot: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for SetSubscriptionPayload

type SetSubscriptionPayloadObject =
  | SetSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type SetSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface SetSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SetSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Set'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SetSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Set | null> | prisma.Set | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'SetPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SetSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SetPreviousValues | null> | prisma.SetPreviousValues | null
  }
}
  

// Types for SetPreviousValues

type SetPreviousValuesObject =
  | SetPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'setId', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'location', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'slug', args?: [] | false, alias?: string  } 
  | { name: 'bonus_item_1', args?: [] | false, alias?: string  } 
  | { name: 'bonus_item_2', args?: [] | false, alias?: string  } 
  | { name: 'bonus_item_3', args?: [] | false, alias?: string  } 
  | { name: 'bonus_item_4', args?: [] | false, alias?: string  } 
  | { name: 'bonus_item_5', args?: [] | false, alias?: string  } 
  | { name: 'has_jewels', args?: [] | false, alias?: string  } 
  | { name: 'has_weapons', args?: [] | false, alias?: string  } 
  | { name: 'has_heavy_armor', args?: [] | false, alias?: string  } 
  | { name: 'has_light_armor', args?: [] | false, alias?: string  } 
  | { name: 'has_medium_armor', args?: [] | false, alias?: string  } 
  | { name: 'traits_needed', args?: [] | false, alias?: string  } 
  | { name: 'pts', args?: [] | false, alias?: string  } 
  | { name: 'eso_id', args?: [] | false, alias?: string  } 

type SetPreviousValuesFields =
  | 'id'
  | 'setId'
  | 'name'
  | 'location'
  | 'type'
  | 'slug'
  | 'bonus_item_1'
  | 'bonus_item_2'
  | 'bonus_item_3'
  | 'bonus_item_4'
  | 'bonus_item_5'
  | 'has_jewels'
  | 'has_weapons'
  | 'has_heavy_armor'
  | 'has_light_armor'
  | 'has_medium_armor'
  | 'traits_needed'
  | 'pts'
  | 'eso_id'



  

export interface SetPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  setId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  location: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  type: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  slug: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  bonus_item_1: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  bonus_item_2: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  bonus_item_3: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  bonus_item_4: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  bonus_item_5: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  has_jewels: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  has_weapons: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  has_heavy_armor: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  has_light_armor: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  has_medium_armor: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  traits_needed: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  pts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  eso_id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for ModificationSubscriptionPayload

type ModificationSubscriptionPayloadObject =
  | ModificationSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ModificationSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ModificationSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ModificationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Modification'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ModificationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Modification | null> | prisma.Modification | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ModificationPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ModificationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ModificationPreviousValues | null> | prisma.ModificationPreviousValues | null
  }
}
  

// Types for ModificationPreviousValues

type ModificationPreviousValuesObject =
  | ModificationPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'itemType', args?: [] | false, alias?: string  } 
  | { name: 'modificationType', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'icon', args?: [] | false, alias?: string  } 

type ModificationPreviousValuesFields =
  | 'id'
  | 'type'
  | 'itemType'
  | 'modificationType'
  | 'description'
  | 'icon'



  

export interface ModificationPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  type: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  itemType: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  modificationType: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  icon: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for SkillSelectionSubscriptionPayload

type SkillSelectionSubscriptionPayloadObject =
  | SkillSelectionSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type SkillSelectionSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface SkillSelectionSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SkillSelectionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'SkillSelection'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SkillSelectionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillSelection | null> | prisma.SkillSelection | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'SkillSelectionPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SkillSelectionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillSelectionPreviousValues | null> | prisma.SkillSelectionPreviousValues | null
  }
}
  

// Types for SkillSelectionPreviousValues

type SkillSelectionPreviousValuesObject =
  | SkillSelectionPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'index', args?: [] | false, alias?: string  } 

type SkillSelectionPreviousValuesFields =
  | 'id'
  | 'index'



  

export interface SkillSelectionPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  index: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SkillSubscriptionPayload

type SkillSubscriptionPayloadObject =
  | SkillSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type SkillSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface SkillSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SkillSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Skill'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SkillSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill | null> | prisma.Skill | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'SkillPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SkillSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillPreviousValues | null> | prisma.SkillPreviousValues | null
  }
}
  

// Types for SkillPreviousValues

type SkillPreviousValuesObject =
  | SkillPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'skillId', args?: [] | false, alias?: string  } 
  | { name: 'cast_time', args?: [] | false, alias?: string  } 
  | { name: 'cost', args?: [] | false, alias?: string  } 
  | { name: 'effect_1', args?: [] | false, alias?: string  } 
  | { name: 'effect_2', args?: [] | false, alias?: string  } 
  | { name: 'icon', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'parent', args?: [] | false, alias?: string  } 
  | { name: 'pts', args?: [] | false, alias?: string  } 
  | { name: 'range', args?: [] | false, alias?: string  } 
  | { name: 'skillline', args?: [] | false, alias?: string  } 
  | { name: 'slug', args?: [] | false, alias?: string  } 
  | { name: 'target', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'unlocks_at', args?: [] | false, alias?: string  } 

type SkillPreviousValuesFields =
  | 'id'
  | 'skillId'
  | 'cast_time'
  | 'cost'
  | 'effect_1'
  | 'effect_2'
  | 'icon'
  | 'name'
  | 'parent'
  | 'pts'
  | 'range'
  | 'skillline'
  | 'slug'
  | 'target'
  | 'type'
  | 'unlocks_at'



  

export interface SkillPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  skillId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  cast_time: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  cost: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  effect_1: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  effect_2: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  icon: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  parent: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  pts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  range: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  skillline: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  slug: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  target: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  type: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  unlocks_at: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for BuildSubscriptionPayload

type BuildSubscriptionPayloadObject =
  | BuildSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type BuildSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface BuildSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BuildSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Build'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BuildSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Build | null> | prisma.Build | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'BuildPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BuildSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BuildPreviousValues | null> | prisma.BuildPreviousValues | null
  }
}
  

// Types for BuildPreviousValues

type BuildPreviousValuesObject =
  | BuildPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'race', args?: [] | false, alias?: string  } 
  | { name: 'esoClass', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'published', args?: [] | false, alias?: string  } 

type BuildPreviousValuesFields =
  | 'id'
  | 'name'
  | 'race'
  | 'esoClass'
  | 'createdAt'
  | 'updatedAt'
  | 'published'



  

export interface BuildPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  race: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  esoClass: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  published: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  


export interface PostWhereUniqueInput {
  id?: string | null
}
export type PostWhereUniqueInputInputObject =
  | Extract<keyof PostWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface BuildWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  owner?: UserWhereInput | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  race?: string | null
  race_not?: string | null
  race_in?: string[]
  race_not_in?: string[]
  race_lt?: string | null
  race_lte?: string | null
  race_gt?: string | null
  race_gte?: string | null
  race_contains?: string | null
  race_not_contains?: string | null
  race_starts_with?: string | null
  race_not_starts_with?: string | null
  race_ends_with?: string | null
  race_not_ends_with?: string | null
  esoClass?: string | null
  esoClass_not?: string | null
  esoClass_in?: string[]
  esoClass_not_in?: string[]
  esoClass_lt?: string | null
  esoClass_lte?: string | null
  esoClass_gt?: string | null
  esoClass_gte?: string | null
  esoClass_contains?: string | null
  esoClass_not_contains?: string | null
  esoClass_starts_with?: string | null
  esoClass_not_starts_with?: string | null
  esoClass_ends_with?: string | null
  esoClass_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  published?: boolean | null
  published_not?: boolean | null
  bigPieceSelection_every?: SetSelectionWhereInput | null
  bigPieceSelection_some?: SetSelectionWhereInput | null
  bigPieceSelection_none?: SetSelectionWhereInput | null
  smallPieceSelection_every?: SetSelectionWhereInput | null
  smallPieceSelection_some?: SetSelectionWhereInput | null
  smallPieceSelection_none?: SetSelectionWhereInput | null
  jewelrySelection_every?: SetSelectionWhereInput | null
  jewelrySelection_some?: SetSelectionWhereInput | null
  jewelrySelection_none?: SetSelectionWhereInput | null
  frontbarSelection_every?: SetSelectionWhereInput | null
  frontbarSelection_some?: SetSelectionWhereInput | null
  frontbarSelection_none?: SetSelectionWhereInput | null
  backbarSelection_every?: SetSelectionWhereInput | null
  backbarSelection_some?: SetSelectionWhereInput | null
  backbarSelection_none?: SetSelectionWhereInput | null
  newBarOne_every?: SkillSelectionWhereInput | null
  newBarOne_some?: SkillSelectionWhereInput | null
  newBarOne_none?: SkillSelectionWhereInput | null
  newBarTwo_every?: SkillSelectionWhereInput | null
  newBarTwo_some?: SkillSelectionWhereInput | null
  newBarTwo_none?: SkillSelectionWhereInput | null
  ultimateOne?: SkillWhereInput | null
  ultimateTwo?: SkillWhereInput | null
  mundusStone?: MundusStoneWhereInput | null
  buff?: BuffWhereInput | null
  AND?: BuildWhereInput[]
  OR?: BuildWhereInput[]
  NOT?: BuildWhereInput[]
}
export type BuildWhereInputInputObject =
  | Extract<keyof BuildWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'owner', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'race', alias?: string  } 
  | { name: 'race_not', alias?: string  } 
  | { name: 'race_in', alias?: string  } 
  | { name: 'race_not_in', alias?: string  } 
  | { name: 'race_lt', alias?: string  } 
  | { name: 'race_lte', alias?: string  } 
  | { name: 'race_gt', alias?: string  } 
  | { name: 'race_gte', alias?: string  } 
  | { name: 'race_contains', alias?: string  } 
  | { name: 'race_not_contains', alias?: string  } 
  | { name: 'race_starts_with', alias?: string  } 
  | { name: 'race_not_starts_with', alias?: string  } 
  | { name: 'race_ends_with', alias?: string  } 
  | { name: 'race_not_ends_with', alias?: string  } 
  | { name: 'esoClass', alias?: string  } 
  | { name: 'esoClass_not', alias?: string  } 
  | { name: 'esoClass_in', alias?: string  } 
  | { name: 'esoClass_not_in', alias?: string  } 
  | { name: 'esoClass_lt', alias?: string  } 
  | { name: 'esoClass_lte', alias?: string  } 
  | { name: 'esoClass_gt', alias?: string  } 
  | { name: 'esoClass_gte', alias?: string  } 
  | { name: 'esoClass_contains', alias?: string  } 
  | { name: 'esoClass_not_contains', alias?: string  } 
  | { name: 'esoClass_starts_with', alias?: string  } 
  | { name: 'esoClass_not_starts_with', alias?: string  } 
  | { name: 'esoClass_ends_with', alias?: string  } 
  | { name: 'esoClass_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'published_not', alias?: string  } 
  | { name: 'bigPieceSelection_every', alias?: string  } 
  | { name: 'bigPieceSelection_some', alias?: string  } 
  | { name: 'bigPieceSelection_none', alias?: string  } 
  | { name: 'smallPieceSelection_every', alias?: string  } 
  | { name: 'smallPieceSelection_some', alias?: string  } 
  | { name: 'smallPieceSelection_none', alias?: string  } 
  | { name: 'jewelrySelection_every', alias?: string  } 
  | { name: 'jewelrySelection_some', alias?: string  } 
  | { name: 'jewelrySelection_none', alias?: string  } 
  | { name: 'frontbarSelection_every', alias?: string  } 
  | { name: 'frontbarSelection_some', alias?: string  } 
  | { name: 'frontbarSelection_none', alias?: string  } 
  | { name: 'backbarSelection_every', alias?: string  } 
  | { name: 'backbarSelection_some', alias?: string  } 
  | { name: 'backbarSelection_none', alias?: string  } 
  | { name: 'newBarOne_every', alias?: string  } 
  | { name: 'newBarOne_some', alias?: string  } 
  | { name: 'newBarOne_none', alias?: string  } 
  | { name: 'newBarTwo_every', alias?: string  } 
  | { name: 'newBarTwo_some', alias?: string  } 
  | { name: 'newBarTwo_none', alias?: string  } 
  | { name: 'ultimateOne', alias?: string  } 
  | { name: 'ultimateTwo', alias?: string  } 
  | { name: 'mundusStone', alias?: string  } 
  | { name: 'buff', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  password?: string | null
  password_not?: string | null
  password_in?: string[]
  password_not_in?: string[]
  password_lt?: string | null
  password_lte?: string | null
  password_gt?: string | null
  password_gte?: string | null
  password_contains?: string | null
  password_not_contains?: string | null
  password_starts_with?: string | null
  password_not_starts_with?: string | null
  password_ends_with?: string | null
  password_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  verified?: boolean | null
  verified_not?: boolean | null
  builds_every?: BuildWhereInput | null
  builds_some?: BuildWhereInput | null
  builds_none?: BuildWhereInput | null
  AND?: UserWhereInput[]
  OR?: UserWhereInput[]
  NOT?: UserWhereInput[]
}
export type UserWhereInputInputObject =
  | Extract<keyof UserWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'password_not', alias?: string  } 
  | { name: 'password_in', alias?: string  } 
  | { name: 'password_not_in', alias?: string  } 
  | { name: 'password_lt', alias?: string  } 
  | { name: 'password_lte', alias?: string  } 
  | { name: 'password_gt', alias?: string  } 
  | { name: 'password_gte', alias?: string  } 
  | { name: 'password_contains', alias?: string  } 
  | { name: 'password_not_contains', alias?: string  } 
  | { name: 'password_starts_with', alias?: string  } 
  | { name: 'password_not_starts_with', alias?: string  } 
  | { name: 'password_ends_with', alias?: string  } 
  | { name: 'password_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'verified', alias?: string  } 
  | { name: 'verified_not', alias?: string  } 
  | { name: 'builds_every', alias?: string  } 
  | { name: 'builds_some', alias?: string  } 
  | { name: 'builds_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SetSelectionWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  icon?: string | null
  icon_not?: string | null
  icon_in?: string[]
  icon_not_in?: string[]
  icon_lt?: string | null
  icon_lte?: string | null
  icon_gt?: string | null
  icon_gte?: string | null
  icon_contains?: string | null
  icon_not_contains?: string | null
  icon_starts_with?: string | null
  icon_not_starts_with?: string | null
  icon_ends_with?: string | null
  icon_not_ends_with?: string | null
  slot?: string | null
  slot_not?: string | null
  slot_in?: string[]
  slot_not_in?: string[]
  slot_lt?: string | null
  slot_lte?: string | null
  slot_gt?: string | null
  slot_gte?: string | null
  slot_contains?: string | null
  slot_not_contains?: string | null
  slot_starts_with?: string | null
  slot_not_starts_with?: string | null
  slot_ends_with?: string | null
  slot_not_ends_with?: string | null
  selectedSet?: SetWhereInput | null
  trait?: ModificationWhereInput | null
  glyph?: ModificationWhereInput | null
  AND?: SetSelectionWhereInput[]
  OR?: SetSelectionWhereInput[]
  NOT?: SetSelectionWhereInput[]
}
export type SetSelectionWhereInputInputObject =
  | Extract<keyof SetSelectionWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  | { name: 'icon_not', alias?: string  } 
  | { name: 'icon_in', alias?: string  } 
  | { name: 'icon_not_in', alias?: string  } 
  | { name: 'icon_lt', alias?: string  } 
  | { name: 'icon_lte', alias?: string  } 
  | { name: 'icon_gt', alias?: string  } 
  | { name: 'icon_gte', alias?: string  } 
  | { name: 'icon_contains', alias?: string  } 
  | { name: 'icon_not_contains', alias?: string  } 
  | { name: 'icon_starts_with', alias?: string  } 
  | { name: 'icon_not_starts_with', alias?: string  } 
  | { name: 'icon_ends_with', alias?: string  } 
  | { name: 'icon_not_ends_with', alias?: string  } 
  | { name: 'slot', alias?: string  } 
  | { name: 'slot_not', alias?: string  } 
  | { name: 'slot_in', alias?: string  } 
  | { name: 'slot_not_in', alias?: string  } 
  | { name: 'slot_lt', alias?: string  } 
  | { name: 'slot_lte', alias?: string  } 
  | { name: 'slot_gt', alias?: string  } 
  | { name: 'slot_gte', alias?: string  } 
  | { name: 'slot_contains', alias?: string  } 
  | { name: 'slot_not_contains', alias?: string  } 
  | { name: 'slot_starts_with', alias?: string  } 
  | { name: 'slot_not_starts_with', alias?: string  } 
  | { name: 'slot_ends_with', alias?: string  } 
  | { name: 'slot_not_ends_with', alias?: string  } 
  | { name: 'selectedSet', alias?: string  } 
  | { name: 'trait', alias?: string  } 
  | { name: 'glyph', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SetWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  setId?: number | null
  setId_not?: number | null
  setId_in?: number[]
  setId_not_in?: number[]
  setId_lt?: number | null
  setId_lte?: number | null
  setId_gt?: number | null
  setId_gte?: number | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  location?: string | null
  location_not?: string | null
  location_in?: string[]
  location_not_in?: string[]
  location_lt?: string | null
  location_lte?: string | null
  location_gt?: string | null
  location_gte?: string | null
  location_contains?: string | null
  location_not_contains?: string | null
  location_starts_with?: string | null
  location_not_starts_with?: string | null
  location_ends_with?: string | null
  location_not_ends_with?: string | null
  type?: string | null
  type_not?: string | null
  type_in?: string[]
  type_not_in?: string[]
  type_lt?: string | null
  type_lte?: string | null
  type_gt?: string | null
  type_gte?: string | null
  type_contains?: string | null
  type_not_contains?: string | null
  type_starts_with?: string | null
  type_not_starts_with?: string | null
  type_ends_with?: string | null
  type_not_ends_with?: string | null
  slug?: string | null
  slug_not?: string | null
  slug_in?: string[]
  slug_not_in?: string[]
  slug_lt?: string | null
  slug_lte?: string | null
  slug_gt?: string | null
  slug_gte?: string | null
  slug_contains?: string | null
  slug_not_contains?: string | null
  slug_starts_with?: string | null
  slug_not_starts_with?: string | null
  slug_ends_with?: string | null
  slug_not_ends_with?: string | null
  bonus_item_1?: string | null
  bonus_item_1_not?: string | null
  bonus_item_1_in?: string[]
  bonus_item_1_not_in?: string[]
  bonus_item_1_lt?: string | null
  bonus_item_1_lte?: string | null
  bonus_item_1_gt?: string | null
  bonus_item_1_gte?: string | null
  bonus_item_1_contains?: string | null
  bonus_item_1_not_contains?: string | null
  bonus_item_1_starts_with?: string | null
  bonus_item_1_not_starts_with?: string | null
  bonus_item_1_ends_with?: string | null
  bonus_item_1_not_ends_with?: string | null
  bonus_item_2?: string | null
  bonus_item_2_not?: string | null
  bonus_item_2_in?: string[]
  bonus_item_2_not_in?: string[]
  bonus_item_2_lt?: string | null
  bonus_item_2_lte?: string | null
  bonus_item_2_gt?: string | null
  bonus_item_2_gte?: string | null
  bonus_item_2_contains?: string | null
  bonus_item_2_not_contains?: string | null
  bonus_item_2_starts_with?: string | null
  bonus_item_2_not_starts_with?: string | null
  bonus_item_2_ends_with?: string | null
  bonus_item_2_not_ends_with?: string | null
  bonus_item_3?: string | null
  bonus_item_3_not?: string | null
  bonus_item_3_in?: string[]
  bonus_item_3_not_in?: string[]
  bonus_item_3_lt?: string | null
  bonus_item_3_lte?: string | null
  bonus_item_3_gt?: string | null
  bonus_item_3_gte?: string | null
  bonus_item_3_contains?: string | null
  bonus_item_3_not_contains?: string | null
  bonus_item_3_starts_with?: string | null
  bonus_item_3_not_starts_with?: string | null
  bonus_item_3_ends_with?: string | null
  bonus_item_3_not_ends_with?: string | null
  bonus_item_4?: string | null
  bonus_item_4_not?: string | null
  bonus_item_4_in?: string[]
  bonus_item_4_not_in?: string[]
  bonus_item_4_lt?: string | null
  bonus_item_4_lte?: string | null
  bonus_item_4_gt?: string | null
  bonus_item_4_gte?: string | null
  bonus_item_4_contains?: string | null
  bonus_item_4_not_contains?: string | null
  bonus_item_4_starts_with?: string | null
  bonus_item_4_not_starts_with?: string | null
  bonus_item_4_ends_with?: string | null
  bonus_item_4_not_ends_with?: string | null
  bonus_item_5?: string | null
  bonus_item_5_not?: string | null
  bonus_item_5_in?: string[]
  bonus_item_5_not_in?: string[]
  bonus_item_5_lt?: string | null
  bonus_item_5_lte?: string | null
  bonus_item_5_gt?: string | null
  bonus_item_5_gte?: string | null
  bonus_item_5_contains?: string | null
  bonus_item_5_not_contains?: string | null
  bonus_item_5_starts_with?: string | null
  bonus_item_5_not_starts_with?: string | null
  bonus_item_5_ends_with?: string | null
  bonus_item_5_not_ends_with?: string | null
  has_jewels?: number | null
  has_jewels_not?: number | null
  has_jewels_in?: number[]
  has_jewels_not_in?: number[]
  has_jewels_lt?: number | null
  has_jewels_lte?: number | null
  has_jewels_gt?: number | null
  has_jewels_gte?: number | null
  has_weapons?: number | null
  has_weapons_not?: number | null
  has_weapons_in?: number[]
  has_weapons_not_in?: number[]
  has_weapons_lt?: number | null
  has_weapons_lte?: number | null
  has_weapons_gt?: number | null
  has_weapons_gte?: number | null
  has_heavy_armor?: number | null
  has_heavy_armor_not?: number | null
  has_heavy_armor_in?: number[]
  has_heavy_armor_not_in?: number[]
  has_heavy_armor_lt?: number | null
  has_heavy_armor_lte?: number | null
  has_heavy_armor_gt?: number | null
  has_heavy_armor_gte?: number | null
  has_light_armor?: number | null
  has_light_armor_not?: number | null
  has_light_armor_in?: number[]
  has_light_armor_not_in?: number[]
  has_light_armor_lt?: number | null
  has_light_armor_lte?: number | null
  has_light_armor_gt?: number | null
  has_light_armor_gte?: number | null
  has_medium_armor?: number | null
  has_medium_armor_not?: number | null
  has_medium_armor_in?: number[]
  has_medium_armor_not_in?: number[]
  has_medium_armor_lt?: number | null
  has_medium_armor_lte?: number | null
  has_medium_armor_gt?: number | null
  has_medium_armor_gte?: number | null
  traits_needed?: number | null
  traits_needed_not?: number | null
  traits_needed_in?: number[]
  traits_needed_not_in?: number[]
  traits_needed_lt?: number | null
  traits_needed_lte?: number | null
  traits_needed_gt?: number | null
  traits_needed_gte?: number | null
  pts?: number | null
  pts_not?: number | null
  pts_in?: number[]
  pts_not_in?: number[]
  pts_lt?: number | null
  pts_lte?: number | null
  pts_gt?: number | null
  pts_gte?: number | null
  eso_id?: number | null
  eso_id_not?: number | null
  eso_id_in?: number[]
  eso_id_not_in?: number[]
  eso_id_lt?: number | null
  eso_id_lte?: number | null
  eso_id_gt?: number | null
  eso_id_gte?: number | null
  AND?: SetWhereInput[]
  OR?: SetWhereInput[]
  NOT?: SetWhereInput[]
}
export type SetWhereInputInputObject =
  | Extract<keyof SetWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'setId', alias?: string  } 
  | { name: 'setId_not', alias?: string  } 
  | { name: 'setId_in', alias?: string  } 
  | { name: 'setId_not_in', alias?: string  } 
  | { name: 'setId_lt', alias?: string  } 
  | { name: 'setId_lte', alias?: string  } 
  | { name: 'setId_gt', alias?: string  } 
  | { name: 'setId_gte', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'location_not', alias?: string  } 
  | { name: 'location_in', alias?: string  } 
  | { name: 'location_not_in', alias?: string  } 
  | { name: 'location_lt', alias?: string  } 
  | { name: 'location_lte', alias?: string  } 
  | { name: 'location_gt', alias?: string  } 
  | { name: 'location_gte', alias?: string  } 
  | { name: 'location_contains', alias?: string  } 
  | { name: 'location_not_contains', alias?: string  } 
  | { name: 'location_starts_with', alias?: string  } 
  | { name: 'location_not_starts_with', alias?: string  } 
  | { name: 'location_ends_with', alias?: string  } 
  | { name: 'location_not_ends_with', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'type_not', alias?: string  } 
  | { name: 'type_in', alias?: string  } 
  | { name: 'type_not_in', alias?: string  } 
  | { name: 'type_lt', alias?: string  } 
  | { name: 'type_lte', alias?: string  } 
  | { name: 'type_gt', alias?: string  } 
  | { name: 'type_gte', alias?: string  } 
  | { name: 'type_contains', alias?: string  } 
  | { name: 'type_not_contains', alias?: string  } 
  | { name: 'type_starts_with', alias?: string  } 
  | { name: 'type_not_starts_with', alias?: string  } 
  | { name: 'type_ends_with', alias?: string  } 
  | { name: 'type_not_ends_with', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'slug_not', alias?: string  } 
  | { name: 'slug_in', alias?: string  } 
  | { name: 'slug_not_in', alias?: string  } 
  | { name: 'slug_lt', alias?: string  } 
  | { name: 'slug_lte', alias?: string  } 
  | { name: 'slug_gt', alias?: string  } 
  | { name: 'slug_gte', alias?: string  } 
  | { name: 'slug_contains', alias?: string  } 
  | { name: 'slug_not_contains', alias?: string  } 
  | { name: 'slug_starts_with', alias?: string  } 
  | { name: 'slug_not_starts_with', alias?: string  } 
  | { name: 'slug_ends_with', alias?: string  } 
  | { name: 'slug_not_ends_with', alias?: string  } 
  | { name: 'bonus_item_1', alias?: string  } 
  | { name: 'bonus_item_1_not', alias?: string  } 
  | { name: 'bonus_item_1_in', alias?: string  } 
  | { name: 'bonus_item_1_not_in', alias?: string  } 
  | { name: 'bonus_item_1_lt', alias?: string  } 
  | { name: 'bonus_item_1_lte', alias?: string  } 
  | { name: 'bonus_item_1_gt', alias?: string  } 
  | { name: 'bonus_item_1_gte', alias?: string  } 
  | { name: 'bonus_item_1_contains', alias?: string  } 
  | { name: 'bonus_item_1_not_contains', alias?: string  } 
  | { name: 'bonus_item_1_starts_with', alias?: string  } 
  | { name: 'bonus_item_1_not_starts_with', alias?: string  } 
  | { name: 'bonus_item_1_ends_with', alias?: string  } 
  | { name: 'bonus_item_1_not_ends_with', alias?: string  } 
  | { name: 'bonus_item_2', alias?: string  } 
  | { name: 'bonus_item_2_not', alias?: string  } 
  | { name: 'bonus_item_2_in', alias?: string  } 
  | { name: 'bonus_item_2_not_in', alias?: string  } 
  | { name: 'bonus_item_2_lt', alias?: string  } 
  | { name: 'bonus_item_2_lte', alias?: string  } 
  | { name: 'bonus_item_2_gt', alias?: string  } 
  | { name: 'bonus_item_2_gte', alias?: string  } 
  | { name: 'bonus_item_2_contains', alias?: string  } 
  | { name: 'bonus_item_2_not_contains', alias?: string  } 
  | { name: 'bonus_item_2_starts_with', alias?: string  } 
  | { name: 'bonus_item_2_not_starts_with', alias?: string  } 
  | { name: 'bonus_item_2_ends_with', alias?: string  } 
  | { name: 'bonus_item_2_not_ends_with', alias?: string  } 
  | { name: 'bonus_item_3', alias?: string  } 
  | { name: 'bonus_item_3_not', alias?: string  } 
  | { name: 'bonus_item_3_in', alias?: string  } 
  | { name: 'bonus_item_3_not_in', alias?: string  } 
  | { name: 'bonus_item_3_lt', alias?: string  } 
  | { name: 'bonus_item_3_lte', alias?: string  } 
  | { name: 'bonus_item_3_gt', alias?: string  } 
  | { name: 'bonus_item_3_gte', alias?: string  } 
  | { name: 'bonus_item_3_contains', alias?: string  } 
  | { name: 'bonus_item_3_not_contains', alias?: string  } 
  | { name: 'bonus_item_3_starts_with', alias?: string  } 
  | { name: 'bonus_item_3_not_starts_with', alias?: string  } 
  | { name: 'bonus_item_3_ends_with', alias?: string  } 
  | { name: 'bonus_item_3_not_ends_with', alias?: string  } 
  | { name: 'bonus_item_4', alias?: string  } 
  | { name: 'bonus_item_4_not', alias?: string  } 
  | { name: 'bonus_item_4_in', alias?: string  } 
  | { name: 'bonus_item_4_not_in', alias?: string  } 
  | { name: 'bonus_item_4_lt', alias?: string  } 
  | { name: 'bonus_item_4_lte', alias?: string  } 
  | { name: 'bonus_item_4_gt', alias?: string  } 
  | { name: 'bonus_item_4_gte', alias?: string  } 
  | { name: 'bonus_item_4_contains', alias?: string  } 
  | { name: 'bonus_item_4_not_contains', alias?: string  } 
  | { name: 'bonus_item_4_starts_with', alias?: string  } 
  | { name: 'bonus_item_4_not_starts_with', alias?: string  } 
  | { name: 'bonus_item_4_ends_with', alias?: string  } 
  | { name: 'bonus_item_4_not_ends_with', alias?: string  } 
  | { name: 'bonus_item_5', alias?: string  } 
  | { name: 'bonus_item_5_not', alias?: string  } 
  | { name: 'bonus_item_5_in', alias?: string  } 
  | { name: 'bonus_item_5_not_in', alias?: string  } 
  | { name: 'bonus_item_5_lt', alias?: string  } 
  | { name: 'bonus_item_5_lte', alias?: string  } 
  | { name: 'bonus_item_5_gt', alias?: string  } 
  | { name: 'bonus_item_5_gte', alias?: string  } 
  | { name: 'bonus_item_5_contains', alias?: string  } 
  | { name: 'bonus_item_5_not_contains', alias?: string  } 
  | { name: 'bonus_item_5_starts_with', alias?: string  } 
  | { name: 'bonus_item_5_not_starts_with', alias?: string  } 
  | { name: 'bonus_item_5_ends_with', alias?: string  } 
  | { name: 'bonus_item_5_not_ends_with', alias?: string  } 
  | { name: 'has_jewels', alias?: string  } 
  | { name: 'has_jewels_not', alias?: string  } 
  | { name: 'has_jewels_in', alias?: string  } 
  | { name: 'has_jewels_not_in', alias?: string  } 
  | { name: 'has_jewels_lt', alias?: string  } 
  | { name: 'has_jewels_lte', alias?: string  } 
  | { name: 'has_jewels_gt', alias?: string  } 
  | { name: 'has_jewels_gte', alias?: string  } 
  | { name: 'has_weapons', alias?: string  } 
  | { name: 'has_weapons_not', alias?: string  } 
  | { name: 'has_weapons_in', alias?: string  } 
  | { name: 'has_weapons_not_in', alias?: string  } 
  | { name: 'has_weapons_lt', alias?: string  } 
  | { name: 'has_weapons_lte', alias?: string  } 
  | { name: 'has_weapons_gt', alias?: string  } 
  | { name: 'has_weapons_gte', alias?: string  } 
  | { name: 'has_heavy_armor', alias?: string  } 
  | { name: 'has_heavy_armor_not', alias?: string  } 
  | { name: 'has_heavy_armor_in', alias?: string  } 
  | { name: 'has_heavy_armor_not_in', alias?: string  } 
  | { name: 'has_heavy_armor_lt', alias?: string  } 
  | { name: 'has_heavy_armor_lte', alias?: string  } 
  | { name: 'has_heavy_armor_gt', alias?: string  } 
  | { name: 'has_heavy_armor_gte', alias?: string  } 
  | { name: 'has_light_armor', alias?: string  } 
  | { name: 'has_light_armor_not', alias?: string  } 
  | { name: 'has_light_armor_in', alias?: string  } 
  | { name: 'has_light_armor_not_in', alias?: string  } 
  | { name: 'has_light_armor_lt', alias?: string  } 
  | { name: 'has_light_armor_lte', alias?: string  } 
  | { name: 'has_light_armor_gt', alias?: string  } 
  | { name: 'has_light_armor_gte', alias?: string  } 
  | { name: 'has_medium_armor', alias?: string  } 
  | { name: 'has_medium_armor_not', alias?: string  } 
  | { name: 'has_medium_armor_in', alias?: string  } 
  | { name: 'has_medium_armor_not_in', alias?: string  } 
  | { name: 'has_medium_armor_lt', alias?: string  } 
  | { name: 'has_medium_armor_lte', alias?: string  } 
  | { name: 'has_medium_armor_gt', alias?: string  } 
  | { name: 'has_medium_armor_gte', alias?: string  } 
  | { name: 'traits_needed', alias?: string  } 
  | { name: 'traits_needed_not', alias?: string  } 
  | { name: 'traits_needed_in', alias?: string  } 
  | { name: 'traits_needed_not_in', alias?: string  } 
  | { name: 'traits_needed_lt', alias?: string  } 
  | { name: 'traits_needed_lte', alias?: string  } 
  | { name: 'traits_needed_gt', alias?: string  } 
  | { name: 'traits_needed_gte', alias?: string  } 
  | { name: 'pts', alias?: string  } 
  | { name: 'pts_not', alias?: string  } 
  | { name: 'pts_in', alias?: string  } 
  | { name: 'pts_not_in', alias?: string  } 
  | { name: 'pts_lt', alias?: string  } 
  | { name: 'pts_lte', alias?: string  } 
  | { name: 'pts_gt', alias?: string  } 
  | { name: 'pts_gte', alias?: string  } 
  | { name: 'eso_id', alias?: string  } 
  | { name: 'eso_id_not', alias?: string  } 
  | { name: 'eso_id_in', alias?: string  } 
  | { name: 'eso_id_not_in', alias?: string  } 
  | { name: 'eso_id_lt', alias?: string  } 
  | { name: 'eso_id_lte', alias?: string  } 
  | { name: 'eso_id_gt', alias?: string  } 
  | { name: 'eso_id_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ModificationWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  type?: string | null
  type_not?: string | null
  type_in?: string[]
  type_not_in?: string[]
  type_lt?: string | null
  type_lte?: string | null
  type_gt?: string | null
  type_gte?: string | null
  type_contains?: string | null
  type_not_contains?: string | null
  type_starts_with?: string | null
  type_not_starts_with?: string | null
  type_ends_with?: string | null
  type_not_ends_with?: string | null
  itemType?: string | null
  itemType_not?: string | null
  itemType_in?: string[]
  itemType_not_in?: string[]
  itemType_lt?: string | null
  itemType_lte?: string | null
  itemType_gt?: string | null
  itemType_gte?: string | null
  itemType_contains?: string | null
  itemType_not_contains?: string | null
  itemType_starts_with?: string | null
  itemType_not_starts_with?: string | null
  itemType_ends_with?: string | null
  itemType_not_ends_with?: string | null
  modificationType?: string | null
  modificationType_not?: string | null
  modificationType_in?: string[]
  modificationType_not_in?: string[]
  modificationType_lt?: string | null
  modificationType_lte?: string | null
  modificationType_gt?: string | null
  modificationType_gte?: string | null
  modificationType_contains?: string | null
  modificationType_not_contains?: string | null
  modificationType_starts_with?: string | null
  modificationType_not_starts_with?: string | null
  modificationType_ends_with?: string | null
  modificationType_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  icon?: string | null
  icon_not?: string | null
  icon_in?: string[]
  icon_not_in?: string[]
  icon_lt?: string | null
  icon_lte?: string | null
  icon_gt?: string | null
  icon_gte?: string | null
  icon_contains?: string | null
  icon_not_contains?: string | null
  icon_starts_with?: string | null
  icon_not_starts_with?: string | null
  icon_ends_with?: string | null
  icon_not_ends_with?: string | null
  AND?: ModificationWhereInput[]
  OR?: ModificationWhereInput[]
  NOT?: ModificationWhereInput[]
}
export type ModificationWhereInputInputObject =
  | Extract<keyof ModificationWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'type_not', alias?: string  } 
  | { name: 'type_in', alias?: string  } 
  | { name: 'type_not_in', alias?: string  } 
  | { name: 'type_lt', alias?: string  } 
  | { name: 'type_lte', alias?: string  } 
  | { name: 'type_gt', alias?: string  } 
  | { name: 'type_gte', alias?: string  } 
  | { name: 'type_contains', alias?: string  } 
  | { name: 'type_not_contains', alias?: string  } 
  | { name: 'type_starts_with', alias?: string  } 
  | { name: 'type_not_starts_with', alias?: string  } 
  | { name: 'type_ends_with', alias?: string  } 
  | { name: 'type_not_ends_with', alias?: string  } 
  | { name: 'itemType', alias?: string  } 
  | { name: 'itemType_not', alias?: string  } 
  | { name: 'itemType_in', alias?: string  } 
  | { name: 'itemType_not_in', alias?: string  } 
  | { name: 'itemType_lt', alias?: string  } 
  | { name: 'itemType_lte', alias?: string  } 
  | { name: 'itemType_gt', alias?: string  } 
  | { name: 'itemType_gte', alias?: string  } 
  | { name: 'itemType_contains', alias?: string  } 
  | { name: 'itemType_not_contains', alias?: string  } 
  | { name: 'itemType_starts_with', alias?: string  } 
  | { name: 'itemType_not_starts_with', alias?: string  } 
  | { name: 'itemType_ends_with', alias?: string  } 
  | { name: 'itemType_not_ends_with', alias?: string  } 
  | { name: 'modificationType', alias?: string  } 
  | { name: 'modificationType_not', alias?: string  } 
  | { name: 'modificationType_in', alias?: string  } 
  | { name: 'modificationType_not_in', alias?: string  } 
  | { name: 'modificationType_lt', alias?: string  } 
  | { name: 'modificationType_lte', alias?: string  } 
  | { name: 'modificationType_gt', alias?: string  } 
  | { name: 'modificationType_gte', alias?: string  } 
  | { name: 'modificationType_contains', alias?: string  } 
  | { name: 'modificationType_not_contains', alias?: string  } 
  | { name: 'modificationType_starts_with', alias?: string  } 
  | { name: 'modificationType_not_starts_with', alias?: string  } 
  | { name: 'modificationType_ends_with', alias?: string  } 
  | { name: 'modificationType_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  | { name: 'icon_not', alias?: string  } 
  | { name: 'icon_in', alias?: string  } 
  | { name: 'icon_not_in', alias?: string  } 
  | { name: 'icon_lt', alias?: string  } 
  | { name: 'icon_lte', alias?: string  } 
  | { name: 'icon_gt', alias?: string  } 
  | { name: 'icon_gte', alias?: string  } 
  | { name: 'icon_contains', alias?: string  } 
  | { name: 'icon_not_contains', alias?: string  } 
  | { name: 'icon_starts_with', alias?: string  } 
  | { name: 'icon_not_starts_with', alias?: string  } 
  | { name: 'icon_ends_with', alias?: string  } 
  | { name: 'icon_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SkillSelectionWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  index?: number | null
  index_not?: number | null
  index_in?: number[]
  index_not_in?: number[]
  index_lt?: number | null
  index_lte?: number | null
  index_gt?: number | null
  index_gte?: number | null
  skill?: SkillWhereInput | null
  AND?: SkillSelectionWhereInput[]
  OR?: SkillSelectionWhereInput[]
  NOT?: SkillSelectionWhereInput[]
}
export type SkillSelectionWhereInputInputObject =
  | Extract<keyof SkillSelectionWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'index', alias?: string  } 
  | { name: 'index_not', alias?: string  } 
  | { name: 'index_in', alias?: string  } 
  | { name: 'index_not_in', alias?: string  } 
  | { name: 'index_lt', alias?: string  } 
  | { name: 'index_lte', alias?: string  } 
  | { name: 'index_gt', alias?: string  } 
  | { name: 'index_gte', alias?: string  } 
  | { name: 'skill', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SkillWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  skillId?: number | null
  skillId_not?: number | null
  skillId_in?: number[]
  skillId_not_in?: number[]
  skillId_lt?: number | null
  skillId_lte?: number | null
  skillId_gt?: number | null
  skillId_gte?: number | null
  cast_time?: string | null
  cast_time_not?: string | null
  cast_time_in?: string[]
  cast_time_not_in?: string[]
  cast_time_lt?: string | null
  cast_time_lte?: string | null
  cast_time_gt?: string | null
  cast_time_gte?: string | null
  cast_time_contains?: string | null
  cast_time_not_contains?: string | null
  cast_time_starts_with?: string | null
  cast_time_not_starts_with?: string | null
  cast_time_ends_with?: string | null
  cast_time_not_ends_with?: string | null
  cost?: string | null
  cost_not?: string | null
  cost_in?: string[]
  cost_not_in?: string[]
  cost_lt?: string | null
  cost_lte?: string | null
  cost_gt?: string | null
  cost_gte?: string | null
  cost_contains?: string | null
  cost_not_contains?: string | null
  cost_starts_with?: string | null
  cost_not_starts_with?: string | null
  cost_ends_with?: string | null
  cost_not_ends_with?: string | null
  effect_1?: string | null
  effect_1_not?: string | null
  effect_1_in?: string[]
  effect_1_not_in?: string[]
  effect_1_lt?: string | null
  effect_1_lte?: string | null
  effect_1_gt?: string | null
  effect_1_gte?: string | null
  effect_1_contains?: string | null
  effect_1_not_contains?: string | null
  effect_1_starts_with?: string | null
  effect_1_not_starts_with?: string | null
  effect_1_ends_with?: string | null
  effect_1_not_ends_with?: string | null
  effect_2?: string | null
  effect_2_not?: string | null
  effect_2_in?: string[]
  effect_2_not_in?: string[]
  effect_2_lt?: string | null
  effect_2_lte?: string | null
  effect_2_gt?: string | null
  effect_2_gte?: string | null
  effect_2_contains?: string | null
  effect_2_not_contains?: string | null
  effect_2_starts_with?: string | null
  effect_2_not_starts_with?: string | null
  effect_2_ends_with?: string | null
  effect_2_not_ends_with?: string | null
  icon?: string | null
  icon_not?: string | null
  icon_in?: string[]
  icon_not_in?: string[]
  icon_lt?: string | null
  icon_lte?: string | null
  icon_gt?: string | null
  icon_gte?: string | null
  icon_contains?: string | null
  icon_not_contains?: string | null
  icon_starts_with?: string | null
  icon_not_starts_with?: string | null
  icon_ends_with?: string | null
  icon_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  parent?: number | null
  parent_not?: number | null
  parent_in?: number[]
  parent_not_in?: number[]
  parent_lt?: number | null
  parent_lte?: number | null
  parent_gt?: number | null
  parent_gte?: number | null
  pts?: number | null
  pts_not?: number | null
  pts_in?: number[]
  pts_not_in?: number[]
  pts_lt?: number | null
  pts_lte?: number | null
  pts_gt?: number | null
  pts_gte?: number | null
  range?: string | null
  range_not?: string | null
  range_in?: string[]
  range_not_in?: string[]
  range_lt?: string | null
  range_lte?: string | null
  range_gt?: string | null
  range_gte?: string | null
  range_contains?: string | null
  range_not_contains?: string | null
  range_starts_with?: string | null
  range_not_starts_with?: string | null
  range_ends_with?: string | null
  range_not_ends_with?: string | null
  skillline?: number | null
  skillline_not?: number | null
  skillline_in?: number[]
  skillline_not_in?: number[]
  skillline_lt?: number | null
  skillline_lte?: number | null
  skillline_gt?: number | null
  skillline_gte?: number | null
  slug?: string | null
  slug_not?: string | null
  slug_in?: string[]
  slug_not_in?: string[]
  slug_lt?: string | null
  slug_lte?: string | null
  slug_gt?: string | null
  slug_gte?: string | null
  slug_contains?: string | null
  slug_not_contains?: string | null
  slug_starts_with?: string | null
  slug_not_starts_with?: string | null
  slug_ends_with?: string | null
  slug_not_ends_with?: string | null
  target?: string | null
  target_not?: string | null
  target_in?: string[]
  target_not_in?: string[]
  target_lt?: string | null
  target_lte?: string | null
  target_gt?: string | null
  target_gte?: string | null
  target_contains?: string | null
  target_not_contains?: string | null
  target_starts_with?: string | null
  target_not_starts_with?: string | null
  target_ends_with?: string | null
  target_not_ends_with?: string | null
  type?: number | null
  type_not?: number | null
  type_in?: number[]
  type_not_in?: number[]
  type_lt?: number | null
  type_lte?: number | null
  type_gt?: number | null
  type_gte?: number | null
  unlocks_at?: number | null
  unlocks_at_not?: number | null
  unlocks_at_in?: number[]
  unlocks_at_not_in?: number[]
  unlocks_at_lt?: number | null
  unlocks_at_lte?: number | null
  unlocks_at_gt?: number | null
  unlocks_at_gte?: number | null
  AND?: SkillWhereInput[]
  OR?: SkillWhereInput[]
  NOT?: SkillWhereInput[]
}
export type SkillWhereInputInputObject =
  | Extract<keyof SkillWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'skillId', alias?: string  } 
  | { name: 'skillId_not', alias?: string  } 
  | { name: 'skillId_in', alias?: string  } 
  | { name: 'skillId_not_in', alias?: string  } 
  | { name: 'skillId_lt', alias?: string  } 
  | { name: 'skillId_lte', alias?: string  } 
  | { name: 'skillId_gt', alias?: string  } 
  | { name: 'skillId_gte', alias?: string  } 
  | { name: 'cast_time', alias?: string  } 
  | { name: 'cast_time_not', alias?: string  } 
  | { name: 'cast_time_in', alias?: string  } 
  | { name: 'cast_time_not_in', alias?: string  } 
  | { name: 'cast_time_lt', alias?: string  } 
  | { name: 'cast_time_lte', alias?: string  } 
  | { name: 'cast_time_gt', alias?: string  } 
  | { name: 'cast_time_gte', alias?: string  } 
  | { name: 'cast_time_contains', alias?: string  } 
  | { name: 'cast_time_not_contains', alias?: string  } 
  | { name: 'cast_time_starts_with', alias?: string  } 
  | { name: 'cast_time_not_starts_with', alias?: string  } 
  | { name: 'cast_time_ends_with', alias?: string  } 
  | { name: 'cast_time_not_ends_with', alias?: string  } 
  | { name: 'cost', alias?: string  } 
  | { name: 'cost_not', alias?: string  } 
  | { name: 'cost_in', alias?: string  } 
  | { name: 'cost_not_in', alias?: string  } 
  | { name: 'cost_lt', alias?: string  } 
  | { name: 'cost_lte', alias?: string  } 
  | { name: 'cost_gt', alias?: string  } 
  | { name: 'cost_gte', alias?: string  } 
  | { name: 'cost_contains', alias?: string  } 
  | { name: 'cost_not_contains', alias?: string  } 
  | { name: 'cost_starts_with', alias?: string  } 
  | { name: 'cost_not_starts_with', alias?: string  } 
  | { name: 'cost_ends_with', alias?: string  } 
  | { name: 'cost_not_ends_with', alias?: string  } 
  | { name: 'effect_1', alias?: string  } 
  | { name: 'effect_1_not', alias?: string  } 
  | { name: 'effect_1_in', alias?: string  } 
  | { name: 'effect_1_not_in', alias?: string  } 
  | { name: 'effect_1_lt', alias?: string  } 
  | { name: 'effect_1_lte', alias?: string  } 
  | { name: 'effect_1_gt', alias?: string  } 
  | { name: 'effect_1_gte', alias?: string  } 
  | { name: 'effect_1_contains', alias?: string  } 
  | { name: 'effect_1_not_contains', alias?: string  } 
  | { name: 'effect_1_starts_with', alias?: string  } 
  | { name: 'effect_1_not_starts_with', alias?: string  } 
  | { name: 'effect_1_ends_with', alias?: string  } 
  | { name: 'effect_1_not_ends_with', alias?: string  } 
  | { name: 'effect_2', alias?: string  } 
  | { name: 'effect_2_not', alias?: string  } 
  | { name: 'effect_2_in', alias?: string  } 
  | { name: 'effect_2_not_in', alias?: string  } 
  | { name: 'effect_2_lt', alias?: string  } 
  | { name: 'effect_2_lte', alias?: string  } 
  | { name: 'effect_2_gt', alias?: string  } 
  | { name: 'effect_2_gte', alias?: string  } 
  | { name: 'effect_2_contains', alias?: string  } 
  | { name: 'effect_2_not_contains', alias?: string  } 
  | { name: 'effect_2_starts_with', alias?: string  } 
  | { name: 'effect_2_not_starts_with', alias?: string  } 
  | { name: 'effect_2_ends_with', alias?: string  } 
  | { name: 'effect_2_not_ends_with', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  | { name: 'icon_not', alias?: string  } 
  | { name: 'icon_in', alias?: string  } 
  | { name: 'icon_not_in', alias?: string  } 
  | { name: 'icon_lt', alias?: string  } 
  | { name: 'icon_lte', alias?: string  } 
  | { name: 'icon_gt', alias?: string  } 
  | { name: 'icon_gte', alias?: string  } 
  | { name: 'icon_contains', alias?: string  } 
  | { name: 'icon_not_contains', alias?: string  } 
  | { name: 'icon_starts_with', alias?: string  } 
  | { name: 'icon_not_starts_with', alias?: string  } 
  | { name: 'icon_ends_with', alias?: string  } 
  | { name: 'icon_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'parent', alias?: string  } 
  | { name: 'parent_not', alias?: string  } 
  | { name: 'parent_in', alias?: string  } 
  | { name: 'parent_not_in', alias?: string  } 
  | { name: 'parent_lt', alias?: string  } 
  | { name: 'parent_lte', alias?: string  } 
  | { name: 'parent_gt', alias?: string  } 
  | { name: 'parent_gte', alias?: string  } 
  | { name: 'pts', alias?: string  } 
  | { name: 'pts_not', alias?: string  } 
  | { name: 'pts_in', alias?: string  } 
  | { name: 'pts_not_in', alias?: string  } 
  | { name: 'pts_lt', alias?: string  } 
  | { name: 'pts_lte', alias?: string  } 
  | { name: 'pts_gt', alias?: string  } 
  | { name: 'pts_gte', alias?: string  } 
  | { name: 'range', alias?: string  } 
  | { name: 'range_not', alias?: string  } 
  | { name: 'range_in', alias?: string  } 
  | { name: 'range_not_in', alias?: string  } 
  | { name: 'range_lt', alias?: string  } 
  | { name: 'range_lte', alias?: string  } 
  | { name: 'range_gt', alias?: string  } 
  | { name: 'range_gte', alias?: string  } 
  | { name: 'range_contains', alias?: string  } 
  | { name: 'range_not_contains', alias?: string  } 
  | { name: 'range_starts_with', alias?: string  } 
  | { name: 'range_not_starts_with', alias?: string  } 
  | { name: 'range_ends_with', alias?: string  } 
  | { name: 'range_not_ends_with', alias?: string  } 
  | { name: 'skillline', alias?: string  } 
  | { name: 'skillline_not', alias?: string  } 
  | { name: 'skillline_in', alias?: string  } 
  | { name: 'skillline_not_in', alias?: string  } 
  | { name: 'skillline_lt', alias?: string  } 
  | { name: 'skillline_lte', alias?: string  } 
  | { name: 'skillline_gt', alias?: string  } 
  | { name: 'skillline_gte', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'slug_not', alias?: string  } 
  | { name: 'slug_in', alias?: string  } 
  | { name: 'slug_not_in', alias?: string  } 
  | { name: 'slug_lt', alias?: string  } 
  | { name: 'slug_lte', alias?: string  } 
  | { name: 'slug_gt', alias?: string  } 
  | { name: 'slug_gte', alias?: string  } 
  | { name: 'slug_contains', alias?: string  } 
  | { name: 'slug_not_contains', alias?: string  } 
  | { name: 'slug_starts_with', alias?: string  } 
  | { name: 'slug_not_starts_with', alias?: string  } 
  | { name: 'slug_ends_with', alias?: string  } 
  | { name: 'slug_not_ends_with', alias?: string  } 
  | { name: 'target', alias?: string  } 
  | { name: 'target_not', alias?: string  } 
  | { name: 'target_in', alias?: string  } 
  | { name: 'target_not_in', alias?: string  } 
  | { name: 'target_lt', alias?: string  } 
  | { name: 'target_lte', alias?: string  } 
  | { name: 'target_gt', alias?: string  } 
  | { name: 'target_gte', alias?: string  } 
  | { name: 'target_contains', alias?: string  } 
  | { name: 'target_not_contains', alias?: string  } 
  | { name: 'target_starts_with', alias?: string  } 
  | { name: 'target_not_starts_with', alias?: string  } 
  | { name: 'target_ends_with', alias?: string  } 
  | { name: 'target_not_ends_with', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'type_not', alias?: string  } 
  | { name: 'type_in', alias?: string  } 
  | { name: 'type_not_in', alias?: string  } 
  | { name: 'type_lt', alias?: string  } 
  | { name: 'type_lte', alias?: string  } 
  | { name: 'type_gt', alias?: string  } 
  | { name: 'type_gte', alias?: string  } 
  | { name: 'unlocks_at', alias?: string  } 
  | { name: 'unlocks_at_not', alias?: string  } 
  | { name: 'unlocks_at_in', alias?: string  } 
  | { name: 'unlocks_at_not_in', alias?: string  } 
  | { name: 'unlocks_at_lt', alias?: string  } 
  | { name: 'unlocks_at_lte', alias?: string  } 
  | { name: 'unlocks_at_gt', alias?: string  } 
  | { name: 'unlocks_at_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MundusStoneWhereInput {
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  aldmeri?: string | null
  aldmeri_not?: string | null
  aldmeri_in?: string[]
  aldmeri_not_in?: string[]
  aldmeri_lt?: string | null
  aldmeri_lte?: string | null
  aldmeri_gt?: string | null
  aldmeri_gte?: string | null
  aldmeri_contains?: string | null
  aldmeri_not_contains?: string | null
  aldmeri_starts_with?: string | null
  aldmeri_not_starts_with?: string | null
  aldmeri_ends_with?: string | null
  aldmeri_not_ends_with?: string | null
  daggerfall?: string | null
  daggerfall_not?: string | null
  daggerfall_in?: string[]
  daggerfall_not_in?: string[]
  daggerfall_lt?: string | null
  daggerfall_lte?: string | null
  daggerfall_gt?: string | null
  daggerfall_gte?: string | null
  daggerfall_contains?: string | null
  daggerfall_not_contains?: string | null
  daggerfall_starts_with?: string | null
  daggerfall_not_starts_with?: string | null
  daggerfall_ends_with?: string | null
  daggerfall_not_ends_with?: string | null
  ebonheart?: string | null
  ebonheart_not?: string | null
  ebonheart_in?: string[]
  ebonheart_not_in?: string[]
  ebonheart_lt?: string | null
  ebonheart_lte?: string | null
  ebonheart_gt?: string | null
  ebonheart_gte?: string | null
  ebonheart_contains?: string | null
  ebonheart_not_contains?: string | null
  ebonheart_starts_with?: string | null
  ebonheart_not_starts_with?: string | null
  ebonheart_ends_with?: string | null
  ebonheart_not_ends_with?: string | null
  effect?: string | null
  effect_not?: string | null
  effect_in?: string[]
  effect_not_in?: string[]
  effect_lt?: string | null
  effect_lte?: string | null
  effect_gt?: string | null
  effect_gte?: string | null
  effect_contains?: string | null
  effect_not_contains?: string | null
  effect_starts_with?: string | null
  effect_not_starts_with?: string | null
  effect_ends_with?: string | null
  effect_not_ends_with?: string | null
  value?: string | null
  value_not?: string | null
  value_in?: string[]
  value_not_in?: string[]
  value_lt?: string | null
  value_lte?: string | null
  value_gt?: string | null
  value_gte?: string | null
  value_contains?: string | null
  value_not_contains?: string | null
  value_starts_with?: string | null
  value_not_starts_with?: string | null
  value_ends_with?: string | null
  value_not_ends_with?: string | null
  icon?: string | null
  icon_not?: string | null
  icon_in?: string[]
  icon_not_in?: string[]
  icon_lt?: string | null
  icon_lte?: string | null
  icon_gt?: string | null
  icon_gte?: string | null
  icon_contains?: string | null
  icon_not_contains?: string | null
  icon_starts_with?: string | null
  icon_not_starts_with?: string | null
  icon_ends_with?: string | null
  icon_not_ends_with?: string | null
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  AND?: MundusStoneWhereInput[]
  OR?: MundusStoneWhereInput[]
  NOT?: MundusStoneWhereInput[]
}
export type MundusStoneWhereInputInputObject =
  | Extract<keyof MundusStoneWhereInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'aldmeri', alias?: string  } 
  | { name: 'aldmeri_not', alias?: string  } 
  | { name: 'aldmeri_in', alias?: string  } 
  | { name: 'aldmeri_not_in', alias?: string  } 
  | { name: 'aldmeri_lt', alias?: string  } 
  | { name: 'aldmeri_lte', alias?: string  } 
  | { name: 'aldmeri_gt', alias?: string  } 
  | { name: 'aldmeri_gte', alias?: string  } 
  | { name: 'aldmeri_contains', alias?: string  } 
  | { name: 'aldmeri_not_contains', alias?: string  } 
  | { name: 'aldmeri_starts_with', alias?: string  } 
  | { name: 'aldmeri_not_starts_with', alias?: string  } 
  | { name: 'aldmeri_ends_with', alias?: string  } 
  | { name: 'aldmeri_not_ends_with', alias?: string  } 
  | { name: 'daggerfall', alias?: string  } 
  | { name: 'daggerfall_not', alias?: string  } 
  | { name: 'daggerfall_in', alias?: string  } 
  | { name: 'daggerfall_not_in', alias?: string  } 
  | { name: 'daggerfall_lt', alias?: string  } 
  | { name: 'daggerfall_lte', alias?: string  } 
  | { name: 'daggerfall_gt', alias?: string  } 
  | { name: 'daggerfall_gte', alias?: string  } 
  | { name: 'daggerfall_contains', alias?: string  } 
  | { name: 'daggerfall_not_contains', alias?: string  } 
  | { name: 'daggerfall_starts_with', alias?: string  } 
  | { name: 'daggerfall_not_starts_with', alias?: string  } 
  | { name: 'daggerfall_ends_with', alias?: string  } 
  | { name: 'daggerfall_not_ends_with', alias?: string  } 
  | { name: 'ebonheart', alias?: string  } 
  | { name: 'ebonheart_not', alias?: string  } 
  | { name: 'ebonheart_in', alias?: string  } 
  | { name: 'ebonheart_not_in', alias?: string  } 
  | { name: 'ebonheart_lt', alias?: string  } 
  | { name: 'ebonheart_lte', alias?: string  } 
  | { name: 'ebonheart_gt', alias?: string  } 
  | { name: 'ebonheart_gte', alias?: string  } 
  | { name: 'ebonheart_contains', alias?: string  } 
  | { name: 'ebonheart_not_contains', alias?: string  } 
  | { name: 'ebonheart_starts_with', alias?: string  } 
  | { name: 'ebonheart_not_starts_with', alias?: string  } 
  | { name: 'ebonheart_ends_with', alias?: string  } 
  | { name: 'ebonheart_not_ends_with', alias?: string  } 
  | { name: 'effect', alias?: string  } 
  | { name: 'effect_not', alias?: string  } 
  | { name: 'effect_in', alias?: string  } 
  | { name: 'effect_not_in', alias?: string  } 
  | { name: 'effect_lt', alias?: string  } 
  | { name: 'effect_lte', alias?: string  } 
  | { name: 'effect_gt', alias?: string  } 
  | { name: 'effect_gte', alias?: string  } 
  | { name: 'effect_contains', alias?: string  } 
  | { name: 'effect_not_contains', alias?: string  } 
  | { name: 'effect_starts_with', alias?: string  } 
  | { name: 'effect_not_starts_with', alias?: string  } 
  | { name: 'effect_ends_with', alias?: string  } 
  | { name: 'effect_not_ends_with', alias?: string  } 
  | { name: 'value', alias?: string  } 
  | { name: 'value_not', alias?: string  } 
  | { name: 'value_in', alias?: string  } 
  | { name: 'value_not_in', alias?: string  } 
  | { name: 'value_lt', alias?: string  } 
  | { name: 'value_lte', alias?: string  } 
  | { name: 'value_gt', alias?: string  } 
  | { name: 'value_gte', alias?: string  } 
  | { name: 'value_contains', alias?: string  } 
  | { name: 'value_not_contains', alias?: string  } 
  | { name: 'value_starts_with', alias?: string  } 
  | { name: 'value_not_starts_with', alias?: string  } 
  | { name: 'value_ends_with', alias?: string  } 
  | { name: 'value_not_ends_with', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  | { name: 'icon_not', alias?: string  } 
  | { name: 'icon_in', alias?: string  } 
  | { name: 'icon_not_in', alias?: string  } 
  | { name: 'icon_lt', alias?: string  } 
  | { name: 'icon_lte', alias?: string  } 
  | { name: 'icon_gt', alias?: string  } 
  | { name: 'icon_gte', alias?: string  } 
  | { name: 'icon_contains', alias?: string  } 
  | { name: 'icon_not_contains', alias?: string  } 
  | { name: 'icon_starts_with', alias?: string  } 
  | { name: 'icon_not_starts_with', alias?: string  } 
  | { name: 'icon_ends_with', alias?: string  } 
  | { name: 'icon_not_ends_with', alias?: string  } 
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface BuffWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  buffDescription?: string | null
  buffDescription_not?: string | null
  buffDescription_in?: string[]
  buffDescription_not_in?: string[]
  buffDescription_lt?: string | null
  buffDescription_lte?: string | null
  buffDescription_gt?: string | null
  buffDescription_gte?: string | null
  buffDescription_contains?: string | null
  buffDescription_not_contains?: string | null
  buffDescription_starts_with?: string | null
  buffDescription_not_starts_with?: string | null
  buffDescription_ends_with?: string | null
  buffDescription_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  duration?: number | null
  duration_not?: number | null
  duration_in?: number[]
  duration_not_in?: number[]
  duration_lt?: number | null
  duration_lte?: number | null
  duration_gt?: number | null
  duration_gte?: number | null
  notes?: string | null
  notes_not?: string | null
  notes_in?: string[]
  notes_not_in?: string[]
  notes_lt?: string | null
  notes_lte?: string | null
  notes_gt?: string | null
  notes_gte?: string | null
  notes_contains?: string | null
  notes_not_contains?: string | null
  notes_starts_with?: string | null
  notes_not_starts_with?: string | null
  notes_ends_with?: string | null
  notes_not_ends_with?: string | null
  icon?: string | null
  icon_not?: string | null
  icon_in?: string[]
  icon_not_in?: string[]
  icon_lt?: string | null
  icon_lte?: string | null
  icon_gt?: string | null
  icon_gte?: string | null
  icon_contains?: string | null
  icon_not_contains?: string | null
  icon_starts_with?: string | null
  icon_not_starts_with?: string | null
  icon_ends_with?: string | null
  icon_not_ends_with?: string | null
  type?: string | null
  type_not?: string | null
  type_in?: string[]
  type_not_in?: string[]
  type_lt?: string | null
  type_lte?: string | null
  type_gt?: string | null
  type_gte?: string | null
  type_contains?: string | null
  type_not_contains?: string | null
  type_starts_with?: string | null
  type_not_starts_with?: string | null
  type_ends_with?: string | null
  type_not_ends_with?: string | null
  buffType?: string | null
  buffType_not?: string | null
  buffType_in?: string[]
  buffType_not_in?: string[]
  buffType_lt?: string | null
  buffType_lte?: string | null
  buffType_gt?: string | null
  buffType_gte?: string | null
  buffType_contains?: string | null
  buffType_not_contains?: string | null
  buffType_starts_with?: string | null
  buffType_not_starts_with?: string | null
  buffType_ends_with?: string | null
  buffType_not_ends_with?: string | null
  quality?: number | null
  quality_not?: number | null
  quality_in?: number[]
  quality_not_in?: number[]
  quality_lt?: number | null
  quality_lte?: number | null
  quality_gt?: number | null
  quality_gte?: number | null
  AND?: BuffWhereInput[]
  OR?: BuffWhereInput[]
  NOT?: BuffWhereInput[]
}
export type BuffWhereInputInputObject =
  | Extract<keyof BuffWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'buffDescription', alias?: string  } 
  | { name: 'buffDescription_not', alias?: string  } 
  | { name: 'buffDescription_in', alias?: string  } 
  | { name: 'buffDescription_not_in', alias?: string  } 
  | { name: 'buffDescription_lt', alias?: string  } 
  | { name: 'buffDescription_lte', alias?: string  } 
  | { name: 'buffDescription_gt', alias?: string  } 
  | { name: 'buffDescription_gte', alias?: string  } 
  | { name: 'buffDescription_contains', alias?: string  } 
  | { name: 'buffDescription_not_contains', alias?: string  } 
  | { name: 'buffDescription_starts_with', alias?: string  } 
  | { name: 'buffDescription_not_starts_with', alias?: string  } 
  | { name: 'buffDescription_ends_with', alias?: string  } 
  | { name: 'buffDescription_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'duration', alias?: string  } 
  | { name: 'duration_not', alias?: string  } 
  | { name: 'duration_in', alias?: string  } 
  | { name: 'duration_not_in', alias?: string  } 
  | { name: 'duration_lt', alias?: string  } 
  | { name: 'duration_lte', alias?: string  } 
  | { name: 'duration_gt', alias?: string  } 
  | { name: 'duration_gte', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  | { name: 'notes_not', alias?: string  } 
  | { name: 'notes_in', alias?: string  } 
  | { name: 'notes_not_in', alias?: string  } 
  | { name: 'notes_lt', alias?: string  } 
  | { name: 'notes_lte', alias?: string  } 
  | { name: 'notes_gt', alias?: string  } 
  | { name: 'notes_gte', alias?: string  } 
  | { name: 'notes_contains', alias?: string  } 
  | { name: 'notes_not_contains', alias?: string  } 
  | { name: 'notes_starts_with', alias?: string  } 
  | { name: 'notes_not_starts_with', alias?: string  } 
  | { name: 'notes_ends_with', alias?: string  } 
  | { name: 'notes_not_ends_with', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  | { name: 'icon_not', alias?: string  } 
  | { name: 'icon_in', alias?: string  } 
  | { name: 'icon_not_in', alias?: string  } 
  | { name: 'icon_lt', alias?: string  } 
  | { name: 'icon_lte', alias?: string  } 
  | { name: 'icon_gt', alias?: string  } 
  | { name: 'icon_gte', alias?: string  } 
  | { name: 'icon_contains', alias?: string  } 
  | { name: 'icon_not_contains', alias?: string  } 
  | { name: 'icon_starts_with', alias?: string  } 
  | { name: 'icon_not_starts_with', alias?: string  } 
  | { name: 'icon_ends_with', alias?: string  } 
  | { name: 'icon_not_ends_with', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'type_not', alias?: string  } 
  | { name: 'type_in', alias?: string  } 
  | { name: 'type_not_in', alias?: string  } 
  | { name: 'type_lt', alias?: string  } 
  | { name: 'type_lte', alias?: string  } 
  | { name: 'type_gt', alias?: string  } 
  | { name: 'type_gte', alias?: string  } 
  | { name: 'type_contains', alias?: string  } 
  | { name: 'type_not_contains', alias?: string  } 
  | { name: 'type_starts_with', alias?: string  } 
  | { name: 'type_not_starts_with', alias?: string  } 
  | { name: 'type_ends_with', alias?: string  } 
  | { name: 'type_not_ends_with', alias?: string  } 
  | { name: 'buffType', alias?: string  } 
  | { name: 'buffType_not', alias?: string  } 
  | { name: 'buffType_in', alias?: string  } 
  | { name: 'buffType_not_in', alias?: string  } 
  | { name: 'buffType_lt', alias?: string  } 
  | { name: 'buffType_lte', alias?: string  } 
  | { name: 'buffType_gt', alias?: string  } 
  | { name: 'buffType_gte', alias?: string  } 
  | { name: 'buffType_contains', alias?: string  } 
  | { name: 'buffType_not_contains', alias?: string  } 
  | { name: 'buffType_starts_with', alias?: string  } 
  | { name: 'buffType_not_starts_with', alias?: string  } 
  | { name: 'buffType_ends_with', alias?: string  } 
  | { name: 'buffType_not_ends_with', alias?: string  } 
  | { name: 'quality', alias?: string  } 
  | { name: 'quality_not', alias?: string  } 
  | { name: 'quality_in', alias?: string  } 
  | { name: 'quality_not_in', alias?: string  } 
  | { name: 'quality_lt', alias?: string  } 
  | { name: 'quality_lte', alias?: string  } 
  | { name: 'quality_gt', alias?: string  } 
  | { name: 'quality_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PostWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  published?: boolean | null
  published_not?: boolean | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  content?: string | null
  content_not?: string | null
  content_in?: string[]
  content_not_in?: string[]
  content_lt?: string | null
  content_lte?: string | null
  content_gt?: string | null
  content_gte?: string | null
  content_contains?: string | null
  content_not_contains?: string | null
  content_starts_with?: string | null
  content_not_starts_with?: string | null
  content_ends_with?: string | null
  content_not_ends_with?: string | null
  author?: UserWhereInput | null
  AND?: PostWhereInput[]
  OR?: PostWhereInput[]
  NOT?: PostWhereInput[]
}
export type PostWhereInputInputObject =
  | Extract<keyof PostWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'published_not', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'content_not', alias?: string  } 
  | { name: 'content_in', alias?: string  } 
  | { name: 'content_not_in', alias?: string  } 
  | { name: 'content_lt', alias?: string  } 
  | { name: 'content_lte', alias?: string  } 
  | { name: 'content_gt', alias?: string  } 
  | { name: 'content_gte', alias?: string  } 
  | { name: 'content_contains', alias?: string  } 
  | { name: 'content_not_contains', alias?: string  } 
  | { name: 'content_starts_with', alias?: string  } 
  | { name: 'content_not_starts_with', alias?: string  } 
  | { name: 'content_ends_with', alias?: string  } 
  | { name: 'content_not_ends_with', alias?: string  } 
  | { name: 'author', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface VerificationWhereUniqueInput {
  id?: string | null
  token?: string | null
}
export type VerificationWhereUniqueInputInputObject =
  | Extract<keyof VerificationWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'token', alias?: string  } 
  
export interface VerificationWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  token?: string | null
  token_not?: string | null
  token_in?: string[]
  token_not_in?: string[]
  token_lt?: string | null
  token_lte?: string | null
  token_gt?: string | null
  token_gte?: string | null
  token_contains?: string | null
  token_not_contains?: string | null
  token_starts_with?: string | null
  token_not_starts_with?: string | null
  token_ends_with?: string | null
  token_not_ends_with?: string | null
  user?: UserWhereInput | null
  AND?: VerificationWhereInput[]
  OR?: VerificationWhereInput[]
  NOT?: VerificationWhereInput[]
}
export type VerificationWhereInputInputObject =
  | Extract<keyof VerificationWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'token', alias?: string  } 
  | { name: 'token_not', alias?: string  } 
  | { name: 'token_in', alias?: string  } 
  | { name: 'token_not_in', alias?: string  } 
  | { name: 'token_lt', alias?: string  } 
  | { name: 'token_lte', alias?: string  } 
  | { name: 'token_gt', alias?: string  } 
  | { name: 'token_gte', alias?: string  } 
  | { name: 'token_contains', alias?: string  } 
  | { name: 'token_not_contains', alias?: string  } 
  | { name: 'token_starts_with', alias?: string  } 
  | { name: 'token_not_starts_with', alias?: string  } 
  | { name: 'token_ends_with', alias?: string  } 
  | { name: 'token_not_ends_with', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserWhereUniqueInput {
  id?: string | null
  email?: string | null
}
export type UserWhereUniqueInputInputObject =
  | Extract<keyof UserWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  
export interface MundusStoneWhereUniqueInput {
  name?: string | null
  id?: string | null
}
export type MundusStoneWhereUniqueInputInputObject =
  | Extract<keyof MundusStoneWhereUniqueInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'id', alias?: string  } 
  
export interface BuffWhereUniqueInput {
  id?: string | null
  name?: string | null
}
export type BuffWhereUniqueInputInputObject =
  | Extract<keyof BuffWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  
export interface SetSelectionWhereUniqueInput {
  id?: string | null
}
export type SetSelectionWhereUniqueInputInputObject =
  | Extract<keyof SetSelectionWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface SetWhereUniqueInput {
  id?: string | null
  setId?: number | null
}
export type SetWhereUniqueInputInputObject =
  | Extract<keyof SetWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'setId', alias?: string  } 
  
export interface ModificationWhereUniqueInput {
  id?: string | null
  description?: string | null
}
export type ModificationWhereUniqueInputInputObject =
  | Extract<keyof ModificationWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'description', alias?: string  } 
  
export interface SkillSelectionWhereUniqueInput {
  id?: string | null
}
export type SkillSelectionWhereUniqueInputInputObject =
  | Extract<keyof SkillSelectionWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface SkillWhereUniqueInput {
  id?: string | null
  skillId?: number | null
}
export type SkillWhereUniqueInputInputObject =
  | Extract<keyof SkillWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'skillId', alias?: string  } 
  
export interface BuildWhereUniqueInput {
  id?: string | null
}
export type BuildWhereUniqueInputInputObject =
  | Extract<keyof BuildWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface PostCreateInput {
  id?: string | null
  published?: boolean | null
  title?: string
  content?: string | null
  author?: UserCreateOneInput
}
export type PostCreateInputInputObject =
  | Extract<keyof PostCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'author', alias?: string  } 
  
export interface UserCreateOneInput {
  create?: UserCreateInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneInputInputObject =
  | Extract<keyof UserCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateInput {
  id?: string | null
  email?: string
  password?: string
  name?: string | null
  verified?: boolean | null
  builds?: BuildCreateManyWithoutOwnerInput | null
}
export type UserCreateInputInputObject =
  | Extract<keyof UserCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'verified', alias?: string  } 
  | { name: 'builds', alias?: string  } 
  
export interface BuildCreateManyWithoutOwnerInput {
  create?: BuildCreateWithoutOwnerInput[]
  connect?: BuildWhereUniqueInput[]
}
export type BuildCreateManyWithoutOwnerInputInputObject =
  | Extract<keyof BuildCreateManyWithoutOwnerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BuildCreateWithoutOwnerInput {
  id?: string | null
  name?: string | null
  race?: string | null
  esoClass?: string | null
  published?: boolean | null
  bigPieceSelection?: SetSelectionCreateManyInput | null
  smallPieceSelection?: SetSelectionCreateManyInput | null
  jewelrySelection?: SetSelectionCreateManyInput | null
  frontbarSelection?: SetSelectionCreateManyInput | null
  backbarSelection?: SetSelectionCreateManyInput | null
  newBarOne?: SkillSelectionCreateManyInput | null
  newBarTwo?: SkillSelectionCreateManyInput | null
  ultimateOne?: SkillCreateOneInput | null
  ultimateTwo?: SkillCreateOneInput | null
  mundusStone?: MundusStoneCreateOneInput | null
  buff?: BuffCreateOneInput | null
}
export type BuildCreateWithoutOwnerInputInputObject =
  | Extract<keyof BuildCreateWithoutOwnerInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'race', alias?: string  } 
  | { name: 'esoClass', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'bigPieceSelection', alias?: string  } 
  | { name: 'smallPieceSelection', alias?: string  } 
  | { name: 'jewelrySelection', alias?: string  } 
  | { name: 'frontbarSelection', alias?: string  } 
  | { name: 'backbarSelection', alias?: string  } 
  | { name: 'newBarOne', alias?: string  } 
  | { name: 'newBarTwo', alias?: string  } 
  | { name: 'ultimateOne', alias?: string  } 
  | { name: 'ultimateTwo', alias?: string  } 
  | { name: 'mundusStone', alias?: string  } 
  | { name: 'buff', alias?: string  } 
  
export interface SetSelectionCreateManyInput {
  create?: SetSelectionCreateInput[]
  connect?: SetSelectionWhereUniqueInput[]
}
export type SetSelectionCreateManyInputInputObject =
  | Extract<keyof SetSelectionCreateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SetSelectionCreateInput {
  id?: string | null
  icon?: string | null
  slot?: string | null
  selectedSet?: SetCreateOneInput | null
  trait?: ModificationCreateOneInput | null
  glyph?: ModificationCreateOneInput | null
}
export type SetSelectionCreateInputInputObject =
  | Extract<keyof SetSelectionCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  | { name: 'slot', alias?: string  } 
  | { name: 'selectedSet', alias?: string  } 
  | { name: 'trait', alias?: string  } 
  | { name: 'glyph', alias?: string  } 
  
export interface SetCreateOneInput {
  create?: SetCreateInput | null
  connect?: SetWhereUniqueInput | null
}
export type SetCreateOneInputInputObject =
  | Extract<keyof SetCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SetCreateInput {
  id?: string | null
  setId?: number
  name?: string
  location?: string
  type?: string
  slug?: string
  bonus_item_1?: string | null
  bonus_item_2?: string | null
  bonus_item_3?: string | null
  bonus_item_4?: string | null
  bonus_item_5?: string | null
  has_jewels?: number
  has_weapons?: number
  has_heavy_armor?: number
  has_light_armor?: number
  has_medium_armor?: number
  traits_needed?: number | null
  pts?: number | null
  eso_id?: number | null
}
export type SetCreateInputInputObject =
  | Extract<keyof SetCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'setId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'bonus_item_1', alias?: string  } 
  | { name: 'bonus_item_2', alias?: string  } 
  | { name: 'bonus_item_3', alias?: string  } 
  | { name: 'bonus_item_4', alias?: string  } 
  | { name: 'bonus_item_5', alias?: string  } 
  | { name: 'has_jewels', alias?: string  } 
  | { name: 'has_weapons', alias?: string  } 
  | { name: 'has_heavy_armor', alias?: string  } 
  | { name: 'has_light_armor', alias?: string  } 
  | { name: 'has_medium_armor', alias?: string  } 
  | { name: 'traits_needed', alias?: string  } 
  | { name: 'pts', alias?: string  } 
  | { name: 'eso_id', alias?: string  } 
  
export interface ModificationCreateOneInput {
  create?: ModificationCreateInput | null
  connect?: ModificationWhereUniqueInput | null
}
export type ModificationCreateOneInputInputObject =
  | Extract<keyof ModificationCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ModificationCreateInput {
  id?: string | null
  type?: string
  itemType?: string
  modificationType?: string
  description?: string
  icon?: string | null
}
export type ModificationCreateInputInputObject =
  | Extract<keyof ModificationCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'itemType', alias?: string  } 
  | { name: 'modificationType', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  
export interface SkillSelectionCreateManyInput {
  create?: SkillSelectionCreateInput[]
  connect?: SkillSelectionWhereUniqueInput[]
}
export type SkillSelectionCreateManyInputInputObject =
  | Extract<keyof SkillSelectionCreateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SkillSelectionCreateInput {
  id?: string | null
  index?: number
  skill?: SkillCreateOneInput | null
}
export type SkillSelectionCreateInputInputObject =
  | Extract<keyof SkillSelectionCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'index', alias?: string  } 
  | { name: 'skill', alias?: string  } 
  
export interface SkillCreateOneInput {
  create?: SkillCreateInput | null
  connect?: SkillWhereUniqueInput | null
}
export type SkillCreateOneInputInputObject =
  | Extract<keyof SkillCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SkillCreateInput {
  id?: string | null
  skillId?: number
  cast_time?: string
  cost?: string
  effect_1?: string
  effect_2?: string | null
  icon?: string | null
  name?: string
  parent?: number | null
  pts?: number | null
  range?: string | null
  skillline?: number
  slug?: string
  target?: string | null
  type?: number
  unlocks_at?: number | null
}
export type SkillCreateInputInputObject =
  | Extract<keyof SkillCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'skillId', alias?: string  } 
  | { name: 'cast_time', alias?: string  } 
  | { name: 'cost', alias?: string  } 
  | { name: 'effect_1', alias?: string  } 
  | { name: 'effect_2', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'parent', alias?: string  } 
  | { name: 'pts', alias?: string  } 
  | { name: 'range', alias?: string  } 
  | { name: 'skillline', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'target', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'unlocks_at', alias?: string  } 
  
export interface MundusStoneCreateOneInput {
  create?: MundusStoneCreateInput | null
  connect?: MundusStoneWhereUniqueInput | null
}
export type MundusStoneCreateOneInputInputObject =
  | Extract<keyof MundusStoneCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MundusStoneCreateInput {
  name?: string
  aldmeri?: string | null
  daggerfall?: string | null
  ebonheart?: string | null
  effect?: string
  value?: string
  icon?: string | null
  id?: string | null
}
export type MundusStoneCreateInputInputObject =
  | Extract<keyof MundusStoneCreateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'aldmeri', alias?: string  } 
  | { name: 'daggerfall', alias?: string  } 
  | { name: 'ebonheart', alias?: string  } 
  | { name: 'effect', alias?: string  } 
  | { name: 'value', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  | { name: 'id', alias?: string  } 
  
export interface BuffCreateOneInput {
  create?: BuffCreateInput | null
  connect?: BuffWhereUniqueInput | null
}
export type BuffCreateOneInputInputObject =
  | Extract<keyof BuffCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BuffCreateInput {
  id?: string | null
  name?: string
  buffDescription?: string
  description?: string | null
  duration?: number
  notes?: string | null
  icon?: string | null
  type?: string | null
  buffType?: string | null
  quality?: number
}
export type BuffCreateInputInputObject =
  | Extract<keyof BuffCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'buffDescription', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'duration', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'buffType', alias?: string  } 
  | { name: 'quality', alias?: string  } 
  
export interface PostUpdateInput {
  published?: boolean | null
  title?: string | null
  content?: string | null
  author?: UserUpdateOneRequiredInput | null
}
export type PostUpdateInputInputObject =
  | Extract<keyof PostUpdateInput, string>
  | { name: 'published', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'author', alias?: string  } 
  
export interface UserUpdateOneRequiredInput {
  create?: UserCreateInput | null
  update?: UserUpdateDataInput | null
  upsert?: UserUpsertNestedInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredInputInputObject =
  | Extract<keyof UserUpdateOneRequiredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateDataInput {
  email?: string | null
  password?: string | null
  name?: string | null
  verified?: boolean | null
  builds?: BuildUpdateManyWithoutOwnerInput | null
}
export type UserUpdateDataInputInputObject =
  | Extract<keyof UserUpdateDataInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'verified', alias?: string  } 
  | { name: 'builds', alias?: string  } 
  
export interface BuildUpdateManyWithoutOwnerInput {
  create?: BuildCreateWithoutOwnerInput[]
  delete?: BuildWhereUniqueInput[]
  connect?: BuildWhereUniqueInput[]
  set?: BuildWhereUniqueInput[]
  disconnect?: BuildWhereUniqueInput[]
  update?: BuildUpdateWithWhereUniqueWithoutOwnerInput[]
  upsert?: BuildUpsertWithWhereUniqueWithoutOwnerInput[]
  deleteMany?: BuildScalarWhereInput[]
  updateMany?: BuildUpdateManyWithWhereNestedInput[]
}
export type BuildUpdateManyWithoutOwnerInputInputObject =
  | Extract<keyof BuildUpdateManyWithoutOwnerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface BuildUpdateWithWhereUniqueWithoutOwnerInput {
  where?: BuildWhereUniqueInput
  data?: BuildUpdateWithoutOwnerDataInput
}
export type BuildUpdateWithWhereUniqueWithoutOwnerInputInputObject =
  | Extract<keyof BuildUpdateWithWhereUniqueWithoutOwnerInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface BuildUpdateWithoutOwnerDataInput {
  name?: string | null
  race?: string | null
  esoClass?: string | null
  published?: boolean | null
  bigPieceSelection?: SetSelectionUpdateManyInput | null
  smallPieceSelection?: SetSelectionUpdateManyInput | null
  jewelrySelection?: SetSelectionUpdateManyInput | null
  frontbarSelection?: SetSelectionUpdateManyInput | null
  backbarSelection?: SetSelectionUpdateManyInput | null
  newBarOne?: SkillSelectionUpdateManyInput | null
  newBarTwo?: SkillSelectionUpdateManyInput | null
  ultimateOne?: SkillUpdateOneInput | null
  ultimateTwo?: SkillUpdateOneInput | null
  mundusStone?: MundusStoneUpdateOneInput | null
  buff?: BuffUpdateOneInput | null
}
export type BuildUpdateWithoutOwnerDataInputInputObject =
  | Extract<keyof BuildUpdateWithoutOwnerDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'race', alias?: string  } 
  | { name: 'esoClass', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'bigPieceSelection', alias?: string  } 
  | { name: 'smallPieceSelection', alias?: string  } 
  | { name: 'jewelrySelection', alias?: string  } 
  | { name: 'frontbarSelection', alias?: string  } 
  | { name: 'backbarSelection', alias?: string  } 
  | { name: 'newBarOne', alias?: string  } 
  | { name: 'newBarTwo', alias?: string  } 
  | { name: 'ultimateOne', alias?: string  } 
  | { name: 'ultimateTwo', alias?: string  } 
  | { name: 'mundusStone', alias?: string  } 
  | { name: 'buff', alias?: string  } 
  
export interface SetSelectionUpdateManyInput {
  create?: SetSelectionCreateInput[]
  update?: SetSelectionUpdateWithWhereUniqueNestedInput[]
  upsert?: SetSelectionUpsertWithWhereUniqueNestedInput[]
  delete?: SetSelectionWhereUniqueInput[]
  connect?: SetSelectionWhereUniqueInput[]
  set?: SetSelectionWhereUniqueInput[]
  disconnect?: SetSelectionWhereUniqueInput[]
  deleteMany?: SetSelectionScalarWhereInput[]
  updateMany?: SetSelectionUpdateManyWithWhereNestedInput[]
}
export type SetSelectionUpdateManyInputInputObject =
  | Extract<keyof SetSelectionUpdateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface SetSelectionUpdateWithWhereUniqueNestedInput {
  where?: SetSelectionWhereUniqueInput
  data?: SetSelectionUpdateDataInput
}
export type SetSelectionUpdateWithWhereUniqueNestedInputInputObject =
  | Extract<keyof SetSelectionUpdateWithWhereUniqueNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface SetSelectionUpdateDataInput {
  icon?: string | null
  slot?: string | null
  selectedSet?: SetUpdateOneInput | null
  trait?: ModificationUpdateOneInput | null
  glyph?: ModificationUpdateOneInput | null
}
export type SetSelectionUpdateDataInputInputObject =
  | Extract<keyof SetSelectionUpdateDataInput, string>
  | { name: 'icon', alias?: string  } 
  | { name: 'slot', alias?: string  } 
  | { name: 'selectedSet', alias?: string  } 
  | { name: 'trait', alias?: string  } 
  | { name: 'glyph', alias?: string  } 
  
export interface SetUpdateOneInput {
  create?: SetCreateInput | null
  update?: SetUpdateDataInput | null
  upsert?: SetUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: SetWhereUniqueInput | null
}
export type SetUpdateOneInputInputObject =
  | Extract<keyof SetUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SetUpdateDataInput {
  setId?: number | null
  name?: string | null
  location?: string | null
  type?: string | null
  slug?: string | null
  bonus_item_1?: string | null
  bonus_item_2?: string | null
  bonus_item_3?: string | null
  bonus_item_4?: string | null
  bonus_item_5?: string | null
  has_jewels?: number | null
  has_weapons?: number | null
  has_heavy_armor?: number | null
  has_light_armor?: number | null
  has_medium_armor?: number | null
  traits_needed?: number | null
  pts?: number | null
  eso_id?: number | null
}
export type SetUpdateDataInputInputObject =
  | Extract<keyof SetUpdateDataInput, string>
  | { name: 'setId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'bonus_item_1', alias?: string  } 
  | { name: 'bonus_item_2', alias?: string  } 
  | { name: 'bonus_item_3', alias?: string  } 
  | { name: 'bonus_item_4', alias?: string  } 
  | { name: 'bonus_item_5', alias?: string  } 
  | { name: 'has_jewels', alias?: string  } 
  | { name: 'has_weapons', alias?: string  } 
  | { name: 'has_heavy_armor', alias?: string  } 
  | { name: 'has_light_armor', alias?: string  } 
  | { name: 'has_medium_armor', alias?: string  } 
  | { name: 'traits_needed', alias?: string  } 
  | { name: 'pts', alias?: string  } 
  | { name: 'eso_id', alias?: string  } 
  
export interface SetUpsertNestedInput {
  update?: SetUpdateDataInput
  create?: SetCreateInput
}
export type SetUpsertNestedInputInputObject =
  | Extract<keyof SetUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ModificationUpdateOneInput {
  create?: ModificationCreateInput | null
  update?: ModificationUpdateDataInput | null
  upsert?: ModificationUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: ModificationWhereUniqueInput | null
}
export type ModificationUpdateOneInputInputObject =
  | Extract<keyof ModificationUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ModificationUpdateDataInput {
  type?: string | null
  itemType?: string | null
  modificationType?: string | null
  description?: string | null
  icon?: string | null
}
export type ModificationUpdateDataInputInputObject =
  | Extract<keyof ModificationUpdateDataInput, string>
  | { name: 'type', alias?: string  } 
  | { name: 'itemType', alias?: string  } 
  | { name: 'modificationType', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  
export interface ModificationUpsertNestedInput {
  update?: ModificationUpdateDataInput
  create?: ModificationCreateInput
}
export type ModificationUpsertNestedInputInputObject =
  | Extract<keyof ModificationUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface SetSelectionUpsertWithWhereUniqueNestedInput {
  where?: SetSelectionWhereUniqueInput
  update?: SetSelectionUpdateDataInput
  create?: SetSelectionCreateInput
}
export type SetSelectionUpsertWithWhereUniqueNestedInputInputObject =
  | Extract<keyof SetSelectionUpsertWithWhereUniqueNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface SetSelectionScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  icon?: string | null
  icon_not?: string | null
  icon_in?: string[]
  icon_not_in?: string[]
  icon_lt?: string | null
  icon_lte?: string | null
  icon_gt?: string | null
  icon_gte?: string | null
  icon_contains?: string | null
  icon_not_contains?: string | null
  icon_starts_with?: string | null
  icon_not_starts_with?: string | null
  icon_ends_with?: string | null
  icon_not_ends_with?: string | null
  slot?: string | null
  slot_not?: string | null
  slot_in?: string[]
  slot_not_in?: string[]
  slot_lt?: string | null
  slot_lte?: string | null
  slot_gt?: string | null
  slot_gte?: string | null
  slot_contains?: string | null
  slot_not_contains?: string | null
  slot_starts_with?: string | null
  slot_not_starts_with?: string | null
  slot_ends_with?: string | null
  slot_not_ends_with?: string | null
  AND?: SetSelectionScalarWhereInput[]
  OR?: SetSelectionScalarWhereInput[]
  NOT?: SetSelectionScalarWhereInput[]
}
export type SetSelectionScalarWhereInputInputObject =
  | Extract<keyof SetSelectionScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  | { name: 'icon_not', alias?: string  } 
  | { name: 'icon_in', alias?: string  } 
  | { name: 'icon_not_in', alias?: string  } 
  | { name: 'icon_lt', alias?: string  } 
  | { name: 'icon_lte', alias?: string  } 
  | { name: 'icon_gt', alias?: string  } 
  | { name: 'icon_gte', alias?: string  } 
  | { name: 'icon_contains', alias?: string  } 
  | { name: 'icon_not_contains', alias?: string  } 
  | { name: 'icon_starts_with', alias?: string  } 
  | { name: 'icon_not_starts_with', alias?: string  } 
  | { name: 'icon_ends_with', alias?: string  } 
  | { name: 'icon_not_ends_with', alias?: string  } 
  | { name: 'slot', alias?: string  } 
  | { name: 'slot_not', alias?: string  } 
  | { name: 'slot_in', alias?: string  } 
  | { name: 'slot_not_in', alias?: string  } 
  | { name: 'slot_lt', alias?: string  } 
  | { name: 'slot_lte', alias?: string  } 
  | { name: 'slot_gt', alias?: string  } 
  | { name: 'slot_gte', alias?: string  } 
  | { name: 'slot_contains', alias?: string  } 
  | { name: 'slot_not_contains', alias?: string  } 
  | { name: 'slot_starts_with', alias?: string  } 
  | { name: 'slot_not_starts_with', alias?: string  } 
  | { name: 'slot_ends_with', alias?: string  } 
  | { name: 'slot_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SetSelectionUpdateManyWithWhereNestedInput {
  where?: SetSelectionScalarWhereInput
  data?: SetSelectionUpdateManyDataInput
}
export type SetSelectionUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof SetSelectionUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface SetSelectionUpdateManyDataInput {
  icon?: string | null
  slot?: string | null
}
export type SetSelectionUpdateManyDataInputInputObject =
  | Extract<keyof SetSelectionUpdateManyDataInput, string>
  | { name: 'icon', alias?: string  } 
  | { name: 'slot', alias?: string  } 
  
export interface SkillSelectionUpdateManyInput {
  create?: SkillSelectionCreateInput[]
  update?: SkillSelectionUpdateWithWhereUniqueNestedInput[]
  upsert?: SkillSelectionUpsertWithWhereUniqueNestedInput[]
  delete?: SkillSelectionWhereUniqueInput[]
  connect?: SkillSelectionWhereUniqueInput[]
  set?: SkillSelectionWhereUniqueInput[]
  disconnect?: SkillSelectionWhereUniqueInput[]
  deleteMany?: SkillSelectionScalarWhereInput[]
  updateMany?: SkillSelectionUpdateManyWithWhereNestedInput[]
}
export type SkillSelectionUpdateManyInputInputObject =
  | Extract<keyof SkillSelectionUpdateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface SkillSelectionUpdateWithWhereUniqueNestedInput {
  where?: SkillSelectionWhereUniqueInput
  data?: SkillSelectionUpdateDataInput
}
export type SkillSelectionUpdateWithWhereUniqueNestedInputInputObject =
  | Extract<keyof SkillSelectionUpdateWithWhereUniqueNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface SkillSelectionUpdateDataInput {
  index?: number | null
  skill?: SkillUpdateOneInput | null
}
export type SkillSelectionUpdateDataInputInputObject =
  | Extract<keyof SkillSelectionUpdateDataInput, string>
  | { name: 'index', alias?: string  } 
  | { name: 'skill', alias?: string  } 
  
export interface SkillUpdateOneInput {
  create?: SkillCreateInput | null
  update?: SkillUpdateDataInput | null
  upsert?: SkillUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: SkillWhereUniqueInput | null
}
export type SkillUpdateOneInputInputObject =
  | Extract<keyof SkillUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SkillUpdateDataInput {
  skillId?: number | null
  cast_time?: string | null
  cost?: string | null
  effect_1?: string | null
  effect_2?: string | null
  icon?: string | null
  name?: string | null
  parent?: number | null
  pts?: number | null
  range?: string | null
  skillline?: number | null
  slug?: string | null
  target?: string | null
  type?: number | null
  unlocks_at?: number | null
}
export type SkillUpdateDataInputInputObject =
  | Extract<keyof SkillUpdateDataInput, string>
  | { name: 'skillId', alias?: string  } 
  | { name: 'cast_time', alias?: string  } 
  | { name: 'cost', alias?: string  } 
  | { name: 'effect_1', alias?: string  } 
  | { name: 'effect_2', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'parent', alias?: string  } 
  | { name: 'pts', alias?: string  } 
  | { name: 'range', alias?: string  } 
  | { name: 'skillline', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'target', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'unlocks_at', alias?: string  } 
  
export interface SkillUpsertNestedInput {
  update?: SkillUpdateDataInput
  create?: SkillCreateInput
}
export type SkillUpsertNestedInputInputObject =
  | Extract<keyof SkillUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface SkillSelectionUpsertWithWhereUniqueNestedInput {
  where?: SkillSelectionWhereUniqueInput
  update?: SkillSelectionUpdateDataInput
  create?: SkillSelectionCreateInput
}
export type SkillSelectionUpsertWithWhereUniqueNestedInputInputObject =
  | Extract<keyof SkillSelectionUpsertWithWhereUniqueNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface SkillSelectionScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  index?: number | null
  index_not?: number | null
  index_in?: number[]
  index_not_in?: number[]
  index_lt?: number | null
  index_lte?: number | null
  index_gt?: number | null
  index_gte?: number | null
  AND?: SkillSelectionScalarWhereInput[]
  OR?: SkillSelectionScalarWhereInput[]
  NOT?: SkillSelectionScalarWhereInput[]
}
export type SkillSelectionScalarWhereInputInputObject =
  | Extract<keyof SkillSelectionScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'index', alias?: string  } 
  | { name: 'index_not', alias?: string  } 
  | { name: 'index_in', alias?: string  } 
  | { name: 'index_not_in', alias?: string  } 
  | { name: 'index_lt', alias?: string  } 
  | { name: 'index_lte', alias?: string  } 
  | { name: 'index_gt', alias?: string  } 
  | { name: 'index_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SkillSelectionUpdateManyWithWhereNestedInput {
  where?: SkillSelectionScalarWhereInput
  data?: SkillSelectionUpdateManyDataInput
}
export type SkillSelectionUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof SkillSelectionUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface SkillSelectionUpdateManyDataInput {
  index?: number | null
}
export type SkillSelectionUpdateManyDataInputInputObject =
  | Extract<keyof SkillSelectionUpdateManyDataInput, string>
  | { name: 'index', alias?: string  } 
  
export interface MundusStoneUpdateOneInput {
  create?: MundusStoneCreateInput | null
  update?: MundusStoneUpdateDataInput | null
  upsert?: MundusStoneUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: MundusStoneWhereUniqueInput | null
}
export type MundusStoneUpdateOneInputInputObject =
  | Extract<keyof MundusStoneUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MundusStoneUpdateDataInput {
  name?: string | null
  aldmeri?: string | null
  daggerfall?: string | null
  ebonheart?: string | null
  effect?: string | null
  value?: string | null
  icon?: string | null
}
export type MundusStoneUpdateDataInputInputObject =
  | Extract<keyof MundusStoneUpdateDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'aldmeri', alias?: string  } 
  | { name: 'daggerfall', alias?: string  } 
  | { name: 'ebonheart', alias?: string  } 
  | { name: 'effect', alias?: string  } 
  | { name: 'value', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  
export interface MundusStoneUpsertNestedInput {
  update?: MundusStoneUpdateDataInput
  create?: MundusStoneCreateInput
}
export type MundusStoneUpsertNestedInputInputObject =
  | Extract<keyof MundusStoneUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface BuffUpdateOneInput {
  create?: BuffCreateInput | null
  update?: BuffUpdateDataInput | null
  upsert?: BuffUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: BuffWhereUniqueInput | null
}
export type BuffUpdateOneInputInputObject =
  | Extract<keyof BuffUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BuffUpdateDataInput {
  name?: string | null
  buffDescription?: string | null
  description?: string | null
  duration?: number | null
  notes?: string | null
  icon?: string | null
  type?: string | null
  buffType?: string | null
  quality?: number | null
}
export type BuffUpdateDataInputInputObject =
  | Extract<keyof BuffUpdateDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'buffDescription', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'duration', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'buffType', alias?: string  } 
  | { name: 'quality', alias?: string  } 
  
export interface BuffUpsertNestedInput {
  update?: BuffUpdateDataInput
  create?: BuffCreateInput
}
export type BuffUpsertNestedInputInputObject =
  | Extract<keyof BuffUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface BuildUpsertWithWhereUniqueWithoutOwnerInput {
  where?: BuildWhereUniqueInput
  update?: BuildUpdateWithoutOwnerDataInput
  create?: BuildCreateWithoutOwnerInput
}
export type BuildUpsertWithWhereUniqueWithoutOwnerInputInputObject =
  | Extract<keyof BuildUpsertWithWhereUniqueWithoutOwnerInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface BuildScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  race?: string | null
  race_not?: string | null
  race_in?: string[]
  race_not_in?: string[]
  race_lt?: string | null
  race_lte?: string | null
  race_gt?: string | null
  race_gte?: string | null
  race_contains?: string | null
  race_not_contains?: string | null
  race_starts_with?: string | null
  race_not_starts_with?: string | null
  race_ends_with?: string | null
  race_not_ends_with?: string | null
  esoClass?: string | null
  esoClass_not?: string | null
  esoClass_in?: string[]
  esoClass_not_in?: string[]
  esoClass_lt?: string | null
  esoClass_lte?: string | null
  esoClass_gt?: string | null
  esoClass_gte?: string | null
  esoClass_contains?: string | null
  esoClass_not_contains?: string | null
  esoClass_starts_with?: string | null
  esoClass_not_starts_with?: string | null
  esoClass_ends_with?: string | null
  esoClass_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  published?: boolean | null
  published_not?: boolean | null
  AND?: BuildScalarWhereInput[]
  OR?: BuildScalarWhereInput[]
  NOT?: BuildScalarWhereInput[]
}
export type BuildScalarWhereInputInputObject =
  | Extract<keyof BuildScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'race', alias?: string  } 
  | { name: 'race_not', alias?: string  } 
  | { name: 'race_in', alias?: string  } 
  | { name: 'race_not_in', alias?: string  } 
  | { name: 'race_lt', alias?: string  } 
  | { name: 'race_lte', alias?: string  } 
  | { name: 'race_gt', alias?: string  } 
  | { name: 'race_gte', alias?: string  } 
  | { name: 'race_contains', alias?: string  } 
  | { name: 'race_not_contains', alias?: string  } 
  | { name: 'race_starts_with', alias?: string  } 
  | { name: 'race_not_starts_with', alias?: string  } 
  | { name: 'race_ends_with', alias?: string  } 
  | { name: 'race_not_ends_with', alias?: string  } 
  | { name: 'esoClass', alias?: string  } 
  | { name: 'esoClass_not', alias?: string  } 
  | { name: 'esoClass_in', alias?: string  } 
  | { name: 'esoClass_not_in', alias?: string  } 
  | { name: 'esoClass_lt', alias?: string  } 
  | { name: 'esoClass_lte', alias?: string  } 
  | { name: 'esoClass_gt', alias?: string  } 
  | { name: 'esoClass_gte', alias?: string  } 
  | { name: 'esoClass_contains', alias?: string  } 
  | { name: 'esoClass_not_contains', alias?: string  } 
  | { name: 'esoClass_starts_with', alias?: string  } 
  | { name: 'esoClass_not_starts_with', alias?: string  } 
  | { name: 'esoClass_ends_with', alias?: string  } 
  | { name: 'esoClass_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'published_not', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface BuildUpdateManyWithWhereNestedInput {
  where?: BuildScalarWhereInput
  data?: BuildUpdateManyDataInput
}
export type BuildUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof BuildUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface BuildUpdateManyDataInput {
  name?: string | null
  race?: string | null
  esoClass?: string | null
  published?: boolean | null
}
export type BuildUpdateManyDataInputInputObject =
  | Extract<keyof BuildUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'race', alias?: string  } 
  | { name: 'esoClass', alias?: string  } 
  | { name: 'published', alias?: string  } 
  
export interface UserUpsertNestedInput {
  update?: UserUpdateDataInput
  create?: UserCreateInput
}
export type UserUpsertNestedInputInputObject =
  | Extract<keyof UserUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PostUpdateManyMutationInput {
  published?: boolean | null
  title?: string | null
  content?: string | null
}
export type PostUpdateManyMutationInputInputObject =
  | Extract<keyof PostUpdateManyMutationInput, string>
  | { name: 'published', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  
export interface VerificationCreateInput {
  id?: string | null
  token?: string
  user?: UserCreateOneInput
}
export type VerificationCreateInputInputObject =
  | Extract<keyof VerificationCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'token', alias?: string  } 
  | { name: 'user', alias?: string  } 
  
export interface VerificationUpdateInput {
  token?: string | null
  user?: UserUpdateOneRequiredInput | null
}
export type VerificationUpdateInputInputObject =
  | Extract<keyof VerificationUpdateInput, string>
  | { name: 'token', alias?: string  } 
  | { name: 'user', alias?: string  } 
  
export interface VerificationUpdateManyMutationInput {
  token?: string | null
}
export type VerificationUpdateManyMutationInputInputObject =
  | Extract<keyof VerificationUpdateManyMutationInput, string>
  | { name: 'token', alias?: string  } 
  
export interface UserUpdateInput {
  email?: string | null
  password?: string | null
  name?: string | null
  verified?: boolean | null
  builds?: BuildUpdateManyWithoutOwnerInput | null
}
export type UserUpdateInputInputObject =
  | Extract<keyof UserUpdateInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'verified', alias?: string  } 
  | { name: 'builds', alias?: string  } 
  
export interface UserUpdateManyMutationInput {
  email?: string | null
  password?: string | null
  name?: string | null
  verified?: boolean | null
}
export type UserUpdateManyMutationInputInputObject =
  | Extract<keyof UserUpdateManyMutationInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'verified', alias?: string  } 
  
export interface MundusStoneUpdateInput {
  name?: string | null
  aldmeri?: string | null
  daggerfall?: string | null
  ebonheart?: string | null
  effect?: string | null
  value?: string | null
  icon?: string | null
}
export type MundusStoneUpdateInputInputObject =
  | Extract<keyof MundusStoneUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'aldmeri', alias?: string  } 
  | { name: 'daggerfall', alias?: string  } 
  | { name: 'ebonheart', alias?: string  } 
  | { name: 'effect', alias?: string  } 
  | { name: 'value', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  
export interface MundusStoneUpdateManyMutationInput {
  name?: string | null
  aldmeri?: string | null
  daggerfall?: string | null
  ebonheart?: string | null
  effect?: string | null
  value?: string | null
  icon?: string | null
}
export type MundusStoneUpdateManyMutationInputInputObject =
  | Extract<keyof MundusStoneUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'aldmeri', alias?: string  } 
  | { name: 'daggerfall', alias?: string  } 
  | { name: 'ebonheart', alias?: string  } 
  | { name: 'effect', alias?: string  } 
  | { name: 'value', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  
export interface BuffUpdateInput {
  name?: string | null
  buffDescription?: string | null
  description?: string | null
  duration?: number | null
  notes?: string | null
  icon?: string | null
  type?: string | null
  buffType?: string | null
  quality?: number | null
}
export type BuffUpdateInputInputObject =
  | Extract<keyof BuffUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'buffDescription', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'duration', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'buffType', alias?: string  } 
  | { name: 'quality', alias?: string  } 
  
export interface BuffUpdateManyMutationInput {
  name?: string | null
  buffDescription?: string | null
  description?: string | null
  duration?: number | null
  notes?: string | null
  icon?: string | null
  type?: string | null
  buffType?: string | null
  quality?: number | null
}
export type BuffUpdateManyMutationInputInputObject =
  | Extract<keyof BuffUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'buffDescription', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'duration', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'buffType', alias?: string  } 
  | { name: 'quality', alias?: string  } 
  
export interface SetSelectionUpdateInput {
  icon?: string | null
  slot?: string | null
  selectedSet?: SetUpdateOneInput | null
  trait?: ModificationUpdateOneInput | null
  glyph?: ModificationUpdateOneInput | null
}
export type SetSelectionUpdateInputInputObject =
  | Extract<keyof SetSelectionUpdateInput, string>
  | { name: 'icon', alias?: string  } 
  | { name: 'slot', alias?: string  } 
  | { name: 'selectedSet', alias?: string  } 
  | { name: 'trait', alias?: string  } 
  | { name: 'glyph', alias?: string  } 
  
export interface SetSelectionUpdateManyMutationInput {
  icon?: string | null
  slot?: string | null
}
export type SetSelectionUpdateManyMutationInputInputObject =
  | Extract<keyof SetSelectionUpdateManyMutationInput, string>
  | { name: 'icon', alias?: string  } 
  | { name: 'slot', alias?: string  } 
  
export interface SetUpdateInput {
  setId?: number | null
  name?: string | null
  location?: string | null
  type?: string | null
  slug?: string | null
  bonus_item_1?: string | null
  bonus_item_2?: string | null
  bonus_item_3?: string | null
  bonus_item_4?: string | null
  bonus_item_5?: string | null
  has_jewels?: number | null
  has_weapons?: number | null
  has_heavy_armor?: number | null
  has_light_armor?: number | null
  has_medium_armor?: number | null
  traits_needed?: number | null
  pts?: number | null
  eso_id?: number | null
}
export type SetUpdateInputInputObject =
  | Extract<keyof SetUpdateInput, string>
  | { name: 'setId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'bonus_item_1', alias?: string  } 
  | { name: 'bonus_item_2', alias?: string  } 
  | { name: 'bonus_item_3', alias?: string  } 
  | { name: 'bonus_item_4', alias?: string  } 
  | { name: 'bonus_item_5', alias?: string  } 
  | { name: 'has_jewels', alias?: string  } 
  | { name: 'has_weapons', alias?: string  } 
  | { name: 'has_heavy_armor', alias?: string  } 
  | { name: 'has_light_armor', alias?: string  } 
  | { name: 'has_medium_armor', alias?: string  } 
  | { name: 'traits_needed', alias?: string  } 
  | { name: 'pts', alias?: string  } 
  | { name: 'eso_id', alias?: string  } 
  
export interface SetUpdateManyMutationInput {
  setId?: number | null
  name?: string | null
  location?: string | null
  type?: string | null
  slug?: string | null
  bonus_item_1?: string | null
  bonus_item_2?: string | null
  bonus_item_3?: string | null
  bonus_item_4?: string | null
  bonus_item_5?: string | null
  has_jewels?: number | null
  has_weapons?: number | null
  has_heavy_armor?: number | null
  has_light_armor?: number | null
  has_medium_armor?: number | null
  traits_needed?: number | null
  pts?: number | null
  eso_id?: number | null
}
export type SetUpdateManyMutationInputInputObject =
  | Extract<keyof SetUpdateManyMutationInput, string>
  | { name: 'setId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'bonus_item_1', alias?: string  } 
  | { name: 'bonus_item_2', alias?: string  } 
  | { name: 'bonus_item_3', alias?: string  } 
  | { name: 'bonus_item_4', alias?: string  } 
  | { name: 'bonus_item_5', alias?: string  } 
  | { name: 'has_jewels', alias?: string  } 
  | { name: 'has_weapons', alias?: string  } 
  | { name: 'has_heavy_armor', alias?: string  } 
  | { name: 'has_light_armor', alias?: string  } 
  | { name: 'has_medium_armor', alias?: string  } 
  | { name: 'traits_needed', alias?: string  } 
  | { name: 'pts', alias?: string  } 
  | { name: 'eso_id', alias?: string  } 
  
export interface ModificationUpdateInput {
  type?: string | null
  itemType?: string | null
  modificationType?: string | null
  description?: string | null
  icon?: string | null
}
export type ModificationUpdateInputInputObject =
  | Extract<keyof ModificationUpdateInput, string>
  | { name: 'type', alias?: string  } 
  | { name: 'itemType', alias?: string  } 
  | { name: 'modificationType', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  
export interface ModificationUpdateManyMutationInput {
  type?: string | null
  itemType?: string | null
  modificationType?: string | null
  description?: string | null
  icon?: string | null
}
export type ModificationUpdateManyMutationInputInputObject =
  | Extract<keyof ModificationUpdateManyMutationInput, string>
  | { name: 'type', alias?: string  } 
  | { name: 'itemType', alias?: string  } 
  | { name: 'modificationType', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  
export interface SkillSelectionUpdateInput {
  index?: number | null
  skill?: SkillUpdateOneInput | null
}
export type SkillSelectionUpdateInputInputObject =
  | Extract<keyof SkillSelectionUpdateInput, string>
  | { name: 'index', alias?: string  } 
  | { name: 'skill', alias?: string  } 
  
export interface SkillSelectionUpdateManyMutationInput {
  index?: number | null
}
export type SkillSelectionUpdateManyMutationInputInputObject =
  | Extract<keyof SkillSelectionUpdateManyMutationInput, string>
  | { name: 'index', alias?: string  } 
  
export interface SkillUpdateInput {
  skillId?: number | null
  cast_time?: string | null
  cost?: string | null
  effect_1?: string | null
  effect_2?: string | null
  icon?: string | null
  name?: string | null
  parent?: number | null
  pts?: number | null
  range?: string | null
  skillline?: number | null
  slug?: string | null
  target?: string | null
  type?: number | null
  unlocks_at?: number | null
}
export type SkillUpdateInputInputObject =
  | Extract<keyof SkillUpdateInput, string>
  | { name: 'skillId', alias?: string  } 
  | { name: 'cast_time', alias?: string  } 
  | { name: 'cost', alias?: string  } 
  | { name: 'effect_1', alias?: string  } 
  | { name: 'effect_2', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'parent', alias?: string  } 
  | { name: 'pts', alias?: string  } 
  | { name: 'range', alias?: string  } 
  | { name: 'skillline', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'target', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'unlocks_at', alias?: string  } 
  
export interface SkillUpdateManyMutationInput {
  skillId?: number | null
  cast_time?: string | null
  cost?: string | null
  effect_1?: string | null
  effect_2?: string | null
  icon?: string | null
  name?: string | null
  parent?: number | null
  pts?: number | null
  range?: string | null
  skillline?: number | null
  slug?: string | null
  target?: string | null
  type?: number | null
  unlocks_at?: number | null
}
export type SkillUpdateManyMutationInputInputObject =
  | Extract<keyof SkillUpdateManyMutationInput, string>
  | { name: 'skillId', alias?: string  } 
  | { name: 'cast_time', alias?: string  } 
  | { name: 'cost', alias?: string  } 
  | { name: 'effect_1', alias?: string  } 
  | { name: 'effect_2', alias?: string  } 
  | { name: 'icon', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'parent', alias?: string  } 
  | { name: 'pts', alias?: string  } 
  | { name: 'range', alias?: string  } 
  | { name: 'skillline', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'target', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'unlocks_at', alias?: string  } 
  
export interface BuildCreateInput {
  id?: string | null
  owner?: UserCreateOneWithoutBuildsInput | null
  name?: string | null
  race?: string | null
  esoClass?: string | null
  published?: boolean | null
  bigPieceSelection?: SetSelectionCreateManyInput | null
  smallPieceSelection?: SetSelectionCreateManyInput | null
  jewelrySelection?: SetSelectionCreateManyInput | null
  frontbarSelection?: SetSelectionCreateManyInput | null
  backbarSelection?: SetSelectionCreateManyInput | null
  newBarOne?: SkillSelectionCreateManyInput | null
  newBarTwo?: SkillSelectionCreateManyInput | null
  ultimateOne?: SkillCreateOneInput | null
  ultimateTwo?: SkillCreateOneInput | null
  mundusStone?: MundusStoneCreateOneInput | null
  buff?: BuffCreateOneInput | null
}
export type BuildCreateInputInputObject =
  | Extract<keyof BuildCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'owner', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'race', alias?: string  } 
  | { name: 'esoClass', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'bigPieceSelection', alias?: string  } 
  | { name: 'smallPieceSelection', alias?: string  } 
  | { name: 'jewelrySelection', alias?: string  } 
  | { name: 'frontbarSelection', alias?: string  } 
  | { name: 'backbarSelection', alias?: string  } 
  | { name: 'newBarOne', alias?: string  } 
  | { name: 'newBarTwo', alias?: string  } 
  | { name: 'ultimateOne', alias?: string  } 
  | { name: 'ultimateTwo', alias?: string  } 
  | { name: 'mundusStone', alias?: string  } 
  | { name: 'buff', alias?: string  } 
  
export interface UserCreateOneWithoutBuildsInput {
  create?: UserCreateWithoutBuildsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutBuildsInputInputObject =
  | Extract<keyof UserCreateOneWithoutBuildsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutBuildsInput {
  id?: string | null
  email?: string
  password?: string
  name?: string | null
  verified?: boolean | null
}
export type UserCreateWithoutBuildsInputInputObject =
  | Extract<keyof UserCreateWithoutBuildsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'verified', alias?: string  } 
  
export interface BuildUpdateInput {
  owner?: UserUpdateOneWithoutBuildsInput | null
  name?: string | null
  race?: string | null
  esoClass?: string | null
  published?: boolean | null
  bigPieceSelection?: SetSelectionUpdateManyInput | null
  smallPieceSelection?: SetSelectionUpdateManyInput | null
  jewelrySelection?: SetSelectionUpdateManyInput | null
  frontbarSelection?: SetSelectionUpdateManyInput | null
  backbarSelection?: SetSelectionUpdateManyInput | null
  newBarOne?: SkillSelectionUpdateManyInput | null
  newBarTwo?: SkillSelectionUpdateManyInput | null
  ultimateOne?: SkillUpdateOneInput | null
  ultimateTwo?: SkillUpdateOneInput | null
  mundusStone?: MundusStoneUpdateOneInput | null
  buff?: BuffUpdateOneInput | null
}
export type BuildUpdateInputInputObject =
  | Extract<keyof BuildUpdateInput, string>
  | { name: 'owner', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'race', alias?: string  } 
  | { name: 'esoClass', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'bigPieceSelection', alias?: string  } 
  | { name: 'smallPieceSelection', alias?: string  } 
  | { name: 'jewelrySelection', alias?: string  } 
  | { name: 'frontbarSelection', alias?: string  } 
  | { name: 'backbarSelection', alias?: string  } 
  | { name: 'newBarOne', alias?: string  } 
  | { name: 'newBarTwo', alias?: string  } 
  | { name: 'ultimateOne', alias?: string  } 
  | { name: 'ultimateTwo', alias?: string  } 
  | { name: 'mundusStone', alias?: string  } 
  | { name: 'buff', alias?: string  } 
  
export interface UserUpdateOneWithoutBuildsInput {
  create?: UserCreateWithoutBuildsInput | null
  update?: UserUpdateWithoutBuildsDataInput | null
  upsert?: UserUpsertWithoutBuildsInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneWithoutBuildsInputInputObject =
  | Extract<keyof UserUpdateOneWithoutBuildsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutBuildsDataInput {
  email?: string | null
  password?: string | null
  name?: string | null
  verified?: boolean | null
}
export type UserUpdateWithoutBuildsDataInputInputObject =
  | Extract<keyof UserUpdateWithoutBuildsDataInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'verified', alias?: string  } 
  
export interface UserUpsertWithoutBuildsInput {
  update?: UserUpdateWithoutBuildsDataInput
  create?: UserCreateWithoutBuildsInput
}
export type UserUpsertWithoutBuildsInputInputObject =
  | Extract<keyof UserUpsertWithoutBuildsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface BuildUpdateManyMutationInput {
  name?: string | null
  race?: string | null
  esoClass?: string | null
  published?: boolean | null
}
export type BuildUpdateManyMutationInputInputObject =
  | Extract<keyof BuildUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'race', alias?: string  } 
  | { name: 'esoClass', alias?: string  } 
  | { name: 'published', alias?: string  } 
  
export interface PostSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: PostWhereInput | null
  AND?: PostSubscriptionWhereInput[]
  OR?: PostSubscriptionWhereInput[]
  NOT?: PostSubscriptionWhereInput[]
}
export type PostSubscriptionWhereInputInputObject =
  | Extract<keyof PostSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface VerificationSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: VerificationWhereInput | null
  AND?: VerificationSubscriptionWhereInput[]
  OR?: VerificationSubscriptionWhereInput[]
  NOT?: VerificationSubscriptionWhereInput[]
}
export type VerificationSubscriptionWhereInputInputObject =
  | Extract<keyof VerificationSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: UserWhereInput | null
  AND?: UserSubscriptionWhereInput[]
  OR?: UserSubscriptionWhereInput[]
  NOT?: UserSubscriptionWhereInput[]
}
export type UserSubscriptionWhereInputInputObject =
  | Extract<keyof UserSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MundusStoneSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: MundusStoneWhereInput | null
  AND?: MundusStoneSubscriptionWhereInput[]
  OR?: MundusStoneSubscriptionWhereInput[]
  NOT?: MundusStoneSubscriptionWhereInput[]
}
export type MundusStoneSubscriptionWhereInputInputObject =
  | Extract<keyof MundusStoneSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface BuffSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: BuffWhereInput | null
  AND?: BuffSubscriptionWhereInput[]
  OR?: BuffSubscriptionWhereInput[]
  NOT?: BuffSubscriptionWhereInput[]
}
export type BuffSubscriptionWhereInputInputObject =
  | Extract<keyof BuffSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SetSelectionSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: SetSelectionWhereInput | null
  AND?: SetSelectionSubscriptionWhereInput[]
  OR?: SetSelectionSubscriptionWhereInput[]
  NOT?: SetSelectionSubscriptionWhereInput[]
}
export type SetSelectionSubscriptionWhereInputInputObject =
  | Extract<keyof SetSelectionSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SetSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: SetWhereInput | null
  AND?: SetSubscriptionWhereInput[]
  OR?: SetSubscriptionWhereInput[]
  NOT?: SetSubscriptionWhereInput[]
}
export type SetSubscriptionWhereInputInputObject =
  | Extract<keyof SetSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ModificationSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ModificationWhereInput | null
  AND?: ModificationSubscriptionWhereInput[]
  OR?: ModificationSubscriptionWhereInput[]
  NOT?: ModificationSubscriptionWhereInput[]
}
export type ModificationSubscriptionWhereInputInputObject =
  | Extract<keyof ModificationSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SkillSelectionSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: SkillSelectionWhereInput | null
  AND?: SkillSelectionSubscriptionWhereInput[]
  OR?: SkillSelectionSubscriptionWhereInput[]
  NOT?: SkillSelectionSubscriptionWhereInput[]
}
export type SkillSelectionSubscriptionWhereInputInputObject =
  | Extract<keyof SkillSelectionSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SkillSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: SkillWhereInput | null
  AND?: SkillSubscriptionWhereInput[]
  OR?: SkillSubscriptionWhereInput[]
  NOT?: SkillSubscriptionWhereInput[]
}
export type SkillSubscriptionWhereInputInputObject =
  | Extract<keyof SkillSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface BuildSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: BuildWhereInput | null
  AND?: BuildSubscriptionWhereInput[]
  OR?: BuildSubscriptionWhereInput[]
  NOT?: BuildSubscriptionWhereInput[]
}
export type BuildSubscriptionWhereInputInputObject =
  | Extract<keyof BuildSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  

export type BuildOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'race_ASC'
  | 'race_DESC'
  | 'esoClass_ASC'
  | 'esoClass_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'published_ASC'
  | 'published_DESC'
  
export type SetSelectionOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'icon_ASC'
  | 'icon_DESC'
  | 'slot_ASC'
  | 'slot_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type SkillSelectionOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'index_ASC'
  | 'index_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type PostOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'published_ASC'
  | 'published_DESC'
  | 'title_ASC'
  | 'title_DESC'
  | 'content_ASC'
  | 'content_DESC'
  
export type VerificationOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'token_ASC'
  | 'token_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type UserOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'password_ASC'
  | 'password_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'verified_ASC'
  | 'verified_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MundusStoneOrderByInputValues =
  | 'name_ASC'
  | 'name_DESC'
  | 'aldmeri_ASC'
  | 'aldmeri_DESC'
  | 'daggerfall_ASC'
  | 'daggerfall_DESC'
  | 'ebonheart_ASC'
  | 'ebonheart_DESC'
  | 'effect_ASC'
  | 'effect_DESC'
  | 'value_ASC'
  | 'value_DESC'
  | 'icon_ASC'
  | 'icon_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type BuffOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'buffDescription_ASC'
  | 'buffDescription_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'duration_ASC'
  | 'duration_DESC'
  | 'notes_ASC'
  | 'notes_DESC'
  | 'icon_ASC'
  | 'icon_DESC'
  | 'type_ASC'
  | 'type_DESC'
  | 'buffType_ASC'
  | 'buffType_DESC'
  | 'quality_ASC'
  | 'quality_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type SetOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'setId_ASC'
  | 'setId_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'location_ASC'
  | 'location_DESC'
  | 'type_ASC'
  | 'type_DESC'
  | 'slug_ASC'
  | 'slug_DESC'
  | 'bonus_item_1_ASC'
  | 'bonus_item_1_DESC'
  | 'bonus_item_2_ASC'
  | 'bonus_item_2_DESC'
  | 'bonus_item_3_ASC'
  | 'bonus_item_3_DESC'
  | 'bonus_item_4_ASC'
  | 'bonus_item_4_DESC'
  | 'bonus_item_5_ASC'
  | 'bonus_item_5_DESC'
  | 'has_jewels_ASC'
  | 'has_jewels_DESC'
  | 'has_weapons_ASC'
  | 'has_weapons_DESC'
  | 'has_heavy_armor_ASC'
  | 'has_heavy_armor_DESC'
  | 'has_light_armor_ASC'
  | 'has_light_armor_DESC'
  | 'has_medium_armor_ASC'
  | 'has_medium_armor_DESC'
  | 'traits_needed_ASC'
  | 'traits_needed_DESC'
  | 'pts_ASC'
  | 'pts_DESC'
  | 'eso_id_ASC'
  | 'eso_id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type ModificationOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'type_ASC'
  | 'type_DESC'
  | 'itemType_ASC'
  | 'itemType_DESC'
  | 'modificationType_ASC'
  | 'modificationType_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'icon_ASC'
  | 'icon_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type SkillOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'skillId_ASC'
  | 'skillId_DESC'
  | 'cast_time_ASC'
  | 'cast_time_DESC'
  | 'cost_ASC'
  | 'cost_DESC'
  | 'effect_1_ASC'
  | 'effect_1_DESC'
  | 'effect_2_ASC'
  | 'effect_2_DESC'
  | 'icon_ASC'
  | 'icon_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'parent_ASC'
  | 'parent_DESC'
  | 'pts_ASC'
  | 'pts_DESC'
  | 'range_ASC'
  | 'range_DESC'
  | 'skillline_ASC'
  | 'skillline_DESC'
  | 'slug_ASC'
  | 'slug_DESC'
  | 'target_ASC'
  | 'target_DESC'
  | 'type_ASC'
  | 'type_DESC'
  | 'unlocks_at_ASC'
  | 'unlocks_at_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  