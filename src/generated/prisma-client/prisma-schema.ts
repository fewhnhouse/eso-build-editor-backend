// Code generated by Prisma (prisma@1.34.3). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

export const typeDefs = /* GraphQL */ `type AggregateBuff {
  count: Int!
}

type AggregateBuild {
  count: Int!
}

type AggregateModification {
  count: Int!
}

type AggregateMundusStone {
  count: Int!
}

type AggregatePost {
  count: Int!
}

type AggregateRaid {
  count: Int!
}

type AggregateRaidBuild {
  count: Int!
}

type AggregateSet {
  count: Int!
}

type AggregateSetSelection {
  count: Int!
}

type AggregateSkill {
  count: Int!
}

type AggregateSkillSelection {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type Buff {
  id: ID!
  name: String!
  buffDescription: String!
  description: String
  duration: Int!
  notes: String
  icon: String
  type: String
  buffType: String
  quality: Int!
}

type BuffConnection {
  pageInfo: PageInfo!
  edges: [BuffEdge]!
  aggregate: AggregateBuff!
}

input BuffCreateInput {
  id: ID
  name: String!
  buffDescription: String!
  description: String
  duration: Int!
  notes: String
  icon: String
  type: String
  buffType: String
  quality: Int!
}

input BuffCreateOneInput {
  create: BuffCreateInput
  connect: BuffWhereUniqueInput
}

type BuffEdge {
  node: Buff!
  cursor: String!
}

enum BuffOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  buffDescription_ASC
  buffDescription_DESC
  description_ASC
  description_DESC
  duration_ASC
  duration_DESC
  notes_ASC
  notes_DESC
  icon_ASC
  icon_DESC
  type_ASC
  type_DESC
  buffType_ASC
  buffType_DESC
  quality_ASC
  quality_DESC
}

type BuffPreviousValues {
  id: ID!
  name: String!
  buffDescription: String!
  description: String
  duration: Int!
  notes: String
  icon: String
  type: String
  buffType: String
  quality: Int!
}

type BuffSubscriptionPayload {
  mutation: MutationType!
  node: Buff
  updatedFields: [String!]
  previousValues: BuffPreviousValues
}

input BuffSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: BuffWhereInput
  AND: [BuffSubscriptionWhereInput!]
  OR: [BuffSubscriptionWhereInput!]
  NOT: [BuffSubscriptionWhereInput!]
}

input BuffUpdateDataInput {
  name: String
  buffDescription: String
  description: String
  duration: Int
  notes: String
  icon: String
  type: String
  buffType: String
  quality: Int
}

input BuffUpdateInput {
  name: String
  buffDescription: String
  description: String
  duration: Int
  notes: String
  icon: String
  type: String
  buffType: String
  quality: Int
}

input BuffUpdateManyMutationInput {
  name: String
  buffDescription: String
  description: String
  duration: Int
  notes: String
  icon: String
  type: String
  buffType: String
  quality: Int
}

input BuffUpdateOneInput {
  create: BuffCreateInput
  update: BuffUpdateDataInput
  upsert: BuffUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: BuffWhereUniqueInput
}

input BuffUpsertNestedInput {
  update: BuffUpdateDataInput!
  create: BuffCreateInput!
}

input BuffWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  buffDescription: String
  buffDescription_not: String
  buffDescription_in: [String!]
  buffDescription_not_in: [String!]
  buffDescription_lt: String
  buffDescription_lte: String
  buffDescription_gt: String
  buffDescription_gte: String
  buffDescription_contains: String
  buffDescription_not_contains: String
  buffDescription_starts_with: String
  buffDescription_not_starts_with: String
  buffDescription_ends_with: String
  buffDescription_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  duration: Int
  duration_not: Int
  duration_in: [Int!]
  duration_not_in: [Int!]
  duration_lt: Int
  duration_lte: Int
  duration_gt: Int
  duration_gte: Int
  notes: String
  notes_not: String
  notes_in: [String!]
  notes_not_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_gt: String
  notes_gte: String
  notes_contains: String
  notes_not_contains: String
  notes_starts_with: String
  notes_not_starts_with: String
  notes_ends_with: String
  notes_not_ends_with: String
  icon: String
  icon_not: String
  icon_in: [String!]
  icon_not_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_gt: String
  icon_gte: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  type: String
  type_not: String
  type_in: [String!]
  type_not_in: [String!]
  type_lt: String
  type_lte: String
  type_gt: String
  type_gte: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  buffType: String
  buffType_not: String
  buffType_in: [String!]
  buffType_not_in: [String!]
  buffType_lt: String
  buffType_lte: String
  buffType_gt: String
  buffType_gte: String
  buffType_contains: String
  buffType_not_contains: String
  buffType_starts_with: String
  buffType_not_starts_with: String
  buffType_ends_with: String
  buffType_not_ends_with: String
  quality: Int
  quality_not: Int
  quality_in: [Int!]
  quality_not_in: [Int!]
  quality_lt: Int
  quality_lte: Int
  quality_gt: Int
  quality_gte: Int
  AND: [BuffWhereInput!]
  OR: [BuffWhereInput!]
  NOT: [BuffWhereInput!]
}

input BuffWhereUniqueInput {
  id: ID
  name: String
}

type Build {
  id: ID!
  owner: User
  name: String
  applicationArea: String
  role: String
  race: String
  esoClass: String
  createdAt: DateTime!
  updatedAt: DateTime!
  published: Boolean!
  bigPieceSelection(where: SetSelectionWhereInput, orderBy: SetSelectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SetSelection!]
  smallPieceSelection(where: SetSelectionWhereInput, orderBy: SetSelectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SetSelection!]
  jewelrySelection(where: SetSelectionWhereInput, orderBy: SetSelectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SetSelection!]
  frontbarSelection(where: SetSelectionWhereInput, orderBy: SetSelectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SetSelection!]
  backbarSelection(where: SetSelectionWhereInput, orderBy: SetSelectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SetSelection!]
  newBarOne(where: SkillSelectionWhereInput, orderBy: SkillSelectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SkillSelection!]
  newBarTwo(where: SkillSelectionWhereInput, orderBy: SkillSelectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SkillSelection!]
  ultimateOne: Skill
  ultimateTwo: Skill
  mundusStone: MundusStone
  buff: Buff
}

type BuildConnection {
  pageInfo: PageInfo!
  edges: [BuildEdge]!
  aggregate: AggregateBuild!
}

input BuildCreateInput {
  id: ID
  owner: UserCreateOneWithoutBuildsInput
  name: String
  applicationArea: String
  role: String
  race: String
  esoClass: String
  published: Boolean
  bigPieceSelection: SetSelectionCreateManyInput
  smallPieceSelection: SetSelectionCreateManyInput
  jewelrySelection: SetSelectionCreateManyInput
  frontbarSelection: SetSelectionCreateManyInput
  backbarSelection: SetSelectionCreateManyInput
  newBarOne: SkillSelectionCreateManyInput
  newBarTwo: SkillSelectionCreateManyInput
  ultimateOne: SkillCreateOneInput
  ultimateTwo: SkillCreateOneInput
  mundusStone: MundusStoneCreateOneInput
  buff: BuffCreateOneInput
}

input BuildCreateManyInput {
  create: [BuildCreateInput!]
  connect: [BuildWhereUniqueInput!]
}

input BuildCreateManyWithoutOwnerInput {
  create: [BuildCreateWithoutOwnerInput!]
  connect: [BuildWhereUniqueInput!]
}

input BuildCreateOneInput {
  create: BuildCreateInput
  connect: BuildWhereUniqueInput
}

input BuildCreateWithoutOwnerInput {
  id: ID
  name: String
  applicationArea: String
  role: String
  race: String
  esoClass: String
  published: Boolean
  bigPieceSelection: SetSelectionCreateManyInput
  smallPieceSelection: SetSelectionCreateManyInput
  jewelrySelection: SetSelectionCreateManyInput
  frontbarSelection: SetSelectionCreateManyInput
  backbarSelection: SetSelectionCreateManyInput
  newBarOne: SkillSelectionCreateManyInput
  newBarTwo: SkillSelectionCreateManyInput
  ultimateOne: SkillCreateOneInput
  ultimateTwo: SkillCreateOneInput
  mundusStone: MundusStoneCreateOneInput
  buff: BuffCreateOneInput
}

type BuildEdge {
  node: Build!
  cursor: String!
}

enum BuildOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  applicationArea_ASC
  applicationArea_DESC
  role_ASC
  role_DESC
  race_ASC
  race_DESC
  esoClass_ASC
  esoClass_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  published_ASC
  published_DESC
}

type BuildPreviousValues {
  id: ID!
  name: String
  applicationArea: String
  role: String
  race: String
  esoClass: String
  createdAt: DateTime!
  updatedAt: DateTime!
  published: Boolean!
}

input BuildScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  applicationArea: String
  applicationArea_not: String
  applicationArea_in: [String!]
  applicationArea_not_in: [String!]
  applicationArea_lt: String
  applicationArea_lte: String
  applicationArea_gt: String
  applicationArea_gte: String
  applicationArea_contains: String
  applicationArea_not_contains: String
  applicationArea_starts_with: String
  applicationArea_not_starts_with: String
  applicationArea_ends_with: String
  applicationArea_not_ends_with: String
  role: String
  role_not: String
  role_in: [String!]
  role_not_in: [String!]
  role_lt: String
  role_lte: String
  role_gt: String
  role_gte: String
  role_contains: String
  role_not_contains: String
  role_starts_with: String
  role_not_starts_with: String
  role_ends_with: String
  role_not_ends_with: String
  race: String
  race_not: String
  race_in: [String!]
  race_not_in: [String!]
  race_lt: String
  race_lte: String
  race_gt: String
  race_gte: String
  race_contains: String
  race_not_contains: String
  race_starts_with: String
  race_not_starts_with: String
  race_ends_with: String
  race_not_ends_with: String
  esoClass: String
  esoClass_not: String
  esoClass_in: [String!]
  esoClass_not_in: [String!]
  esoClass_lt: String
  esoClass_lte: String
  esoClass_gt: String
  esoClass_gte: String
  esoClass_contains: String
  esoClass_not_contains: String
  esoClass_starts_with: String
  esoClass_not_starts_with: String
  esoClass_ends_with: String
  esoClass_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  published: Boolean
  published_not: Boolean
  AND: [BuildScalarWhereInput!]
  OR: [BuildScalarWhereInput!]
  NOT: [BuildScalarWhereInput!]
}

type BuildSubscriptionPayload {
  mutation: MutationType!
  node: Build
  updatedFields: [String!]
  previousValues: BuildPreviousValues
}

input BuildSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: BuildWhereInput
  AND: [BuildSubscriptionWhereInput!]
  OR: [BuildSubscriptionWhereInput!]
  NOT: [BuildSubscriptionWhereInput!]
}

input BuildUpdateDataInput {
  owner: UserUpdateOneWithoutBuildsInput
  name: String
  applicationArea: String
  role: String
  race: String
  esoClass: String
  published: Boolean
  bigPieceSelection: SetSelectionUpdateManyInput
  smallPieceSelection: SetSelectionUpdateManyInput
  jewelrySelection: SetSelectionUpdateManyInput
  frontbarSelection: SetSelectionUpdateManyInput
  backbarSelection: SetSelectionUpdateManyInput
  newBarOne: SkillSelectionUpdateManyInput
  newBarTwo: SkillSelectionUpdateManyInput
  ultimateOne: SkillUpdateOneInput
  ultimateTwo: SkillUpdateOneInput
  mundusStone: MundusStoneUpdateOneInput
  buff: BuffUpdateOneInput
}

input BuildUpdateInput {
  owner: UserUpdateOneWithoutBuildsInput
  name: String
  applicationArea: String
  role: String
  race: String
  esoClass: String
  published: Boolean
  bigPieceSelection: SetSelectionUpdateManyInput
  smallPieceSelection: SetSelectionUpdateManyInput
  jewelrySelection: SetSelectionUpdateManyInput
  frontbarSelection: SetSelectionUpdateManyInput
  backbarSelection: SetSelectionUpdateManyInput
  newBarOne: SkillSelectionUpdateManyInput
  newBarTwo: SkillSelectionUpdateManyInput
  ultimateOne: SkillUpdateOneInput
  ultimateTwo: SkillUpdateOneInput
  mundusStone: MundusStoneUpdateOneInput
  buff: BuffUpdateOneInput
}

input BuildUpdateManyDataInput {
  name: String
  applicationArea: String
  role: String
  race: String
  esoClass: String
  published: Boolean
}

input BuildUpdateManyInput {
  create: [BuildCreateInput!]
  update: [BuildUpdateWithWhereUniqueNestedInput!]
  upsert: [BuildUpsertWithWhereUniqueNestedInput!]
  delete: [BuildWhereUniqueInput!]
  connect: [BuildWhereUniqueInput!]
  set: [BuildWhereUniqueInput!]
  disconnect: [BuildWhereUniqueInput!]
  deleteMany: [BuildScalarWhereInput!]
  updateMany: [BuildUpdateManyWithWhereNestedInput!]
}

input BuildUpdateManyMutationInput {
  name: String
  applicationArea: String
  role: String
  race: String
  esoClass: String
  published: Boolean
}

input BuildUpdateManyWithoutOwnerInput {
  create: [BuildCreateWithoutOwnerInput!]
  delete: [BuildWhereUniqueInput!]
  connect: [BuildWhereUniqueInput!]
  set: [BuildWhereUniqueInput!]
  disconnect: [BuildWhereUniqueInput!]
  update: [BuildUpdateWithWhereUniqueWithoutOwnerInput!]
  upsert: [BuildUpsertWithWhereUniqueWithoutOwnerInput!]
  deleteMany: [BuildScalarWhereInput!]
  updateMany: [BuildUpdateManyWithWhereNestedInput!]
}

input BuildUpdateManyWithWhereNestedInput {
  where: BuildScalarWhereInput!
  data: BuildUpdateManyDataInput!
}

input BuildUpdateOneInput {
  create: BuildCreateInput
  update: BuildUpdateDataInput
  upsert: BuildUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: BuildWhereUniqueInput
}

input BuildUpdateWithoutOwnerDataInput {
  name: String
  applicationArea: String
  role: String
  race: String
  esoClass: String
  published: Boolean
  bigPieceSelection: SetSelectionUpdateManyInput
  smallPieceSelection: SetSelectionUpdateManyInput
  jewelrySelection: SetSelectionUpdateManyInput
  frontbarSelection: SetSelectionUpdateManyInput
  backbarSelection: SetSelectionUpdateManyInput
  newBarOne: SkillSelectionUpdateManyInput
  newBarTwo: SkillSelectionUpdateManyInput
  ultimateOne: SkillUpdateOneInput
  ultimateTwo: SkillUpdateOneInput
  mundusStone: MundusStoneUpdateOneInput
  buff: BuffUpdateOneInput
}

input BuildUpdateWithWhereUniqueNestedInput {
  where: BuildWhereUniqueInput!
  data: BuildUpdateDataInput!
}

input BuildUpdateWithWhereUniqueWithoutOwnerInput {
  where: BuildWhereUniqueInput!
  data: BuildUpdateWithoutOwnerDataInput!
}

input BuildUpsertNestedInput {
  update: BuildUpdateDataInput!
  create: BuildCreateInput!
}

input BuildUpsertWithWhereUniqueNestedInput {
  where: BuildWhereUniqueInput!
  update: BuildUpdateDataInput!
  create: BuildCreateInput!
}

input BuildUpsertWithWhereUniqueWithoutOwnerInput {
  where: BuildWhereUniqueInput!
  update: BuildUpdateWithoutOwnerDataInput!
  create: BuildCreateWithoutOwnerInput!
}

input BuildWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  owner: UserWhereInput
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  applicationArea: String
  applicationArea_not: String
  applicationArea_in: [String!]
  applicationArea_not_in: [String!]
  applicationArea_lt: String
  applicationArea_lte: String
  applicationArea_gt: String
  applicationArea_gte: String
  applicationArea_contains: String
  applicationArea_not_contains: String
  applicationArea_starts_with: String
  applicationArea_not_starts_with: String
  applicationArea_ends_with: String
  applicationArea_not_ends_with: String
  role: String
  role_not: String
  role_in: [String!]
  role_not_in: [String!]
  role_lt: String
  role_lte: String
  role_gt: String
  role_gte: String
  role_contains: String
  role_not_contains: String
  role_starts_with: String
  role_not_starts_with: String
  role_ends_with: String
  role_not_ends_with: String
  race: String
  race_not: String
  race_in: [String!]
  race_not_in: [String!]
  race_lt: String
  race_lte: String
  race_gt: String
  race_gte: String
  race_contains: String
  race_not_contains: String
  race_starts_with: String
  race_not_starts_with: String
  race_ends_with: String
  race_not_ends_with: String
  esoClass: String
  esoClass_not: String
  esoClass_in: [String!]
  esoClass_not_in: [String!]
  esoClass_lt: String
  esoClass_lte: String
  esoClass_gt: String
  esoClass_gte: String
  esoClass_contains: String
  esoClass_not_contains: String
  esoClass_starts_with: String
  esoClass_not_starts_with: String
  esoClass_ends_with: String
  esoClass_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  published: Boolean
  published_not: Boolean
  bigPieceSelection_every: SetSelectionWhereInput
  bigPieceSelection_some: SetSelectionWhereInput
  bigPieceSelection_none: SetSelectionWhereInput
  smallPieceSelection_every: SetSelectionWhereInput
  smallPieceSelection_some: SetSelectionWhereInput
  smallPieceSelection_none: SetSelectionWhereInput
  jewelrySelection_every: SetSelectionWhereInput
  jewelrySelection_some: SetSelectionWhereInput
  jewelrySelection_none: SetSelectionWhereInput
  frontbarSelection_every: SetSelectionWhereInput
  frontbarSelection_some: SetSelectionWhereInput
  frontbarSelection_none: SetSelectionWhereInput
  backbarSelection_every: SetSelectionWhereInput
  backbarSelection_some: SetSelectionWhereInput
  backbarSelection_none: SetSelectionWhereInput
  newBarOne_every: SkillSelectionWhereInput
  newBarOne_some: SkillSelectionWhereInput
  newBarOne_none: SkillSelectionWhereInput
  newBarTwo_every: SkillSelectionWhereInput
  newBarTwo_some: SkillSelectionWhereInput
  newBarTwo_none: SkillSelectionWhereInput
  ultimateOne: SkillWhereInput
  ultimateTwo: SkillWhereInput
  mundusStone: MundusStoneWhereInput
  buff: BuffWhereInput
  AND: [BuildWhereInput!]
  OR: [BuildWhereInput!]
  NOT: [BuildWhereInput!]
}

input BuildWhereUniqueInput {
  id: ID
}

scalar DateTime

scalar Long

type Modification {
  id: ID!
  type: String!
  itemType: String!
  modificationType: String!
  description: String!
  icon: String
}

type ModificationConnection {
  pageInfo: PageInfo!
  edges: [ModificationEdge]!
  aggregate: AggregateModification!
}

input ModificationCreateInput {
  id: ID
  type: String!
  itemType: String!
  modificationType: String!
  description: String!
  icon: String
}

input ModificationCreateOneInput {
  create: ModificationCreateInput
  connect: ModificationWhereUniqueInput
}

type ModificationEdge {
  node: Modification!
  cursor: String!
}

enum ModificationOrderByInput {
  id_ASC
  id_DESC
  type_ASC
  type_DESC
  itemType_ASC
  itemType_DESC
  modificationType_ASC
  modificationType_DESC
  description_ASC
  description_DESC
  icon_ASC
  icon_DESC
}

type ModificationPreviousValues {
  id: ID!
  type: String!
  itemType: String!
  modificationType: String!
  description: String!
  icon: String
}

type ModificationSubscriptionPayload {
  mutation: MutationType!
  node: Modification
  updatedFields: [String!]
  previousValues: ModificationPreviousValues
}

input ModificationSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ModificationWhereInput
  AND: [ModificationSubscriptionWhereInput!]
  OR: [ModificationSubscriptionWhereInput!]
  NOT: [ModificationSubscriptionWhereInput!]
}

input ModificationUpdateDataInput {
  type: String
  itemType: String
  modificationType: String
  description: String
  icon: String
}

input ModificationUpdateInput {
  type: String
  itemType: String
  modificationType: String
  description: String
  icon: String
}

input ModificationUpdateManyMutationInput {
  type: String
  itemType: String
  modificationType: String
  description: String
  icon: String
}

input ModificationUpdateOneInput {
  create: ModificationCreateInput
  update: ModificationUpdateDataInput
  upsert: ModificationUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: ModificationWhereUniqueInput
}

input ModificationUpsertNestedInput {
  update: ModificationUpdateDataInput!
  create: ModificationCreateInput!
}

input ModificationWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  type: String
  type_not: String
  type_in: [String!]
  type_not_in: [String!]
  type_lt: String
  type_lte: String
  type_gt: String
  type_gte: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  itemType: String
  itemType_not: String
  itemType_in: [String!]
  itemType_not_in: [String!]
  itemType_lt: String
  itemType_lte: String
  itemType_gt: String
  itemType_gte: String
  itemType_contains: String
  itemType_not_contains: String
  itemType_starts_with: String
  itemType_not_starts_with: String
  itemType_ends_with: String
  itemType_not_ends_with: String
  modificationType: String
  modificationType_not: String
  modificationType_in: [String!]
  modificationType_not_in: [String!]
  modificationType_lt: String
  modificationType_lte: String
  modificationType_gt: String
  modificationType_gte: String
  modificationType_contains: String
  modificationType_not_contains: String
  modificationType_starts_with: String
  modificationType_not_starts_with: String
  modificationType_ends_with: String
  modificationType_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  icon: String
  icon_not: String
  icon_in: [String!]
  icon_not_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_gt: String
  icon_gte: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  AND: [ModificationWhereInput!]
  OR: [ModificationWhereInput!]
  NOT: [ModificationWhereInput!]
}

input ModificationWhereUniqueInput {
  id: ID
  description: String
}

type MundusStone {
  name: String!
  aldmeri: String
  daggerfall: String
  ebonheart: String
  effect: String!
  value: String!
  icon: String
  id: ID!
}

type MundusStoneConnection {
  pageInfo: PageInfo!
  edges: [MundusStoneEdge]!
  aggregate: AggregateMundusStone!
}

input MundusStoneCreateInput {
  name: String!
  aldmeri: String
  daggerfall: String
  ebonheart: String
  effect: String!
  value: String!
  icon: String
  id: ID
}

input MundusStoneCreateOneInput {
  create: MundusStoneCreateInput
  connect: MundusStoneWhereUniqueInput
}

type MundusStoneEdge {
  node: MundusStone!
  cursor: String!
}

enum MundusStoneOrderByInput {
  name_ASC
  name_DESC
  aldmeri_ASC
  aldmeri_DESC
  daggerfall_ASC
  daggerfall_DESC
  ebonheart_ASC
  ebonheart_DESC
  effect_ASC
  effect_DESC
  value_ASC
  value_DESC
  icon_ASC
  icon_DESC
  id_ASC
  id_DESC
}

type MundusStonePreviousValues {
  name: String!
  aldmeri: String
  daggerfall: String
  ebonheart: String
  effect: String!
  value: String!
  icon: String
  id: ID!
}

type MundusStoneSubscriptionPayload {
  mutation: MutationType!
  node: MundusStone
  updatedFields: [String!]
  previousValues: MundusStonePreviousValues
}

input MundusStoneSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: MundusStoneWhereInput
  AND: [MundusStoneSubscriptionWhereInput!]
  OR: [MundusStoneSubscriptionWhereInput!]
  NOT: [MundusStoneSubscriptionWhereInput!]
}

input MundusStoneUpdateDataInput {
  name: String
  aldmeri: String
  daggerfall: String
  ebonheart: String
  effect: String
  value: String
  icon: String
}

input MundusStoneUpdateInput {
  name: String
  aldmeri: String
  daggerfall: String
  ebonheart: String
  effect: String
  value: String
  icon: String
}

input MundusStoneUpdateManyMutationInput {
  name: String
  aldmeri: String
  daggerfall: String
  ebonheart: String
  effect: String
  value: String
  icon: String
}

input MundusStoneUpdateOneInput {
  create: MundusStoneCreateInput
  update: MundusStoneUpdateDataInput
  upsert: MundusStoneUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: MundusStoneWhereUniqueInput
}

input MundusStoneUpsertNestedInput {
  update: MundusStoneUpdateDataInput!
  create: MundusStoneCreateInput!
}

input MundusStoneWhereInput {
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  aldmeri: String
  aldmeri_not: String
  aldmeri_in: [String!]
  aldmeri_not_in: [String!]
  aldmeri_lt: String
  aldmeri_lte: String
  aldmeri_gt: String
  aldmeri_gte: String
  aldmeri_contains: String
  aldmeri_not_contains: String
  aldmeri_starts_with: String
  aldmeri_not_starts_with: String
  aldmeri_ends_with: String
  aldmeri_not_ends_with: String
  daggerfall: String
  daggerfall_not: String
  daggerfall_in: [String!]
  daggerfall_not_in: [String!]
  daggerfall_lt: String
  daggerfall_lte: String
  daggerfall_gt: String
  daggerfall_gte: String
  daggerfall_contains: String
  daggerfall_not_contains: String
  daggerfall_starts_with: String
  daggerfall_not_starts_with: String
  daggerfall_ends_with: String
  daggerfall_not_ends_with: String
  ebonheart: String
  ebonheart_not: String
  ebonheart_in: [String!]
  ebonheart_not_in: [String!]
  ebonheart_lt: String
  ebonheart_lte: String
  ebonheart_gt: String
  ebonheart_gte: String
  ebonheart_contains: String
  ebonheart_not_contains: String
  ebonheart_starts_with: String
  ebonheart_not_starts_with: String
  ebonheart_ends_with: String
  ebonheart_not_ends_with: String
  effect: String
  effect_not: String
  effect_in: [String!]
  effect_not_in: [String!]
  effect_lt: String
  effect_lte: String
  effect_gt: String
  effect_gte: String
  effect_contains: String
  effect_not_contains: String
  effect_starts_with: String
  effect_not_starts_with: String
  effect_ends_with: String
  effect_not_ends_with: String
  value: String
  value_not: String
  value_in: [String!]
  value_not_in: [String!]
  value_lt: String
  value_lte: String
  value_gt: String
  value_gte: String
  value_contains: String
  value_not_contains: String
  value_starts_with: String
  value_not_starts_with: String
  value_ends_with: String
  value_not_ends_with: String
  icon: String
  icon_not: String
  icon_in: [String!]
  icon_not_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_gt: String
  icon_gte: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  AND: [MundusStoneWhereInput!]
  OR: [MundusStoneWhereInput!]
  NOT: [MundusStoneWhereInput!]
}

input MundusStoneWhereUniqueInput {
  name: String
  id: ID
}

type Mutation {
  createBuff(data: BuffCreateInput!): Buff!
  updateBuff(data: BuffUpdateInput!, where: BuffWhereUniqueInput!): Buff
  updateManyBuffs(data: BuffUpdateManyMutationInput!, where: BuffWhereInput): BatchPayload!
  upsertBuff(where: BuffWhereUniqueInput!, create: BuffCreateInput!, update: BuffUpdateInput!): Buff!
  deleteBuff(where: BuffWhereUniqueInput!): Buff
  deleteManyBuffs(where: BuffWhereInput): BatchPayload!
  createBuild(data: BuildCreateInput!): Build!
  updateBuild(data: BuildUpdateInput!, where: BuildWhereUniqueInput!): Build
  updateManyBuilds(data: BuildUpdateManyMutationInput!, where: BuildWhereInput): BatchPayload!
  upsertBuild(where: BuildWhereUniqueInput!, create: BuildCreateInput!, update: BuildUpdateInput!): Build!
  deleteBuild(where: BuildWhereUniqueInput!): Build
  deleteManyBuilds(where: BuildWhereInput): BatchPayload!
  createModification(data: ModificationCreateInput!): Modification!
  updateModification(data: ModificationUpdateInput!, where: ModificationWhereUniqueInput!): Modification
  updateManyModifications(data: ModificationUpdateManyMutationInput!, where: ModificationWhereInput): BatchPayload!
  upsertModification(where: ModificationWhereUniqueInput!, create: ModificationCreateInput!, update: ModificationUpdateInput!): Modification!
  deleteModification(where: ModificationWhereUniqueInput!): Modification
  deleteManyModifications(where: ModificationWhereInput): BatchPayload!
  createMundusStone(data: MundusStoneCreateInput!): MundusStone!
  updateMundusStone(data: MundusStoneUpdateInput!, where: MundusStoneWhereUniqueInput!): MundusStone
  updateManyMundusStones(data: MundusStoneUpdateManyMutationInput!, where: MundusStoneWhereInput): BatchPayload!
  upsertMundusStone(where: MundusStoneWhereUniqueInput!, create: MundusStoneCreateInput!, update: MundusStoneUpdateInput!): MundusStone!
  deleteMundusStone(where: MundusStoneWhereUniqueInput!): MundusStone
  deleteManyMundusStones(where: MundusStoneWhereInput): BatchPayload!
  createPost(data: PostCreateInput!): Post!
  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post
  updateManyPosts(data: PostUpdateManyMutationInput!, where: PostWhereInput): BatchPayload!
  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!
  deletePost(where: PostWhereUniqueInput!): Post
  deleteManyPosts(where: PostWhereInput): BatchPayload!
  createRaid(data: RaidCreateInput!): Raid!
  updateRaid(data: RaidUpdateInput!, where: RaidWhereUniqueInput!): Raid
  updateManyRaids(data: RaidUpdateManyMutationInput!, where: RaidWhereInput): BatchPayload!
  upsertRaid(where: RaidWhereUniqueInput!, create: RaidCreateInput!, update: RaidUpdateInput!): Raid!
  deleteRaid(where: RaidWhereUniqueInput!): Raid
  deleteManyRaids(where: RaidWhereInput): BatchPayload!
  createRaidBuild(data: RaidBuildCreateInput!): RaidBuild!
  updateRaidBuild(data: RaidBuildUpdateInput!, where: RaidBuildWhereUniqueInput!): RaidBuild
  updateManyRaidBuilds(data: RaidBuildUpdateManyMutationInput!, where: RaidBuildWhereInput): BatchPayload!
  upsertRaidBuild(where: RaidBuildWhereUniqueInput!, create: RaidBuildCreateInput!, update: RaidBuildUpdateInput!): RaidBuild!
  deleteRaidBuild(where: RaidBuildWhereUniqueInput!): RaidBuild
  deleteManyRaidBuilds(where: RaidBuildWhereInput): BatchPayload!
  createSet(data: SetCreateInput!): Set!
  updateSet(data: SetUpdateInput!, where: SetWhereUniqueInput!): Set
  updateManySets(data: SetUpdateManyMutationInput!, where: SetWhereInput): BatchPayload!
  upsertSet(where: SetWhereUniqueInput!, create: SetCreateInput!, update: SetUpdateInput!): Set!
  deleteSet(where: SetWhereUniqueInput!): Set
  deleteManySets(where: SetWhereInput): BatchPayload!
  createSetSelection(data: SetSelectionCreateInput!): SetSelection!
  updateSetSelection(data: SetSelectionUpdateInput!, where: SetSelectionWhereUniqueInput!): SetSelection
  updateManySetSelections(data: SetSelectionUpdateManyMutationInput!, where: SetSelectionWhereInput): BatchPayload!
  upsertSetSelection(where: SetSelectionWhereUniqueInput!, create: SetSelectionCreateInput!, update: SetSelectionUpdateInput!): SetSelection!
  deleteSetSelection(where: SetSelectionWhereUniqueInput!): SetSelection
  deleteManySetSelections(where: SetSelectionWhereInput): BatchPayload!
  createSkill(data: SkillCreateInput!): Skill!
  updateSkill(data: SkillUpdateInput!, where: SkillWhereUniqueInput!): Skill
  updateManySkills(data: SkillUpdateManyMutationInput!, where: SkillWhereInput): BatchPayload!
  upsertSkill(where: SkillWhereUniqueInput!, create: SkillCreateInput!, update: SkillUpdateInput!): Skill!
  deleteSkill(where: SkillWhereUniqueInput!): Skill
  deleteManySkills(where: SkillWhereInput): BatchPayload!
  createSkillSelection(data: SkillSelectionCreateInput!): SkillSelection!
  updateSkillSelection(data: SkillSelectionUpdateInput!, where: SkillSelectionWhereUniqueInput!): SkillSelection
  updateManySkillSelections(data: SkillSelectionUpdateManyMutationInput!, where: SkillSelectionWhereInput): BatchPayload!
  upsertSkillSelection(where: SkillSelectionWhereUniqueInput!, create: SkillSelectionCreateInput!, update: SkillSelectionUpdateInput!): SkillSelection!
  deleteSkillSelection(where: SkillSelectionWhereUniqueInput!): SkillSelection
  deleteManySkillSelections(where: SkillSelectionWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Post {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  published: Boolean!
  title: String!
  content: String
  author: User!
}

type PostConnection {
  pageInfo: PageInfo!
  edges: [PostEdge]!
  aggregate: AggregatePost!
}

input PostCreateInput {
  id: ID
  published: Boolean
  title: String!
  content: String
  author: UserCreateOneInput!
}

type PostEdge {
  node: Post!
  cursor: String!
}

enum PostOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  published_ASC
  published_DESC
  title_ASC
  title_DESC
  content_ASC
  content_DESC
}

type PostPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  published: Boolean!
  title: String!
  content: String
}

type PostSubscriptionPayload {
  mutation: MutationType!
  node: Post
  updatedFields: [String!]
  previousValues: PostPreviousValues
}

input PostSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PostWhereInput
  AND: [PostSubscriptionWhereInput!]
  OR: [PostSubscriptionWhereInput!]
  NOT: [PostSubscriptionWhereInput!]
}

input PostUpdateInput {
  published: Boolean
  title: String
  content: String
  author: UserUpdateOneRequiredInput
}

input PostUpdateManyMutationInput {
  published: Boolean
  title: String
  content: String
}

input PostWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  published: Boolean
  published_not: Boolean
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  author: UserWhereInput
  AND: [PostWhereInput!]
  OR: [PostWhereInput!]
  NOT: [PostWhereInput!]
}

input PostWhereUniqueInput {
  id: ID
}

type Query {
  buff(where: BuffWhereUniqueInput!): Buff
  buffs(where: BuffWhereInput, orderBy: BuffOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Buff]!
  buffsConnection(where: BuffWhereInput, orderBy: BuffOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BuffConnection!
  build(where: BuildWhereUniqueInput!): Build
  builds(where: BuildWhereInput, orderBy: BuildOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Build]!
  buildsConnection(where: BuildWhereInput, orderBy: BuildOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BuildConnection!
  modification(where: ModificationWhereUniqueInput!): Modification
  modifications(where: ModificationWhereInput, orderBy: ModificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Modification]!
  modificationsConnection(where: ModificationWhereInput, orderBy: ModificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ModificationConnection!
  mundusStone(where: MundusStoneWhereUniqueInput!): MundusStone
  mundusStones(where: MundusStoneWhereInput, orderBy: MundusStoneOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MundusStone]!
  mundusStonesConnection(where: MundusStoneWhereInput, orderBy: MundusStoneOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MundusStoneConnection!
  post(where: PostWhereUniqueInput!): Post
  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!
  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!
  raid(where: RaidWhereUniqueInput!): Raid
  raids(where: RaidWhereInput, orderBy: RaidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Raid]!
  raidsConnection(where: RaidWhereInput, orderBy: RaidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RaidConnection!
  raidBuild(where: RaidBuildWhereUniqueInput!): RaidBuild
  raidBuilds(where: RaidBuildWhereInput, orderBy: RaidBuildOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RaidBuild]!
  raidBuildsConnection(where: RaidBuildWhereInput, orderBy: RaidBuildOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RaidBuildConnection!
  set(where: SetWhereUniqueInput!): Set
  sets(where: SetWhereInput, orderBy: SetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Set]!
  setsConnection(where: SetWhereInput, orderBy: SetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SetConnection!
  setSelection(where: SetSelectionWhereUniqueInput!): SetSelection
  setSelections(where: SetSelectionWhereInput, orderBy: SetSelectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SetSelection]!
  setSelectionsConnection(where: SetSelectionWhereInput, orderBy: SetSelectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SetSelectionConnection!
  skill(where: SkillWhereUniqueInput!): Skill
  skills(where: SkillWhereInput, orderBy: SkillOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Skill]!
  skillsConnection(where: SkillWhereInput, orderBy: SkillOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SkillConnection!
  skillSelection(where: SkillSelectionWhereUniqueInput!): SkillSelection
  skillSelections(where: SkillSelectionWhereInput, orderBy: SkillSelectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SkillSelection]!
  skillSelectionsConnection(where: SkillSelectionWhereInput, orderBy: SkillSelectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SkillSelectionConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  node(id: ID!): Node
}

type Raid {
  id: ID!
  owner: User
  name: String
  applicationArea: String
  createdAt: DateTime!
  updatedAt: DateTime!
  published: Boolean!
  canEdit(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  canView(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  builds(where: BuildWhereInput, orderBy: BuildOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Build!]
}

type RaidBuild {
  id: ID!
  build: Build
  role: String
}

type RaidBuildConnection {
  pageInfo: PageInfo!
  edges: [RaidBuildEdge]!
  aggregate: AggregateRaidBuild!
}

input RaidBuildCreateInput {
  id: ID
  build: BuildCreateOneInput
  role: String
}

type RaidBuildEdge {
  node: RaidBuild!
  cursor: String!
}

enum RaidBuildOrderByInput {
  id_ASC
  id_DESC
  role_ASC
  role_DESC
}

type RaidBuildPreviousValues {
  id: ID!
  role: String
}

type RaidBuildSubscriptionPayload {
  mutation: MutationType!
  node: RaidBuild
  updatedFields: [String!]
  previousValues: RaidBuildPreviousValues
}

input RaidBuildSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: RaidBuildWhereInput
  AND: [RaidBuildSubscriptionWhereInput!]
  OR: [RaidBuildSubscriptionWhereInput!]
  NOT: [RaidBuildSubscriptionWhereInput!]
}

input RaidBuildUpdateInput {
  build: BuildUpdateOneInput
  role: String
}

input RaidBuildUpdateManyMutationInput {
  role: String
}

input RaidBuildWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  build: BuildWhereInput
  role: String
  role_not: String
  role_in: [String!]
  role_not_in: [String!]
  role_lt: String
  role_lte: String
  role_gt: String
  role_gte: String
  role_contains: String
  role_not_contains: String
  role_starts_with: String
  role_not_starts_with: String
  role_ends_with: String
  role_not_ends_with: String
  AND: [RaidBuildWhereInput!]
  OR: [RaidBuildWhereInput!]
  NOT: [RaidBuildWhereInput!]
}

input RaidBuildWhereUniqueInput {
  id: ID
}

type RaidConnection {
  pageInfo: PageInfo!
  edges: [RaidEdge]!
  aggregate: AggregateRaid!
}

input RaidCreateInput {
  id: ID
  owner: UserCreateOneInput
  name: String
  applicationArea: String
  published: Boolean
  canEdit: UserCreateManyInput
  canView: UserCreateManyInput
  builds: BuildCreateManyInput
}

type RaidEdge {
  node: Raid!
  cursor: String!
}

enum RaidOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  applicationArea_ASC
  applicationArea_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  published_ASC
  published_DESC
}

type RaidPreviousValues {
  id: ID!
  name: String
  applicationArea: String
  createdAt: DateTime!
  updatedAt: DateTime!
  published: Boolean!
}

type RaidSubscriptionPayload {
  mutation: MutationType!
  node: Raid
  updatedFields: [String!]
  previousValues: RaidPreviousValues
}

input RaidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: RaidWhereInput
  AND: [RaidSubscriptionWhereInput!]
  OR: [RaidSubscriptionWhereInput!]
  NOT: [RaidSubscriptionWhereInput!]
}

input RaidUpdateInput {
  owner: UserUpdateOneInput
  name: String
  applicationArea: String
  published: Boolean
  canEdit: UserUpdateManyInput
  canView: UserUpdateManyInput
  builds: BuildUpdateManyInput
}

input RaidUpdateManyMutationInput {
  name: String
  applicationArea: String
  published: Boolean
}

input RaidWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  owner: UserWhereInput
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  applicationArea: String
  applicationArea_not: String
  applicationArea_in: [String!]
  applicationArea_not_in: [String!]
  applicationArea_lt: String
  applicationArea_lte: String
  applicationArea_gt: String
  applicationArea_gte: String
  applicationArea_contains: String
  applicationArea_not_contains: String
  applicationArea_starts_with: String
  applicationArea_not_starts_with: String
  applicationArea_ends_with: String
  applicationArea_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  published: Boolean
  published_not: Boolean
  canEdit_every: UserWhereInput
  canEdit_some: UserWhereInput
  canEdit_none: UserWhereInput
  canView_every: UserWhereInput
  canView_some: UserWhereInput
  canView_none: UserWhereInput
  builds_every: BuildWhereInput
  builds_some: BuildWhereInput
  builds_none: BuildWhereInput
  AND: [RaidWhereInput!]
  OR: [RaidWhereInput!]
  NOT: [RaidWhereInput!]
}

input RaidWhereUniqueInput {
  id: ID
}

type Set {
  id: ID!
  setId: Int!
  name: String!
  location: String!
  type: String!
  slug: String!
  bonus_item_1: String
  bonus_item_2: String
  bonus_item_3: String
  bonus_item_4: String
  bonus_item_5: String
  has_jewels: Int!
  has_weapons: Int!
  has_heavy_armor: Int!
  has_light_armor: Int!
  has_medium_armor: Int!
  traits_needed: Int
  pts: Int
  eso_id: Int
}

type SetConnection {
  pageInfo: PageInfo!
  edges: [SetEdge]!
  aggregate: AggregateSet!
}

input SetCreateInput {
  id: ID
  setId: Int!
  name: String!
  location: String!
  type: String!
  slug: String!
  bonus_item_1: String
  bonus_item_2: String
  bonus_item_3: String
  bonus_item_4: String
  bonus_item_5: String
  has_jewels: Int!
  has_weapons: Int!
  has_heavy_armor: Int!
  has_light_armor: Int!
  has_medium_armor: Int!
  traits_needed: Int
  pts: Int
  eso_id: Int
}

input SetCreateOneInput {
  create: SetCreateInput
  connect: SetWhereUniqueInput
}

type SetEdge {
  node: Set!
  cursor: String!
}

enum SetOrderByInput {
  id_ASC
  id_DESC
  setId_ASC
  setId_DESC
  name_ASC
  name_DESC
  location_ASC
  location_DESC
  type_ASC
  type_DESC
  slug_ASC
  slug_DESC
  bonus_item_1_ASC
  bonus_item_1_DESC
  bonus_item_2_ASC
  bonus_item_2_DESC
  bonus_item_3_ASC
  bonus_item_3_DESC
  bonus_item_4_ASC
  bonus_item_4_DESC
  bonus_item_5_ASC
  bonus_item_5_DESC
  has_jewels_ASC
  has_jewels_DESC
  has_weapons_ASC
  has_weapons_DESC
  has_heavy_armor_ASC
  has_heavy_armor_DESC
  has_light_armor_ASC
  has_light_armor_DESC
  has_medium_armor_ASC
  has_medium_armor_DESC
  traits_needed_ASC
  traits_needed_DESC
  pts_ASC
  pts_DESC
  eso_id_ASC
  eso_id_DESC
}

type SetPreviousValues {
  id: ID!
  setId: Int!
  name: String!
  location: String!
  type: String!
  slug: String!
  bonus_item_1: String
  bonus_item_2: String
  bonus_item_3: String
  bonus_item_4: String
  bonus_item_5: String
  has_jewels: Int!
  has_weapons: Int!
  has_heavy_armor: Int!
  has_light_armor: Int!
  has_medium_armor: Int!
  traits_needed: Int
  pts: Int
  eso_id: Int
}

type SetSelection {
  id: ID!
  icon: String
  slot: String
  type: String
  selectedSet: Set
  trait: Modification
  glyph: Modification
}

type SetSelectionConnection {
  pageInfo: PageInfo!
  edges: [SetSelectionEdge]!
  aggregate: AggregateSetSelection!
}

input SetSelectionCreateInput {
  id: ID
  icon: String
  slot: String
  type: String
  selectedSet: SetCreateOneInput
  trait: ModificationCreateOneInput
  glyph: ModificationCreateOneInput
}

input SetSelectionCreateManyInput {
  create: [SetSelectionCreateInput!]
  connect: [SetSelectionWhereUniqueInput!]
}

type SetSelectionEdge {
  node: SetSelection!
  cursor: String!
}

enum SetSelectionOrderByInput {
  id_ASC
  id_DESC
  icon_ASC
  icon_DESC
  slot_ASC
  slot_DESC
  type_ASC
  type_DESC
}

type SetSelectionPreviousValues {
  id: ID!
  icon: String
  slot: String
  type: String
}

input SetSelectionScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  icon: String
  icon_not: String
  icon_in: [String!]
  icon_not_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_gt: String
  icon_gte: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  slot: String
  slot_not: String
  slot_in: [String!]
  slot_not_in: [String!]
  slot_lt: String
  slot_lte: String
  slot_gt: String
  slot_gte: String
  slot_contains: String
  slot_not_contains: String
  slot_starts_with: String
  slot_not_starts_with: String
  slot_ends_with: String
  slot_not_ends_with: String
  type: String
  type_not: String
  type_in: [String!]
  type_not_in: [String!]
  type_lt: String
  type_lte: String
  type_gt: String
  type_gte: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  AND: [SetSelectionScalarWhereInput!]
  OR: [SetSelectionScalarWhereInput!]
  NOT: [SetSelectionScalarWhereInput!]
}

type SetSelectionSubscriptionPayload {
  mutation: MutationType!
  node: SetSelection
  updatedFields: [String!]
  previousValues: SetSelectionPreviousValues
}

input SetSelectionSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SetSelectionWhereInput
  AND: [SetSelectionSubscriptionWhereInput!]
  OR: [SetSelectionSubscriptionWhereInput!]
  NOT: [SetSelectionSubscriptionWhereInput!]
}

input SetSelectionUpdateDataInput {
  icon: String
  slot: String
  type: String
  selectedSet: SetUpdateOneInput
  trait: ModificationUpdateOneInput
  glyph: ModificationUpdateOneInput
}

input SetSelectionUpdateInput {
  icon: String
  slot: String
  type: String
  selectedSet: SetUpdateOneInput
  trait: ModificationUpdateOneInput
  glyph: ModificationUpdateOneInput
}

input SetSelectionUpdateManyDataInput {
  icon: String
  slot: String
  type: String
}

input SetSelectionUpdateManyInput {
  create: [SetSelectionCreateInput!]
  update: [SetSelectionUpdateWithWhereUniqueNestedInput!]
  upsert: [SetSelectionUpsertWithWhereUniqueNestedInput!]
  delete: [SetSelectionWhereUniqueInput!]
  connect: [SetSelectionWhereUniqueInput!]
  set: [SetSelectionWhereUniqueInput!]
  disconnect: [SetSelectionWhereUniqueInput!]
  deleteMany: [SetSelectionScalarWhereInput!]
  updateMany: [SetSelectionUpdateManyWithWhereNestedInput!]
}

input SetSelectionUpdateManyMutationInput {
  icon: String
  slot: String
  type: String
}

input SetSelectionUpdateManyWithWhereNestedInput {
  where: SetSelectionScalarWhereInput!
  data: SetSelectionUpdateManyDataInput!
}

input SetSelectionUpdateWithWhereUniqueNestedInput {
  where: SetSelectionWhereUniqueInput!
  data: SetSelectionUpdateDataInput!
}

input SetSelectionUpsertWithWhereUniqueNestedInput {
  where: SetSelectionWhereUniqueInput!
  update: SetSelectionUpdateDataInput!
  create: SetSelectionCreateInput!
}

input SetSelectionWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  icon: String
  icon_not: String
  icon_in: [String!]
  icon_not_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_gt: String
  icon_gte: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  slot: String
  slot_not: String
  slot_in: [String!]
  slot_not_in: [String!]
  slot_lt: String
  slot_lte: String
  slot_gt: String
  slot_gte: String
  slot_contains: String
  slot_not_contains: String
  slot_starts_with: String
  slot_not_starts_with: String
  slot_ends_with: String
  slot_not_ends_with: String
  type: String
  type_not: String
  type_in: [String!]
  type_not_in: [String!]
  type_lt: String
  type_lte: String
  type_gt: String
  type_gte: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  selectedSet: SetWhereInput
  trait: ModificationWhereInput
  glyph: ModificationWhereInput
  AND: [SetSelectionWhereInput!]
  OR: [SetSelectionWhereInput!]
  NOT: [SetSelectionWhereInput!]
}

input SetSelectionWhereUniqueInput {
  id: ID
}

type SetSubscriptionPayload {
  mutation: MutationType!
  node: Set
  updatedFields: [String!]
  previousValues: SetPreviousValues
}

input SetSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SetWhereInput
  AND: [SetSubscriptionWhereInput!]
  OR: [SetSubscriptionWhereInput!]
  NOT: [SetSubscriptionWhereInput!]
}

input SetUpdateDataInput {
  setId: Int
  name: String
  location: String
  type: String
  slug: String
  bonus_item_1: String
  bonus_item_2: String
  bonus_item_3: String
  bonus_item_4: String
  bonus_item_5: String
  has_jewels: Int
  has_weapons: Int
  has_heavy_armor: Int
  has_light_armor: Int
  has_medium_armor: Int
  traits_needed: Int
  pts: Int
  eso_id: Int
}

input SetUpdateInput {
  setId: Int
  name: String
  location: String
  type: String
  slug: String
  bonus_item_1: String
  bonus_item_2: String
  bonus_item_3: String
  bonus_item_4: String
  bonus_item_5: String
  has_jewels: Int
  has_weapons: Int
  has_heavy_armor: Int
  has_light_armor: Int
  has_medium_armor: Int
  traits_needed: Int
  pts: Int
  eso_id: Int
}

input SetUpdateManyMutationInput {
  setId: Int
  name: String
  location: String
  type: String
  slug: String
  bonus_item_1: String
  bonus_item_2: String
  bonus_item_3: String
  bonus_item_4: String
  bonus_item_5: String
  has_jewels: Int
  has_weapons: Int
  has_heavy_armor: Int
  has_light_armor: Int
  has_medium_armor: Int
  traits_needed: Int
  pts: Int
  eso_id: Int
}

input SetUpdateOneInput {
  create: SetCreateInput
  update: SetUpdateDataInput
  upsert: SetUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: SetWhereUniqueInput
}

input SetUpsertNestedInput {
  update: SetUpdateDataInput!
  create: SetCreateInput!
}

input SetWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  setId: Int
  setId_not: Int
  setId_in: [Int!]
  setId_not_in: [Int!]
  setId_lt: Int
  setId_lte: Int
  setId_gt: Int
  setId_gte: Int
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  type: String
  type_not: String
  type_in: [String!]
  type_not_in: [String!]
  type_lt: String
  type_lte: String
  type_gt: String
  type_gte: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  slug: String
  slug_not: String
  slug_in: [String!]
  slug_not_in: [String!]
  slug_lt: String
  slug_lte: String
  slug_gt: String
  slug_gte: String
  slug_contains: String
  slug_not_contains: String
  slug_starts_with: String
  slug_not_starts_with: String
  slug_ends_with: String
  slug_not_ends_with: String
  bonus_item_1: String
  bonus_item_1_not: String
  bonus_item_1_in: [String!]
  bonus_item_1_not_in: [String!]
  bonus_item_1_lt: String
  bonus_item_1_lte: String
  bonus_item_1_gt: String
  bonus_item_1_gte: String
  bonus_item_1_contains: String
  bonus_item_1_not_contains: String
  bonus_item_1_starts_with: String
  bonus_item_1_not_starts_with: String
  bonus_item_1_ends_with: String
  bonus_item_1_not_ends_with: String
  bonus_item_2: String
  bonus_item_2_not: String
  bonus_item_2_in: [String!]
  bonus_item_2_not_in: [String!]
  bonus_item_2_lt: String
  bonus_item_2_lte: String
  bonus_item_2_gt: String
  bonus_item_2_gte: String
  bonus_item_2_contains: String
  bonus_item_2_not_contains: String
  bonus_item_2_starts_with: String
  bonus_item_2_not_starts_with: String
  bonus_item_2_ends_with: String
  bonus_item_2_not_ends_with: String
  bonus_item_3: String
  bonus_item_3_not: String
  bonus_item_3_in: [String!]
  bonus_item_3_not_in: [String!]
  bonus_item_3_lt: String
  bonus_item_3_lte: String
  bonus_item_3_gt: String
  bonus_item_3_gte: String
  bonus_item_3_contains: String
  bonus_item_3_not_contains: String
  bonus_item_3_starts_with: String
  bonus_item_3_not_starts_with: String
  bonus_item_3_ends_with: String
  bonus_item_3_not_ends_with: String
  bonus_item_4: String
  bonus_item_4_not: String
  bonus_item_4_in: [String!]
  bonus_item_4_not_in: [String!]
  bonus_item_4_lt: String
  bonus_item_4_lte: String
  bonus_item_4_gt: String
  bonus_item_4_gte: String
  bonus_item_4_contains: String
  bonus_item_4_not_contains: String
  bonus_item_4_starts_with: String
  bonus_item_4_not_starts_with: String
  bonus_item_4_ends_with: String
  bonus_item_4_not_ends_with: String
  bonus_item_5: String
  bonus_item_5_not: String
  bonus_item_5_in: [String!]
  bonus_item_5_not_in: [String!]
  bonus_item_5_lt: String
  bonus_item_5_lte: String
  bonus_item_5_gt: String
  bonus_item_5_gte: String
  bonus_item_5_contains: String
  bonus_item_5_not_contains: String
  bonus_item_5_starts_with: String
  bonus_item_5_not_starts_with: String
  bonus_item_5_ends_with: String
  bonus_item_5_not_ends_with: String
  has_jewels: Int
  has_jewels_not: Int
  has_jewels_in: [Int!]
  has_jewels_not_in: [Int!]
  has_jewels_lt: Int
  has_jewels_lte: Int
  has_jewels_gt: Int
  has_jewels_gte: Int
  has_weapons: Int
  has_weapons_not: Int
  has_weapons_in: [Int!]
  has_weapons_not_in: [Int!]
  has_weapons_lt: Int
  has_weapons_lte: Int
  has_weapons_gt: Int
  has_weapons_gte: Int
  has_heavy_armor: Int
  has_heavy_armor_not: Int
  has_heavy_armor_in: [Int!]
  has_heavy_armor_not_in: [Int!]
  has_heavy_armor_lt: Int
  has_heavy_armor_lte: Int
  has_heavy_armor_gt: Int
  has_heavy_armor_gte: Int
  has_light_armor: Int
  has_light_armor_not: Int
  has_light_armor_in: [Int!]
  has_light_armor_not_in: [Int!]
  has_light_armor_lt: Int
  has_light_armor_lte: Int
  has_light_armor_gt: Int
  has_light_armor_gte: Int
  has_medium_armor: Int
  has_medium_armor_not: Int
  has_medium_armor_in: [Int!]
  has_medium_armor_not_in: [Int!]
  has_medium_armor_lt: Int
  has_medium_armor_lte: Int
  has_medium_armor_gt: Int
  has_medium_armor_gte: Int
  traits_needed: Int
  traits_needed_not: Int
  traits_needed_in: [Int!]
  traits_needed_not_in: [Int!]
  traits_needed_lt: Int
  traits_needed_lte: Int
  traits_needed_gt: Int
  traits_needed_gte: Int
  pts: Int
  pts_not: Int
  pts_in: [Int!]
  pts_not_in: [Int!]
  pts_lt: Int
  pts_lte: Int
  pts_gt: Int
  pts_gte: Int
  eso_id: Int
  eso_id_not: Int
  eso_id_in: [Int!]
  eso_id_not_in: [Int!]
  eso_id_lt: Int
  eso_id_lte: Int
  eso_id_gt: Int
  eso_id_gte: Int
  AND: [SetWhereInput!]
  OR: [SetWhereInput!]
  NOT: [SetWhereInput!]
}

input SetWhereUniqueInput {
  id: ID
  setId: Int
}

type Skill {
  id: ID!
  skillId: Int!
  cast_time: String!
  cost: String!
  effect_1: String!
  effect_2: String
  icon: String
  name: String!
  parent: Int
  pts: Int
  range: String
  skillline: Int!
  slug: String!
  target: String
  type: Int!
  unlocks_at: Int
}

type SkillConnection {
  pageInfo: PageInfo!
  edges: [SkillEdge]!
  aggregate: AggregateSkill!
}

input SkillCreateInput {
  id: ID
  skillId: Int!
  cast_time: String!
  cost: String!
  effect_1: String!
  effect_2: String
  icon: String
  name: String!
  parent: Int
  pts: Int
  range: String
  skillline: Int!
  slug: String!
  target: String
  type: Int!
  unlocks_at: Int
}

input SkillCreateOneInput {
  create: SkillCreateInput
  connect: SkillWhereUniqueInput
}

type SkillEdge {
  node: Skill!
  cursor: String!
}

enum SkillOrderByInput {
  id_ASC
  id_DESC
  skillId_ASC
  skillId_DESC
  cast_time_ASC
  cast_time_DESC
  cost_ASC
  cost_DESC
  effect_1_ASC
  effect_1_DESC
  effect_2_ASC
  effect_2_DESC
  icon_ASC
  icon_DESC
  name_ASC
  name_DESC
  parent_ASC
  parent_DESC
  pts_ASC
  pts_DESC
  range_ASC
  range_DESC
  skillline_ASC
  skillline_DESC
  slug_ASC
  slug_DESC
  target_ASC
  target_DESC
  type_ASC
  type_DESC
  unlocks_at_ASC
  unlocks_at_DESC
}

type SkillPreviousValues {
  id: ID!
  skillId: Int!
  cast_time: String!
  cost: String!
  effect_1: String!
  effect_2: String
  icon: String
  name: String!
  parent: Int
  pts: Int
  range: String
  skillline: Int!
  slug: String!
  target: String
  type: Int!
  unlocks_at: Int
}

type SkillSelection {
  id: ID!
  index: Int!
  skill: Skill
}

type SkillSelectionConnection {
  pageInfo: PageInfo!
  edges: [SkillSelectionEdge]!
  aggregate: AggregateSkillSelection!
}

input SkillSelectionCreateInput {
  id: ID
  index: Int!
  skill: SkillCreateOneInput
}

input SkillSelectionCreateManyInput {
  create: [SkillSelectionCreateInput!]
  connect: [SkillSelectionWhereUniqueInput!]
}

type SkillSelectionEdge {
  node: SkillSelection!
  cursor: String!
}

enum SkillSelectionOrderByInput {
  id_ASC
  id_DESC
  index_ASC
  index_DESC
}

type SkillSelectionPreviousValues {
  id: ID!
  index: Int!
}

input SkillSelectionScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  index: Int
  index_not: Int
  index_in: [Int!]
  index_not_in: [Int!]
  index_lt: Int
  index_lte: Int
  index_gt: Int
  index_gte: Int
  AND: [SkillSelectionScalarWhereInput!]
  OR: [SkillSelectionScalarWhereInput!]
  NOT: [SkillSelectionScalarWhereInput!]
}

type SkillSelectionSubscriptionPayload {
  mutation: MutationType!
  node: SkillSelection
  updatedFields: [String!]
  previousValues: SkillSelectionPreviousValues
}

input SkillSelectionSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SkillSelectionWhereInput
  AND: [SkillSelectionSubscriptionWhereInput!]
  OR: [SkillSelectionSubscriptionWhereInput!]
  NOT: [SkillSelectionSubscriptionWhereInput!]
}

input SkillSelectionUpdateDataInput {
  index: Int
  skill: SkillUpdateOneInput
}

input SkillSelectionUpdateInput {
  index: Int
  skill: SkillUpdateOneInput
}

input SkillSelectionUpdateManyDataInput {
  index: Int
}

input SkillSelectionUpdateManyInput {
  create: [SkillSelectionCreateInput!]
  update: [SkillSelectionUpdateWithWhereUniqueNestedInput!]
  upsert: [SkillSelectionUpsertWithWhereUniqueNestedInput!]
  delete: [SkillSelectionWhereUniqueInput!]
  connect: [SkillSelectionWhereUniqueInput!]
  set: [SkillSelectionWhereUniqueInput!]
  disconnect: [SkillSelectionWhereUniqueInput!]
  deleteMany: [SkillSelectionScalarWhereInput!]
  updateMany: [SkillSelectionUpdateManyWithWhereNestedInput!]
}

input SkillSelectionUpdateManyMutationInput {
  index: Int
}

input SkillSelectionUpdateManyWithWhereNestedInput {
  where: SkillSelectionScalarWhereInput!
  data: SkillSelectionUpdateManyDataInput!
}

input SkillSelectionUpdateWithWhereUniqueNestedInput {
  where: SkillSelectionWhereUniqueInput!
  data: SkillSelectionUpdateDataInput!
}

input SkillSelectionUpsertWithWhereUniqueNestedInput {
  where: SkillSelectionWhereUniqueInput!
  update: SkillSelectionUpdateDataInput!
  create: SkillSelectionCreateInput!
}

input SkillSelectionWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  index: Int
  index_not: Int
  index_in: [Int!]
  index_not_in: [Int!]
  index_lt: Int
  index_lte: Int
  index_gt: Int
  index_gte: Int
  skill: SkillWhereInput
  AND: [SkillSelectionWhereInput!]
  OR: [SkillSelectionWhereInput!]
  NOT: [SkillSelectionWhereInput!]
}

input SkillSelectionWhereUniqueInput {
  id: ID
}

type SkillSubscriptionPayload {
  mutation: MutationType!
  node: Skill
  updatedFields: [String!]
  previousValues: SkillPreviousValues
}

input SkillSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SkillWhereInput
  AND: [SkillSubscriptionWhereInput!]
  OR: [SkillSubscriptionWhereInput!]
  NOT: [SkillSubscriptionWhereInput!]
}

input SkillUpdateDataInput {
  skillId: Int
  cast_time: String
  cost: String
  effect_1: String
  effect_2: String
  icon: String
  name: String
  parent: Int
  pts: Int
  range: String
  skillline: Int
  slug: String
  target: String
  type: Int
  unlocks_at: Int
}

input SkillUpdateInput {
  skillId: Int
  cast_time: String
  cost: String
  effect_1: String
  effect_2: String
  icon: String
  name: String
  parent: Int
  pts: Int
  range: String
  skillline: Int
  slug: String
  target: String
  type: Int
  unlocks_at: Int
}

input SkillUpdateManyMutationInput {
  skillId: Int
  cast_time: String
  cost: String
  effect_1: String
  effect_2: String
  icon: String
  name: String
  parent: Int
  pts: Int
  range: String
  skillline: Int
  slug: String
  target: String
  type: Int
  unlocks_at: Int
}

input SkillUpdateOneInput {
  create: SkillCreateInput
  update: SkillUpdateDataInput
  upsert: SkillUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: SkillWhereUniqueInput
}

input SkillUpsertNestedInput {
  update: SkillUpdateDataInput!
  create: SkillCreateInput!
}

input SkillWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  skillId: Int
  skillId_not: Int
  skillId_in: [Int!]
  skillId_not_in: [Int!]
  skillId_lt: Int
  skillId_lte: Int
  skillId_gt: Int
  skillId_gte: Int
  cast_time: String
  cast_time_not: String
  cast_time_in: [String!]
  cast_time_not_in: [String!]
  cast_time_lt: String
  cast_time_lte: String
  cast_time_gt: String
  cast_time_gte: String
  cast_time_contains: String
  cast_time_not_contains: String
  cast_time_starts_with: String
  cast_time_not_starts_with: String
  cast_time_ends_with: String
  cast_time_not_ends_with: String
  cost: String
  cost_not: String
  cost_in: [String!]
  cost_not_in: [String!]
  cost_lt: String
  cost_lte: String
  cost_gt: String
  cost_gte: String
  cost_contains: String
  cost_not_contains: String
  cost_starts_with: String
  cost_not_starts_with: String
  cost_ends_with: String
  cost_not_ends_with: String
  effect_1: String
  effect_1_not: String
  effect_1_in: [String!]
  effect_1_not_in: [String!]
  effect_1_lt: String
  effect_1_lte: String
  effect_1_gt: String
  effect_1_gte: String
  effect_1_contains: String
  effect_1_not_contains: String
  effect_1_starts_with: String
  effect_1_not_starts_with: String
  effect_1_ends_with: String
  effect_1_not_ends_with: String
  effect_2: String
  effect_2_not: String
  effect_2_in: [String!]
  effect_2_not_in: [String!]
  effect_2_lt: String
  effect_2_lte: String
  effect_2_gt: String
  effect_2_gte: String
  effect_2_contains: String
  effect_2_not_contains: String
  effect_2_starts_with: String
  effect_2_not_starts_with: String
  effect_2_ends_with: String
  effect_2_not_ends_with: String
  icon: String
  icon_not: String
  icon_in: [String!]
  icon_not_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_gt: String
  icon_gte: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  parent: Int
  parent_not: Int
  parent_in: [Int!]
  parent_not_in: [Int!]
  parent_lt: Int
  parent_lte: Int
  parent_gt: Int
  parent_gte: Int
  pts: Int
  pts_not: Int
  pts_in: [Int!]
  pts_not_in: [Int!]
  pts_lt: Int
  pts_lte: Int
  pts_gt: Int
  pts_gte: Int
  range: String
  range_not: String
  range_in: [String!]
  range_not_in: [String!]
  range_lt: String
  range_lte: String
  range_gt: String
  range_gte: String
  range_contains: String
  range_not_contains: String
  range_starts_with: String
  range_not_starts_with: String
  range_ends_with: String
  range_not_ends_with: String
  skillline: Int
  skillline_not: Int
  skillline_in: [Int!]
  skillline_not_in: [Int!]
  skillline_lt: Int
  skillline_lte: Int
  skillline_gt: Int
  skillline_gte: Int
  slug: String
  slug_not: String
  slug_in: [String!]
  slug_not_in: [String!]
  slug_lt: String
  slug_lte: String
  slug_gt: String
  slug_gte: String
  slug_contains: String
  slug_not_contains: String
  slug_starts_with: String
  slug_not_starts_with: String
  slug_ends_with: String
  slug_not_ends_with: String
  target: String
  target_not: String
  target_in: [String!]
  target_not_in: [String!]
  target_lt: String
  target_lte: String
  target_gt: String
  target_gte: String
  target_contains: String
  target_not_contains: String
  target_starts_with: String
  target_not_starts_with: String
  target_ends_with: String
  target_not_ends_with: String
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  unlocks_at: Int
  unlocks_at_not: Int
  unlocks_at_in: [Int!]
  unlocks_at_not_in: [Int!]
  unlocks_at_lt: Int
  unlocks_at_lte: Int
  unlocks_at_gt: Int
  unlocks_at_gte: Int
  AND: [SkillWhereInput!]
  OR: [SkillWhereInput!]
  NOT: [SkillWhereInput!]
}

input SkillWhereUniqueInput {
  id: ID
  skillId: Int
}

type Subscription {
  buff(where: BuffSubscriptionWhereInput): BuffSubscriptionPayload
  build(where: BuildSubscriptionWhereInput): BuildSubscriptionPayload
  modification(where: ModificationSubscriptionWhereInput): ModificationSubscriptionPayload
  mundusStone(where: MundusStoneSubscriptionWhereInput): MundusStoneSubscriptionPayload
  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload
  raid(where: RaidSubscriptionWhereInput): RaidSubscriptionPayload
  raidBuild(where: RaidBuildSubscriptionWhereInput): RaidBuildSubscriptionPayload
  set(where: SetSubscriptionWhereInput): SetSubscriptionPayload
  setSelection(where: SetSelectionSubscriptionWhereInput): SetSelectionSubscriptionPayload
  skill(where: SkillSubscriptionWhereInput): SkillSubscriptionPayload
  skillSelection(where: SkillSelectionSubscriptionWhereInput): SkillSelectionSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type User {
  id: ID!
  email: String!
  password: String!
  name: String
  builds(where: BuildWhereInput, orderBy: BuildOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Build!]
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  email: String!
  password: String!
  name: String
  builds: BuildCreateManyWithoutOwnerInput
}

input UserCreateManyInput {
  create: [UserCreateInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutBuildsInput {
  create: UserCreateWithoutBuildsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutBuildsInput {
  id: ID
  email: String!
  password: String!
  name: String
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  name_ASC
  name_DESC
}

type UserPreviousValues {
  id: ID!
  email: String!
  password: String!
  name: String
}

input UserScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  AND: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  NOT: [UserScalarWhereInput!]
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateDataInput {
  email: String
  password: String
  name: String
  builds: BuildUpdateManyWithoutOwnerInput
}

input UserUpdateInput {
  email: String
  password: String
  name: String
  builds: BuildUpdateManyWithoutOwnerInput
}

input UserUpdateManyDataInput {
  email: String
  password: String
  name: String
}

input UserUpdateManyInput {
  create: [UserCreateInput!]
  update: [UserUpdateWithWhereUniqueNestedInput!]
  upsert: [UserUpsertWithWhereUniqueNestedInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyMutationInput {
  email: String
  password: String
  name: String
}

input UserUpdateManyWithWhereNestedInput {
  where: UserScalarWhereInput!
  data: UserUpdateManyDataInput!
}

input UserUpdateOneInput {
  create: UserCreateInput
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredInput {
  create: UserCreateInput
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutBuildsInput {
  create: UserCreateWithoutBuildsInput
  update: UserUpdateWithoutBuildsDataInput
  upsert: UserUpsertWithoutBuildsInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateWithoutBuildsDataInput {
  email: String
  password: String
  name: String
}

input UserUpdateWithWhereUniqueNestedInput {
  where: UserWhereUniqueInput!
  data: UserUpdateDataInput!
}

input UserUpsertNestedInput {
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserUpsertWithoutBuildsInput {
  update: UserUpdateWithoutBuildsDataInput!
  create: UserCreateWithoutBuildsInput!
}

input UserUpsertWithWhereUniqueNestedInput {
  where: UserWhereUniqueInput!
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  builds_every: BuildWhereInput
  builds_some: BuildWhereInput
  builds_none: BuildWhereInput
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
`