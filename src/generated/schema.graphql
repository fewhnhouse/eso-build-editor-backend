### This file was autogenerated by Nexus 0.11.7
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

type Buff {
  buffDescription: String!
  buffType: String
  description: String
  duration: Int!
  icon: String
  id: ID!
  name: String!
  notes: String
  quality: Int!
  type: String
}

input BuffCreateInput {
  buffDescription: String!
  buffType: String
  description: String
  duration: Int!
  icon: String
  id: ID
  name: String!
  notes: String
  quality: Int!
  type: String
}

input BuffCreateOneInput {
  connect: BuffWhereUniqueInput
  create: BuffCreateInput
}

enum BuffOrderByInput {
  buffDescription_ASC
  buffDescription_DESC
  buffType_ASC
  buffType_DESC
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  duration_ASC
  duration_DESC
  icon_ASC
  icon_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  notes_ASC
  notes_DESC
  quality_ASC
  quality_DESC
  type_ASC
  type_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input BuffWhereInput {
  AND: [BuffWhereInput!]
  buffDescription: String
  buffDescription_contains: String
  buffDescription_ends_with: String
  buffDescription_gt: String
  buffDescription_gte: String
  buffDescription_in: [String!]
  buffDescription_lt: String
  buffDescription_lte: String
  buffDescription_not: String
  buffDescription_not_contains: String
  buffDescription_not_ends_with: String
  buffDescription_not_in: [String!]
  buffDescription_not_starts_with: String
  buffDescription_starts_with: String
  buffType: String
  buffType_contains: String
  buffType_ends_with: String
  buffType_gt: String
  buffType_gte: String
  buffType_in: [String!]
  buffType_lt: String
  buffType_lte: String
  buffType_not: String
  buffType_not_contains: String
  buffType_not_ends_with: String
  buffType_not_in: [String!]
  buffType_not_starts_with: String
  buffType_starts_with: String
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  duration: Int
  duration_gt: Int
  duration_gte: Int
  duration_in: [Int!]
  duration_lt: Int
  duration_lte: Int
  duration_not: Int
  duration_not_in: [Int!]
  icon: String
  icon_contains: String
  icon_ends_with: String
  icon_gt: String
  icon_gte: String
  icon_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_not: String
  icon_not_contains: String
  icon_not_ends_with: String
  icon_not_in: [String!]
  icon_not_starts_with: String
  icon_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [BuffWhereInput!]
  notes: String
  notes_contains: String
  notes_ends_with: String
  notes_gt: String
  notes_gte: String
  notes_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_not: String
  notes_not_contains: String
  notes_not_ends_with: String
  notes_not_in: [String!]
  notes_not_starts_with: String
  notes_starts_with: String
  OR: [BuffWhereInput!]
  quality: Int
  quality_gt: Int
  quality_gte: Int
  quality_in: [Int!]
  quality_lt: Int
  quality_lte: Int
  quality_not: Int
  quality_not_in: [Int!]
  type: String
  type_contains: String
  type_ends_with: String
  type_gt: String
  type_gte: String
  type_in: [String!]
  type_lt: String
  type_lte: String
  type_not: String
  type_not_contains: String
  type_not_ends_with: String
  type_not_in: [String!]
  type_not_starts_with: String
  type_starts_with: String
}

input BuffWhereUniqueInput {
  id: ID
  name: String
}

type Build {
  applicationArea: String
  backbarSelection(after: String, before: String, first: Int, last: Int, orderBy: SetSelectionOrderByInput, skip: Int, where: SetSelectionWhereInput): [SetSelection!]
  bigPieceSelection(after: String, before: String, first: Int, last: Int, orderBy: SetSelectionOrderByInput, skip: Int, where: SetSelectionWhereInput): [SetSelection!]
  buff: Buff
  createdAt: DateTime!
  esoClass: String
  frontbarSelection(after: String, before: String, first: Int, last: Int, orderBy: SetSelectionOrderByInput, skip: Int, where: SetSelectionWhereInput): [SetSelection!]
  id: ID!
  jewelrySelection(after: String, before: String, first: Int, last: Int, orderBy: SetSelectionOrderByInput, skip: Int, where: SetSelectionWhereInput): [SetSelection!]
  mundusStone: MundusStone
  name: String
  newBarOne(after: String, before: String, first: Int, last: Int, orderBy: SkillSelectionOrderByInput, skip: Int, where: SkillSelectionWhereInput): [SkillSelection!]
  newBarTwo(after: String, before: String, first: Int, last: Int, orderBy: SkillSelectionOrderByInput, skip: Int, where: SkillSelectionWhereInput): [SkillSelection!]
  owner: User
  published: Boolean!
  race: String
  role: String
  smallPieceSelection(after: String, before: String, first: Int, last: Int, orderBy: SetSelectionOrderByInput, skip: Int, where: SetSelectionWhereInput): [SetSelection!]
  ultimateOne: Skill
  ultimateTwo: Skill
  updatedAt: DateTime!
}

input BuildCreateInput {
  applicationArea: String
  backbarSelection: SetSelectionCreateManyInput
  bigPieceSelection: SetSelectionCreateManyInput
  buff: BuffCreateOneInput
  esoClass: String
  frontbarSelection: SetSelectionCreateManyInput
  id: ID
  jewelrySelection: SetSelectionCreateManyInput
  mundusStone: MundusStoneCreateOneInput
  name: String
  newBarOne: SkillSelectionCreateManyInput
  newBarTwo: SkillSelectionCreateManyInput
  owner: UserCreateOneWithoutBuildsInput
  published: Boolean
  race: String
  role: String
  smallPieceSelection: SetSelectionCreateManyInput
  ultimateOne: SkillCreateOneInput
  ultimateTwo: SkillCreateOneInput
}

enum BuildOrderByInput {
  applicationArea_ASC
  applicationArea_DESC
  createdAt_ASC
  createdAt_DESC
  esoClass_ASC
  esoClass_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  published_ASC
  published_DESC
  race_ASC
  race_DESC
  role_ASC
  role_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input BuildWhereInput {
  AND: [BuildWhereInput!]
  applicationArea: String
  applicationArea_contains: String
  applicationArea_ends_with: String
  applicationArea_gt: String
  applicationArea_gte: String
  applicationArea_in: [String!]
  applicationArea_lt: String
  applicationArea_lte: String
  applicationArea_not: String
  applicationArea_not_contains: String
  applicationArea_not_ends_with: String
  applicationArea_not_in: [String!]
  applicationArea_not_starts_with: String
  applicationArea_starts_with: String
  backbarSelection_every: SetSelectionWhereInput
  backbarSelection_none: SetSelectionWhereInput
  backbarSelection_some: SetSelectionWhereInput
  bigPieceSelection_every: SetSelectionWhereInput
  bigPieceSelection_none: SetSelectionWhereInput
  bigPieceSelection_some: SetSelectionWhereInput
  buff: BuffWhereInput
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  esoClass: String
  esoClass_contains: String
  esoClass_ends_with: String
  esoClass_gt: String
  esoClass_gte: String
  esoClass_in: [String!]
  esoClass_lt: String
  esoClass_lte: String
  esoClass_not: String
  esoClass_not_contains: String
  esoClass_not_ends_with: String
  esoClass_not_in: [String!]
  esoClass_not_starts_with: String
  esoClass_starts_with: String
  frontbarSelection_every: SetSelectionWhereInput
  frontbarSelection_none: SetSelectionWhereInput
  frontbarSelection_some: SetSelectionWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  jewelrySelection_every: SetSelectionWhereInput
  jewelrySelection_none: SetSelectionWhereInput
  jewelrySelection_some: SetSelectionWhereInput
  mundusStone: MundusStoneWhereInput
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  newBarOne_every: SkillSelectionWhereInput
  newBarOne_none: SkillSelectionWhereInput
  newBarOne_some: SkillSelectionWhereInput
  newBarTwo_every: SkillSelectionWhereInput
  newBarTwo_none: SkillSelectionWhereInput
  newBarTwo_some: SkillSelectionWhereInput
  NOT: [BuildWhereInput!]
  OR: [BuildWhereInput!]
  owner: UserWhereInput
  published: Boolean
  published_not: Boolean
  race: String
  race_contains: String
  race_ends_with: String
  race_gt: String
  race_gte: String
  race_in: [String!]
  race_lt: String
  race_lte: String
  race_not: String
  race_not_contains: String
  race_not_ends_with: String
  race_not_in: [String!]
  race_not_starts_with: String
  race_starts_with: String
  role: String
  role_contains: String
  role_ends_with: String
  role_gt: String
  role_gte: String
  role_in: [String!]
  role_lt: String
  role_lte: String
  role_not: String
  role_not_contains: String
  role_not_ends_with: String
  role_not_in: [String!]
  role_not_starts_with: String
  role_starts_with: String
  smallPieceSelection_every: SetSelectionWhereInput
  smallPieceSelection_none: SetSelectionWhereInput
  smallPieceSelection_some: SetSelectionWhereInput
  ultimateOne: SkillWhereInput
  ultimateTwo: SkillWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

scalar DateTime

type Modification {
  description: String!
  icon: String
  id: ID!
  itemType: String!
  modificationType: String!
  type: String!
}

input ModificationCreateInput {
  description: String!
  icon: String
  id: ID
  itemType: String!
  modificationType: String!
  type: String!
}

input ModificationCreateOneInput {
  connect: ModificationWhereUniqueInput
  create: ModificationCreateInput
}

enum ModificationOrderByInput {
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  icon_ASC
  icon_DESC
  id_ASC
  id_DESC
  itemType_ASC
  itemType_DESC
  modificationType_ASC
  modificationType_DESC
  type_ASC
  type_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ModificationWhereInput {
  AND: [ModificationWhereInput!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  icon: String
  icon_contains: String
  icon_ends_with: String
  icon_gt: String
  icon_gte: String
  icon_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_not: String
  icon_not_contains: String
  icon_not_ends_with: String
  icon_not_in: [String!]
  icon_not_starts_with: String
  icon_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  itemType: String
  itemType_contains: String
  itemType_ends_with: String
  itemType_gt: String
  itemType_gte: String
  itemType_in: [String!]
  itemType_lt: String
  itemType_lte: String
  itemType_not: String
  itemType_not_contains: String
  itemType_not_ends_with: String
  itemType_not_in: [String!]
  itemType_not_starts_with: String
  itemType_starts_with: String
  modificationType: String
  modificationType_contains: String
  modificationType_ends_with: String
  modificationType_gt: String
  modificationType_gte: String
  modificationType_in: [String!]
  modificationType_lt: String
  modificationType_lte: String
  modificationType_not: String
  modificationType_not_contains: String
  modificationType_not_ends_with: String
  modificationType_not_in: [String!]
  modificationType_not_starts_with: String
  modificationType_starts_with: String
  NOT: [ModificationWhereInput!]
  OR: [ModificationWhereInput!]
  type: String
  type_contains: String
  type_ends_with: String
  type_gt: String
  type_gte: String
  type_in: [String!]
  type_lt: String
  type_lte: String
  type_not: String
  type_not_contains: String
  type_not_ends_with: String
  type_not_in: [String!]
  type_not_starts_with: String
  type_starts_with: String
}

input ModificationWhereUniqueInput {
  description: String
  id: ID
}

type MundusStone {
  aldmeri: String
  daggerfall: String
  ebonheart: String
  effect: String!
  icon: String
  id: ID!
  name: String!
  value: String!
}

input MundusStoneCreateInput {
  aldmeri: String
  daggerfall: String
  ebonheart: String
  effect: String!
  icon: String
  id: ID
  name: String!
  value: String!
}

input MundusStoneCreateOneInput {
  connect: MundusStoneWhereUniqueInput
  create: MundusStoneCreateInput
}

enum MundusStoneOrderByInput {
  aldmeri_ASC
  aldmeri_DESC
  createdAt_ASC
  createdAt_DESC
  daggerfall_ASC
  daggerfall_DESC
  ebonheart_ASC
  ebonheart_DESC
  effect_ASC
  effect_DESC
  icon_ASC
  icon_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
  value_ASC
  value_DESC
}

input MundusStoneWhereInput {
  aldmeri: String
  aldmeri_contains: String
  aldmeri_ends_with: String
  aldmeri_gt: String
  aldmeri_gte: String
  aldmeri_in: [String!]
  aldmeri_lt: String
  aldmeri_lte: String
  aldmeri_not: String
  aldmeri_not_contains: String
  aldmeri_not_ends_with: String
  aldmeri_not_in: [String!]
  aldmeri_not_starts_with: String
  aldmeri_starts_with: String
  AND: [MundusStoneWhereInput!]
  daggerfall: String
  daggerfall_contains: String
  daggerfall_ends_with: String
  daggerfall_gt: String
  daggerfall_gte: String
  daggerfall_in: [String!]
  daggerfall_lt: String
  daggerfall_lte: String
  daggerfall_not: String
  daggerfall_not_contains: String
  daggerfall_not_ends_with: String
  daggerfall_not_in: [String!]
  daggerfall_not_starts_with: String
  daggerfall_starts_with: String
  ebonheart: String
  ebonheart_contains: String
  ebonheart_ends_with: String
  ebonheart_gt: String
  ebonheart_gte: String
  ebonheart_in: [String!]
  ebonheart_lt: String
  ebonheart_lte: String
  ebonheart_not: String
  ebonheart_not_contains: String
  ebonheart_not_ends_with: String
  ebonheart_not_in: [String!]
  ebonheart_not_starts_with: String
  ebonheart_starts_with: String
  effect: String
  effect_contains: String
  effect_ends_with: String
  effect_gt: String
  effect_gte: String
  effect_in: [String!]
  effect_lt: String
  effect_lte: String
  effect_not: String
  effect_not_contains: String
  effect_not_ends_with: String
  effect_not_in: [String!]
  effect_not_starts_with: String
  effect_starts_with: String
  icon: String
  icon_contains: String
  icon_ends_with: String
  icon_gt: String
  icon_gte: String
  icon_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_not: String
  icon_not_contains: String
  icon_not_ends_with: String
  icon_not_in: [String!]
  icon_not_starts_with: String
  icon_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [MundusStoneWhereInput!]
  OR: [MundusStoneWhereInput!]
  value: String
  value_contains: String
  value_ends_with: String
  value_gt: String
  value_gte: String
  value_in: [String!]
  value_lt: String
  value_lte: String
  value_not: String
  value_not_contains: String
  value_not_ends_with: String
  value_not_in: [String!]
  value_not_starts_with: String
  value_starts_with: String
}

input MundusStoneWhereUniqueInput {
  id: ID
  name: String
}

type Mutation {
  createBuild(data: BuildCreateInput): Build
  createDraft(content: String, title: String): Post
  createSetSelections(glyphDescriptions: [String!], setIds: [Int!], slots: [String!], traitDescriptions: [String!], types: [String!]): [SkillSelection!]
  createSkillSelections(indices: [Int!], skillIds: [Int!]): [SkillSelection!]
  deleteBuild(id: ID): Build
  draftBuild(backBarIds: [Int!], bigPieceIds: [Int!], esoClass: String, frontBarIds: [Int!], name: String, race: String, ultimateOneId: Int, ultimateTwoId: Int): Build
  login(email: String, password: String): AuthPayload
  publishBuild(id: ID): Build
  signup(email: String, name: String, password: String): AuthPayload
}

type Post {
  author: User!
  content: String
  createdAt: DateTime!
  id: ID!
  published: Boolean!
  title: String!
  updatedAt: DateTime!
}

type Query {
  buff(name: String): Buff
  buffs(after: String, before: String, first: Int, last: Int, orderBy: BuffOrderByInput, skip: Int, where: BuffWhereInput): [Buff!]
  build(id: ID): Build
  builds(after: String, before: String, first: Int, last: Int, orderBy: BuildOrderByInput, skip: Int, where: BuildWhereInput): [Build!]
  buildsByUser(id: ID): [Build!]
  me: User
  modifications(after: String, before: String, first: Int, last: Int, orderBy: ModificationOrderByInput, skip: Int, where: ModificationWhereInput): [Modification!]
  mundusStone(name: String): MundusStone
  mundusStones(after: String, before: String, first: Int, last: Int, orderBy: MundusStoneOrderByInput, skip: Int, where: MundusStoneWhereInput): [MundusStone!]
  publishedBuilds: [Build!]
  set(id: ID, setId: Int): [Set!]
  sets(after: String, before: String, first: Int, last: Int, orderBy: SetOrderByInput, skip: Int, where: SetWhereInput): [Set!]
  skill(id: ID, skillId: Int): Skill
  skills(after: String, before: String, first: Int, last: Int, orderBy: SkillOrderByInput, skip: Int, where: SkillWhereInput): [Skill!]
  users: [User!]
}

type Set {
  bonus_item_1: String
  bonus_item_2: String
  bonus_item_3: String
  bonus_item_4: String
  bonus_item_5: String
  eso_id: Int
  has_heavy_armor: Int!
  has_jewels: Int!
  has_light_armor: Int!
  has_medium_armor: Int!
  has_weapons: Int!
  id: ID!
  location: String!
  name: String!
  pts: Int
  setId: Int!
  slug: String!
  traits_needed: Int
  type: String!
}

input SetCreateInput {
  bonus_item_1: String
  bonus_item_2: String
  bonus_item_3: String
  bonus_item_4: String
  bonus_item_5: String
  eso_id: Int
  has_heavy_armor: Int!
  has_jewels: Int!
  has_light_armor: Int!
  has_medium_armor: Int!
  has_weapons: Int!
  id: ID
  location: String!
  name: String!
  pts: Int
  setId: Int!
  slug: String!
  traits_needed: Int
  type: String!
}

input SetCreateOneInput {
  connect: SetWhereUniqueInput
  create: SetCreateInput
}

enum SetOrderByInput {
  bonus_item_1_ASC
  bonus_item_1_DESC
  bonus_item_2_ASC
  bonus_item_2_DESC
  bonus_item_3_ASC
  bonus_item_3_DESC
  bonus_item_4_ASC
  bonus_item_4_DESC
  bonus_item_5_ASC
  bonus_item_5_DESC
  createdAt_ASC
  createdAt_DESC
  eso_id_ASC
  eso_id_DESC
  has_heavy_armor_ASC
  has_heavy_armor_DESC
  has_jewels_ASC
  has_jewels_DESC
  has_light_armor_ASC
  has_light_armor_DESC
  has_medium_armor_ASC
  has_medium_armor_DESC
  has_weapons_ASC
  has_weapons_DESC
  id_ASC
  id_DESC
  location_ASC
  location_DESC
  name_ASC
  name_DESC
  pts_ASC
  pts_DESC
  setId_ASC
  setId_DESC
  slug_ASC
  slug_DESC
  traits_needed_ASC
  traits_needed_DESC
  type_ASC
  type_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type SetSelection {
  glyph: Modification
  icon: String
  id: ID!
  selectedSet: Set
  slot: String
  trait: Modification
  type: String
}

input SetSelectionCreateInput {
  glyph: ModificationCreateOneInput
  icon: String
  id: ID
  selectedSet: SetCreateOneInput
  slot: String
  trait: ModificationCreateOneInput
  type: String
}

input SetSelectionCreateManyInput {
  connect: [SetSelectionWhereUniqueInput!]
  create: [SetSelectionCreateInput!]
}

enum SetSelectionOrderByInput {
  createdAt_ASC
  createdAt_DESC
  icon_ASC
  icon_DESC
  id_ASC
  id_DESC
  slot_ASC
  slot_DESC
  type_ASC
  type_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input SetSelectionWhereInput {
  AND: [SetSelectionWhereInput!]
  glyph: ModificationWhereInput
  icon: String
  icon_contains: String
  icon_ends_with: String
  icon_gt: String
  icon_gte: String
  icon_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_not: String
  icon_not_contains: String
  icon_not_ends_with: String
  icon_not_in: [String!]
  icon_not_starts_with: String
  icon_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [SetSelectionWhereInput!]
  OR: [SetSelectionWhereInput!]
  selectedSet: SetWhereInput
  slot: String
  slot_contains: String
  slot_ends_with: String
  slot_gt: String
  slot_gte: String
  slot_in: [String!]
  slot_lt: String
  slot_lte: String
  slot_not: String
  slot_not_contains: String
  slot_not_ends_with: String
  slot_not_in: [String!]
  slot_not_starts_with: String
  slot_starts_with: String
  trait: ModificationWhereInput
  type: String
  type_contains: String
  type_ends_with: String
  type_gt: String
  type_gte: String
  type_in: [String!]
  type_lt: String
  type_lte: String
  type_not: String
  type_not_contains: String
  type_not_ends_with: String
  type_not_in: [String!]
  type_not_starts_with: String
  type_starts_with: String
}

input SetSelectionWhereUniqueInput {
  id: ID
}

input SetWhereInput {
  AND: [SetWhereInput!]
  bonus_item_1: String
  bonus_item_1_contains: String
  bonus_item_1_ends_with: String
  bonus_item_1_gt: String
  bonus_item_1_gte: String
  bonus_item_1_in: [String!]
  bonus_item_1_lt: String
  bonus_item_1_lte: String
  bonus_item_1_not: String
  bonus_item_1_not_contains: String
  bonus_item_1_not_ends_with: String
  bonus_item_1_not_in: [String!]
  bonus_item_1_not_starts_with: String
  bonus_item_1_starts_with: String
  bonus_item_2: String
  bonus_item_2_contains: String
  bonus_item_2_ends_with: String
  bonus_item_2_gt: String
  bonus_item_2_gte: String
  bonus_item_2_in: [String!]
  bonus_item_2_lt: String
  bonus_item_2_lte: String
  bonus_item_2_not: String
  bonus_item_2_not_contains: String
  bonus_item_2_not_ends_with: String
  bonus_item_2_not_in: [String!]
  bonus_item_2_not_starts_with: String
  bonus_item_2_starts_with: String
  bonus_item_3: String
  bonus_item_3_contains: String
  bonus_item_3_ends_with: String
  bonus_item_3_gt: String
  bonus_item_3_gte: String
  bonus_item_3_in: [String!]
  bonus_item_3_lt: String
  bonus_item_3_lte: String
  bonus_item_3_not: String
  bonus_item_3_not_contains: String
  bonus_item_3_not_ends_with: String
  bonus_item_3_not_in: [String!]
  bonus_item_3_not_starts_with: String
  bonus_item_3_starts_with: String
  bonus_item_4: String
  bonus_item_4_contains: String
  bonus_item_4_ends_with: String
  bonus_item_4_gt: String
  bonus_item_4_gte: String
  bonus_item_4_in: [String!]
  bonus_item_4_lt: String
  bonus_item_4_lte: String
  bonus_item_4_not: String
  bonus_item_4_not_contains: String
  bonus_item_4_not_ends_with: String
  bonus_item_4_not_in: [String!]
  bonus_item_4_not_starts_with: String
  bonus_item_4_starts_with: String
  bonus_item_5: String
  bonus_item_5_contains: String
  bonus_item_5_ends_with: String
  bonus_item_5_gt: String
  bonus_item_5_gte: String
  bonus_item_5_in: [String!]
  bonus_item_5_lt: String
  bonus_item_5_lte: String
  bonus_item_5_not: String
  bonus_item_5_not_contains: String
  bonus_item_5_not_ends_with: String
  bonus_item_5_not_in: [String!]
  bonus_item_5_not_starts_with: String
  bonus_item_5_starts_with: String
  eso_id: Int
  eso_id_gt: Int
  eso_id_gte: Int
  eso_id_in: [Int!]
  eso_id_lt: Int
  eso_id_lte: Int
  eso_id_not: Int
  eso_id_not_in: [Int!]
  has_heavy_armor: Int
  has_heavy_armor_gt: Int
  has_heavy_armor_gte: Int
  has_heavy_armor_in: [Int!]
  has_heavy_armor_lt: Int
  has_heavy_armor_lte: Int
  has_heavy_armor_not: Int
  has_heavy_armor_not_in: [Int!]
  has_jewels: Int
  has_jewels_gt: Int
  has_jewels_gte: Int
  has_jewels_in: [Int!]
  has_jewels_lt: Int
  has_jewels_lte: Int
  has_jewels_not: Int
  has_jewels_not_in: [Int!]
  has_light_armor: Int
  has_light_armor_gt: Int
  has_light_armor_gte: Int
  has_light_armor_in: [Int!]
  has_light_armor_lt: Int
  has_light_armor_lte: Int
  has_light_armor_not: Int
  has_light_armor_not_in: [Int!]
  has_medium_armor: Int
  has_medium_armor_gt: Int
  has_medium_armor_gte: Int
  has_medium_armor_in: [Int!]
  has_medium_armor_lt: Int
  has_medium_armor_lte: Int
  has_medium_armor_not: Int
  has_medium_armor_not_in: [Int!]
  has_weapons: Int
  has_weapons_gt: Int
  has_weapons_gte: Int
  has_weapons_in: [Int!]
  has_weapons_lt: Int
  has_weapons_lte: Int
  has_weapons_not: Int
  has_weapons_not_in: [Int!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  location: String
  location_contains: String
  location_ends_with: String
  location_gt: String
  location_gte: String
  location_in: [String!]
  location_lt: String
  location_lte: String
  location_not: String
  location_not_contains: String
  location_not_ends_with: String
  location_not_in: [String!]
  location_not_starts_with: String
  location_starts_with: String
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [SetWhereInput!]
  OR: [SetWhereInput!]
  pts: Int
  pts_gt: Int
  pts_gte: Int
  pts_in: [Int!]
  pts_lt: Int
  pts_lte: Int
  pts_not: Int
  pts_not_in: [Int!]
  setId: Int
  setId_gt: Int
  setId_gte: Int
  setId_in: [Int!]
  setId_lt: Int
  setId_lte: Int
  setId_not: Int
  setId_not_in: [Int!]
  slug: String
  slug_contains: String
  slug_ends_with: String
  slug_gt: String
  slug_gte: String
  slug_in: [String!]
  slug_lt: String
  slug_lte: String
  slug_not: String
  slug_not_contains: String
  slug_not_ends_with: String
  slug_not_in: [String!]
  slug_not_starts_with: String
  slug_starts_with: String
  traits_needed: Int
  traits_needed_gt: Int
  traits_needed_gte: Int
  traits_needed_in: [Int!]
  traits_needed_lt: Int
  traits_needed_lte: Int
  traits_needed_not: Int
  traits_needed_not_in: [Int!]
  type: String
  type_contains: String
  type_ends_with: String
  type_gt: String
  type_gte: String
  type_in: [String!]
  type_lt: String
  type_lte: String
  type_not: String
  type_not_contains: String
  type_not_ends_with: String
  type_not_in: [String!]
  type_not_starts_with: String
  type_starts_with: String
}

input SetWhereUniqueInput {
  id: ID
  setId: Int
}

type Skill {
  cast_time: String!
  cost: String!
  effect_1: String!
  effect_2: String
  icon: String
  id: ID!
  name: String!
  parent: Int
  pts: Int
  range: String
  skillId: Int!
  skillline: Int!
  slug: String!
  target: String
  type: Int!
  unlocks_at: Int
}

input SkillCreateInput {
  cast_time: String!
  cost: String!
  effect_1: String!
  effect_2: String
  icon: String
  id: ID
  name: String!
  parent: Int
  pts: Int
  range: String
  skillId: Int!
  skillline: Int!
  slug: String!
  target: String
  type: Int!
  unlocks_at: Int
}

input SkillCreateOneInput {
  connect: SkillWhereUniqueInput
  create: SkillCreateInput
}

enum SkillOrderByInput {
  cast_time_ASC
  cast_time_DESC
  cost_ASC
  cost_DESC
  createdAt_ASC
  createdAt_DESC
  effect_1_ASC
  effect_1_DESC
  effect_2_ASC
  effect_2_DESC
  icon_ASC
  icon_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  parent_ASC
  parent_DESC
  pts_ASC
  pts_DESC
  range_ASC
  range_DESC
  skillId_ASC
  skillId_DESC
  skillline_ASC
  skillline_DESC
  slug_ASC
  slug_DESC
  target_ASC
  target_DESC
  type_ASC
  type_DESC
  unlocks_at_ASC
  unlocks_at_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type SkillSelection {
  id: ID!
  index: Int!
  skill: Skill
}

input SkillSelectionCreateInput {
  id: ID
  index: Int!
  skill: SkillCreateOneInput
}

input SkillSelectionCreateManyInput {
  connect: [SkillSelectionWhereUniqueInput!]
  create: [SkillSelectionCreateInput!]
}

enum SkillSelectionOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  index_ASC
  index_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input SkillSelectionWhereInput {
  AND: [SkillSelectionWhereInput!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  index: Int
  index_gt: Int
  index_gte: Int
  index_in: [Int!]
  index_lt: Int
  index_lte: Int
  index_not: Int
  index_not_in: [Int!]
  NOT: [SkillSelectionWhereInput!]
  OR: [SkillSelectionWhereInput!]
  skill: SkillWhereInput
}

input SkillSelectionWhereUniqueInput {
  id: ID
}

input SkillWhereInput {
  AND: [SkillWhereInput!]
  cast_time: String
  cast_time_contains: String
  cast_time_ends_with: String
  cast_time_gt: String
  cast_time_gte: String
  cast_time_in: [String!]
  cast_time_lt: String
  cast_time_lte: String
  cast_time_not: String
  cast_time_not_contains: String
  cast_time_not_ends_with: String
  cast_time_not_in: [String!]
  cast_time_not_starts_with: String
  cast_time_starts_with: String
  cost: String
  cost_contains: String
  cost_ends_with: String
  cost_gt: String
  cost_gte: String
  cost_in: [String!]
  cost_lt: String
  cost_lte: String
  cost_not: String
  cost_not_contains: String
  cost_not_ends_with: String
  cost_not_in: [String!]
  cost_not_starts_with: String
  cost_starts_with: String
  effect_1: String
  effect_1_contains: String
  effect_1_ends_with: String
  effect_1_gt: String
  effect_1_gte: String
  effect_1_in: [String!]
  effect_1_lt: String
  effect_1_lte: String
  effect_1_not: String
  effect_1_not_contains: String
  effect_1_not_ends_with: String
  effect_1_not_in: [String!]
  effect_1_not_starts_with: String
  effect_1_starts_with: String
  effect_2: String
  effect_2_contains: String
  effect_2_ends_with: String
  effect_2_gt: String
  effect_2_gte: String
  effect_2_in: [String!]
  effect_2_lt: String
  effect_2_lte: String
  effect_2_not: String
  effect_2_not_contains: String
  effect_2_not_ends_with: String
  effect_2_not_in: [String!]
  effect_2_not_starts_with: String
  effect_2_starts_with: String
  icon: String
  icon_contains: String
  icon_ends_with: String
  icon_gt: String
  icon_gte: String
  icon_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_not: String
  icon_not_contains: String
  icon_not_ends_with: String
  icon_not_in: [String!]
  icon_not_starts_with: String
  icon_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [SkillWhereInput!]
  OR: [SkillWhereInput!]
  parent: Int
  parent_gt: Int
  parent_gte: Int
  parent_in: [Int!]
  parent_lt: Int
  parent_lte: Int
  parent_not: Int
  parent_not_in: [Int!]
  pts: Int
  pts_gt: Int
  pts_gte: Int
  pts_in: [Int!]
  pts_lt: Int
  pts_lte: Int
  pts_not: Int
  pts_not_in: [Int!]
  range: String
  range_contains: String
  range_ends_with: String
  range_gt: String
  range_gte: String
  range_in: [String!]
  range_lt: String
  range_lte: String
  range_not: String
  range_not_contains: String
  range_not_ends_with: String
  range_not_in: [String!]
  range_not_starts_with: String
  range_starts_with: String
  skillId: Int
  skillId_gt: Int
  skillId_gte: Int
  skillId_in: [Int!]
  skillId_lt: Int
  skillId_lte: Int
  skillId_not: Int
  skillId_not_in: [Int!]
  skillline: Int
  skillline_gt: Int
  skillline_gte: Int
  skillline_in: [Int!]
  skillline_lt: Int
  skillline_lte: Int
  skillline_not: Int
  skillline_not_in: [Int!]
  slug: String
  slug_contains: String
  slug_ends_with: String
  slug_gt: String
  slug_gte: String
  slug_in: [String!]
  slug_lt: String
  slug_lte: String
  slug_not: String
  slug_not_contains: String
  slug_not_ends_with: String
  slug_not_in: [String!]
  slug_not_starts_with: String
  slug_starts_with: String
  target: String
  target_contains: String
  target_ends_with: String
  target_gt: String
  target_gte: String
  target_in: [String!]
  target_lt: String
  target_lte: String
  target_not: String
  target_not_contains: String
  target_not_ends_with: String
  target_not_in: [String!]
  target_not_starts_with: String
  target_starts_with: String
  type: Int
  type_gt: Int
  type_gte: Int
  type_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_not: Int
  type_not_in: [Int!]
  unlocks_at: Int
  unlocks_at_gt: Int
  unlocks_at_gte: Int
  unlocks_at_in: [Int!]
  unlocks_at_lt: Int
  unlocks_at_lte: Int
  unlocks_at_not: Int
  unlocks_at_not_in: [Int!]
}

input SkillWhereUniqueInput {
  id: ID
  skillId: Int
}

type User {
  builds(after: String, before: String, first: Int, last: Int, orderBy: BuildOrderByInput, skip: Int, where: BuildWhereInput): [Build!]
  email: String!
  id: ID!
  name: String
}

input UserCreateOneWithoutBuildsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutBuildsInput
}

input UserCreateWithoutBuildsInput {
  email: String!
  id: ID
  name: String
  password: String!
}

input UserWhereInput {
  AND: [UserWhereInput!]
  builds_every: BuildWhereInput
  builds_none: BuildWhereInput
  builds_some: BuildWhereInput
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
}

input UserWhereUniqueInput {
  email: String
  id: ID
}
